{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-sync-library/swag-paypal-pos-wizard-sync-library.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-created-component-helper/swag-paypal-created-component-helper.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-checkout/swag-paypal-checkout.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/swag-paypal-pos-detail-settings/swag-paypal-pos-detail-settings.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/extension/sw-first-run-wizard/sw-first-run-wizard-paypal-credentials/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/constant/swag-paypal.constant.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/extension/sw-sales-channel-modal-detail/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/extension/sw-sales-channel-modal-grid/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/extension/sw-settings-payment/sw-settings-payment-list/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/extension/sw-settings-payment/sw-settings-payment-detail/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/page/swag-paypal/swag-paypal-consts.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/page/swag-paypal/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-settings-hint/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-behavior/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-checkout/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-created-component-helper/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-credentials/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-express/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-installment/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-plus/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-pui/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-settings-icon/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-spb/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-plugin-box-with-onboarding/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-locale-field/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions/extensions/swag-paypal-payment-action-capture/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions/swag-paypal-payment-consts.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions/extensions/swag-paypal-payment-action-refund/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions/extensions/swag-paypal-payment-action-void/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions-v2/extensions/swag-paypal-payment-action-v2-capture/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-details-v2/swag-paypal-order-consts.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions-v2/extensions/swag-paypal-payment-action-v2-refund/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions-v2/extensions/swag-paypal-payment-action-v2-void/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions-v2/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-details-v1/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-details-v2/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-text-field/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-textarea-field/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/extension/sw-order-detail/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/page/swag-paypal-payment-detail/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/core/service/api/swag-paypal-api-credentials.service.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/core/service/api/swag-paypal-pos-setting.api.service.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/core/service/api/swag-paypal-pos.api.service.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/core/service/api/swag-paypal-pos-webhook-register.service.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/core/service/api/swag-paypal-payment.service.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/core/service/api/swag-paypal-order.service.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/core/service/api/swag-paypal-payment-method.service.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/core/service/api/swag-paypal-dispute.api.service.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/init/api-service.init.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/init/translation.init.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/icons.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/init/svg-icons.init.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-status/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-account/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-status-view/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-boolean-radio/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-detail-logs/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-getting-started/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-continue-setup/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/extension/sw-sales-channel-menu/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/extension/sw-sales-channel-modal/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/swag-paypal-pos/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/swag-paypal-pos-detail-synced-products/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/swag-paypal-pos-detail-overview/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/swag-paypal-pos-detail-settings/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/swag-paypal-pos-detail-runs/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-connection/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-connection-success/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-connection-disconnect/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-customization/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-product-selection/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-sync-prices/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-sync-library/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-finish/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-disputes/page/swag-paypal-disputes-detail/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-disputes/page/swag-paypal-disputes-list/swag-paypal-disputes-consts.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-disputes/page/swag-paypal-disputes-list/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-disputes/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions-v2/swag-paypal-payment-actions-v2.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions/swag-paypal-payment-actions.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/mixin/swag-paypal-credentials-loader.mixin.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/extension/sw-sales-channel-modal-grid/sw-sales-channel-modal-grid.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions/swag-paypal-payment-actions.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-connection/swag-paypal-pos-wizard-connection.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-payment-method-bancontact.svg","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-payment-method-p24.svg","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/extension/sw-order-detail/sw-order-detail.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-disputes/page/swag-paypal-disputes-detail/swag-paypal-disputes-detail.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-payment-method-sepa.svg","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-plus/swag-paypal-plus.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-installment/swag-paypal-installment.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/page/swag-paypal-payment-detail/swag-paypal-payment-detail.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-connection/swag-paypal-pos-wizard-connection.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/swag-paypal-pos-detail-overview/swag-paypal-pos-detail-overview.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-connection-disconnect/swag-paypal-pos-wizard-connection-disconnect.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/extension/sw-first-run-wizard/sw-first-run-wizard-paypal-credentials/sw-first-run-wizard-paypal-credentials.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg sync nonrecursive svg$","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-payment-method-giropay.svg","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-details-v2/swag-paypal-payment-details-v2.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/page/swag-paypal-payment-detail/swag-paypal-payment-detail.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/swag-paypal-pos-detail-synced-products/swag-paypal-pos-detail-synced-products.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/extension/sw-settings-payment/sw-settings-payment-detail/sw-settings-payment-detail.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/extension/sw-settings-payment/sw-settings-payment-list/sw-settings-payment-list.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/swag-paypal-pos-detail-settings/swag-paypal-pos-detail-settings.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-locale-field/swag-paypal-locale-field.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-text-field/swag-paypal-text-field.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-sync-library/swag-paypal-pos-wizard-sync-library.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-spb/swag-paypal-spb.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/swag-paypal-pos-detail-overview/swag-paypal-pos-detail-overview.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-disputes/acl/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/extension/sw-first-run-wizard/sw-first-run-wizard-paypal-credentials/sw-first-run-wizard-paypal-credentials.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-status/swag-paypal-pos-status.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-plus/swag-paypal-plus.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions-v2/extensions/swag-paypal-payment-action-v2-refund/swag-paypal-payment-action-v2-refund.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-disputes/page/swag-paypal-disputes-detail/swag-paypal-disputes-detail.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-payment-method-pay-upon-invoice.svg","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/page/swag-paypal/swag-paypal.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-connection-success/swag-paypal-pos-wizard-connection-success.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-product-selection/swag-paypal-pos-wizard-product-selection.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-disputes/page/swag-paypal-disputes-list/swag-paypal-disputes-list.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-url-field/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions/extensions/swag-paypal-payment-action-void/swag-paypal-payment-action-void.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-express/swag-paypal-express.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/mixin/swag-paypal-pos-log-label.mixin.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-finish/swag-paypal-pos-wizard-finish.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-continue-setup/swag-paypal-pos-continue-setup.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-payment-method-paypal.svg","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-connection-disconnect/swag-paypal-pos-wizard-connection-disconnect.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/extension/sw-sales-channel-modal-detail/sw-sales-channel-modal-detail.html.twig","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/swag-paypal-pos/swag-paypal-pos.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-payment-method-eps.svg","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/swag-paypal-pos/swag-paypal-pos.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions/extensions/swag-paypal-payment-action-refund/swag-paypal-payment-action-refund.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-detail-logs/swag-paypal-pos-detail-logs.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/swag-paypal-pos-detail-synced-products/swag-paypal-pos-detail-synced-products.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions-v2/extensions/swag-paypal-payment-action-v2-capture/swag-paypal-payment-action-v2-capture.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-checkout/swag-paypal-checkout.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard/swag-paypal-pos-wizard.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-payment-method-blik.svg","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-status-view/swag-paypal-pos-status-view.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-customization/swag-paypal-pos-wizard-customization.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-plugin-box-with-onboarding/sw-plugin-box-with-onboarding.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-details-v1/swag-paypal-payment-details-v1.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard/swag-paypal-pos-wizard.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-settings-hint/swag-paypal-settings-hint.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-settings-hint/swag-paypal-settings-hint.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/extension/sw-settings-payment/sw-settings-payment-detail/sw-settings-payment-detail.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-status/swag-paypal-pos-status.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-sync-prices/swag-paypal-pos-wizard-sync-prices.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-disputes/page/swag-paypal-disputes-list/swag-paypal-disputes-list.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/mixin/swag-paypal-pos-catch-error.mixin.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions-v2/extensions/swag-paypal-payment-action-v2-void/swag-paypal-payment-action-v2-void.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-locale-field/swag-paypal-locale-field.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-getting-started/swag-paypal-pos-getting-started.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-payment-method-multibanco.svg","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-account/swag-paypal-pos-account.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/extension/sw-order-detail/sw-order-detail.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-payment-method-sofort.svg","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-multicolor.svg","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-getting-started/swag-paypal-pos-getting-started.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-behavior/swag-paypal-behavior.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-payment-method-iDEAL.svg","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/extension/sw-sales-channel-modal-grid/sw-sales-channel-modal-grid.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/acl/index.js","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-account/swag-paypal-pos-account.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-continue-setup/swag-paypal-pos-continue-setup.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/swag-paypal-pos-detail-runs/swag-paypal-pos-detail-runs.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-sync-prices/swag-paypal-pos-wizard-sync-prices.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/extension/sw-settings-payment/sw-settings-payment-list/sw-settings-payment-list.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-payment-method-trustly.svg","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-boolean-radio/swag-paypal-pos-boolean-radio.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-payment-method-credit-and-debit-card.svg","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/extension/sw-sales-channel-modal-detail/sw-sales-channel-modal-detail.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-settings-icon/swag-paypal-settings-icon.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-boolean-radio/swag-paypal-pos-boolean-radio.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/component/swag-paypal-pos-detail-logs/swag-paypal-pos-detail-logs.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-finish/swag-paypal-pos-wizard-finish.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-textarea-field/swag-paypal-textarea-field.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-connection-success/swag-paypal-pos-wizard-connection-success.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/page/swag-paypal/swag-paypal.scss","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/wizard/swag-paypal-pos-wizard-customization/swag-paypal-pos-wizard-customization.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-pos/page/swag-paypal-pos-detail-runs/swag-paypal-pos-detail-runs.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-pui/swag-paypal-pui.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-payment-method-mybank.svg","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions/extensions/swag-paypal-payment-action-capture/swag-paypal-payment-action-capture.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal-payment/component/swag-paypal-payment-actions-v2/swag-paypal-payment-actions-v2.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/module/swag-paypal/components/swag-paypal-credentials/swag-paypal-credentials.html.twig","webpack:////Users/m.stegmeyer/Sites/shopware6.2/custom/plugins/paypal/src/Resources/app/administration/src/app/assets/icons/svg/icons-paypal-payment-method-oxxo.svg"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","content","locals","add","default","Shopware","Component","override","template","inject","mixins","data","config","isLoading","setDefault","computed","sandboxMode","this","onboardingUrl","onboardingUrlSandbox","onboardingUrlLive","onboardingCallback","buttonConfig","$super","reduce","acc","button","action","onClickNext","credentialsProvided","credentialsProvidedLive","credentialsProvidedSandbox","created","createdComponent","methods","fetchPayPalConfig","onPayPalCredentialsLoadSuccess","clientId","clientSecret","merchantPayerId","sandbox","setConfig","onPayPalCredentialsLoadFailed","createNotificationError","message","$tc","duration","suffix","$set","isGetCredentialsSuccessful","saveConfig","then","$emit","Promise","resolve","catch","testApiCredentials","systemConfigApiService","getValues","values","finally","saveValues","SwagPaypalPaymentMethodService","setDefaultPaymentForSalesChannel","sandboxSetting","SwagPayPalApiCredentialsService","validateApiCredentials","response","credentialsValid","reject","errorResponse","errors","map","error","detail","join","onCredentialsChanged","PAYPAL_POS_SALES_CHANNEL_TYPE_ID","PAYPAL_POS_SALES_CHANNEL_EXTENSION","isPayPalPosSalesChannel","salesChannelTypeId","salesChannelTypes","find","type","id","merchantIntegrations","needsOnboarding","item","keys","includes","toUpperCase","fetchMerchantIntegrations","getMerchantIntegrations","disableActiveSwitch","acl","can","paymentMethod","MERCHANT_LOCATION_GERMANY","MERCHANT_LOCATION_OTHER","Defaults","Criteria","Data","Utils","register","isSaveSuccessful","isTestSuccessful","isTestSandboxSuccessful","clientIdFilled","clientSecretFilled","clientIdSandboxFilled","clientSecretSandboxFilled","sandboxChecked","salesChannels","isSetDefaultPaymentSuccessful","isSettingDefaultPaymentMethods","savingDisabled","messageBlankErrorState","showCredentials","allowShowCredentials","constants","metaInfo","title","$createTitle","showSPBCard","$refs","configComponent","allConfigs","null","showPlusCard","salesChannelRepository","repositoryFactory","clientIdErrorState","clientSecretErrorState","clientIdSandboxErrorState","clientSecretSandboxErrorState","hasError","watch","handler","defaultConfig","selectedSalesChannelId","deep","criteria","addFilter","equalsAny","storefrontSalesChannelTypeId","apiSalesChannelTypeId","search","Context","api","res","translated","code","onSave","save","onChangeLoading","state","payPalWebhookErrors","errorMessage","forEach","swagPayPalCheckoutComponent","getPaymentMethodsAndMerchantIntegrations","onSetPaymentMethodDefault","preventSave","onChangeCredentialsVisibility","visibility","props","hintText","String","required","actualConfigData","intentOptions","merchantLocationOptions","landingPageOptions","landingPageHint","landingPageOption","toLowerCase","translationKey","loggingLevelOptions","label","checkTextFieldInheritance","length","checkBoolFieldInheritance","Boolean","paymentMethods","iconMap","handler_swag_paypalpaymenthandler","handler_swag_acdchandler","handler_swag_puihandler","handler_swag_bancontactapmhandler","handler_swag_blikapmhandler","handler_swag_epsapmhandler","handler_swag_giropayapmhandler","handler_swag_idealapmhandler","handler_swag_multibancoapmhandler","handler_swag_mybankapmhandler","handler_swag_oxxoapmhandler","handler_swag_p24apmhandler","handler_swag_sofortapmhandler","handler_swag_trustlyapmhandler","handler_swag_sepahandler","plusDeprecationModalOpen","showHintMerchantIdMustBeEnteredManually","paymentMethodRepository","paymentMethodCriteria","equals","addSorting","sort","isLive","isSandbox","isOnboardingPPCPFinished","sepaPaymentMethod","pm","formattedHandlerIdentifier","onboardingStatus","plusCheckoutEnabled","updateShowCredentials","deactivatePayPalPlus","getPaymentMethods","filter","icon","editLink","params","paymentMethodToggleDisabled","active","onChangePaymentMethodActive","createNotificationSuccess","statusBadgeVariant","variant","statusBadgeColor","onboardingStatusText","status","showEditLink","availabilityToolTip","handlerElements","split","handlerName","snippetKey","$te","closeModal","isTestingLive","isTestingSandbox","isTestLiveSuccessful","testLiveButtonDisabled","testSandboxButtonDisabled","onTest","buttonColorOptions","buttonShapeOptions","isPayPalPLUSActive","isPayPalPLUSInActive","ifItWasNotActive","extend","debounce","onInput","event","checkValue","target","onBlur","removeFocusClass","exec","Module","description","version","targetVersion","color","routes","index","component","path","meta","parentPath","privilege","settingsItem","group","to","iconComponent","backgroundEnabled","utils","paymentResource","maxCaptureValue","Number","orderId","isFinalCapture","captureValue","currency","transactions","amount","showHint","capture","captureAmount","resourceType","intent","resourceId","getResourceId","SwagPayPalPaymentService","capturePayment","$nextTick","$router","replace","$route","createId","autoClose","e","relatedResourceId","related_resources","relatedResource","authorization","order","REFUNDED_STATE","VOIDED_STATE","CAPTURED_STATE","COMPLETED_STATE","CAPTURE_RESOURCE_TYPE","SALE_RESOURCE_TYPE","FAILED_STATE","CANCELLED_STATE","Filter","captures","selectedCapture","existingRefunds","refundAmount","refundableAmount","refundDescription","refundReason","refundInvoiceNumber","selectedCaptureId","dateFilter","getByName","getRefundableCaptures","mapRefunds","preserveCapture","relatedResources","accumulator","sale","push","formatCapture","refund","resource","createDate","create_time","total","capture_id","sale_id","reason","invoiceNumber","refundPayment","voidPayment","firstRelatedResource","modalType","captureableAmount","showVoidButton","setPaymentActionAmounts","setShowVoidButton","formatAmount","spawnModal","nonVoidAbleStates","Math","round","paypalOrder","orderTransactionId","paypalPartnerAttributionId","captureInvoiceNumber","captureNoteToPayer","currencyCode","purchase_units","payments","authorizations","currency_code","SwagPayPalOrderService","captureAuthorization","ORDER_CAPTURE_REFUNDED","ORDER_AUTHORIZATION_CREATED","ORDER_AUTHORIZATION_PARTIALLY_CAPTURED","ORDER_AUTHORIZATION_PENDING","refundNoteToPayer","firstCapture","rawCaptures","refundableCaptures","setCapture","refundCapture","voidAuthorization","createDateTime","updateDateTime","payerId","relatedResourceColumns","rawData","formatDate","update_time","payer","payer_info","payer_id","setRelatedResources","rawRelatedResources","pushRelatedResource","transactionFee","transaction_fee","createRaw","update","paymentMode","payment_mode","a","b","Date","dateTime","hour","minute","second","paymentColumns","setPayments","rawAuthorizations","rawRefunds","refunds","pushPayment","authStatus","payment","getTransactionFee","sellerReceivableBreakdown","seller_receivable_breakdown","paypalFee","paypal_fee","sellerPayableBreakdown","seller_payable_breakdown","isPayPalPayment","isEditable","showTabs","orderRepository","orderCriteria","addAssociation","getAssociation","setLimit","transaction","last","customFields","immediate","setIsPayPalPayment","paymentMethodId","isEmpty","types","orderTransaction","orderTransactionState","stateFailedCancelled","showCanceledPaymentError","showPayPalPayment","showPayPalOrder","showSandboxLiveError","showGeneralError","resetDataAttributes","emitIdentifier","stateMachineState","technicalName","paypalPaymentId","swag_paypal_transaction_id","handlePayPalPayment","paypalOrderId","swag_paypal_order_id","handlePayPalOrder","getOrderDetails","handleError","getPaymentDetails","orderNumber","routeMiddleware","next","currentRoute","children","isChildren","ApiService","Classes","httpClient","loginService","apiEndpoint","sandboxActive","headers","getBasicHeaders","getApiBasePath","handleResponse","authCode","sharedId","nonce","additionalParams","additionalHeaders","post","SwagPayPalPosSettingApiService","apiKey","salesChannelId","salesChannel","forceLanguage","extensions","paypalPosSalesChannel","languageId","languages","assign","currencies","currencyId","countries","countryId","fromSalesChannelId","toSalesChannelId","cloneSalesChannelId","SwagPayPalPosApiService","basicConfig","timeout","runId","page","limit","SwagPayPalPosWebhookRegisterService","delete","payPalPaymentId","apiRoute","captureIsFinal","getDefaultOptions","captureId","noteToPayer","partnerAttributionId","doPostRequest","authorizationId","isFinal","requestParameters","apiVersion","SwagPayPalDisputeApiService","disputeStateFilter","disputeId","Application","initContainer","getContainer","addServiceProvider","container","Locale","deDeSnippets","enGBSnippets","context","require","functional","render","createElement","elementContext","class","staticClass","style","attrs","on","domProps","innerHTML","iconComponents","disabled","disabledText","iconAnimated","subIcon","showSubStatus","validValues","validator","subVariant","statusClasses","iconClasses","subIconClasses","showSubIcon","undefined","lastRun","isError","merchantInfo","accountName","accountEmail","contactEmail","connectionStatusText","connectionStatusVariant","runRepository","loadMerchantData","fetchInformation","merchantInformation","lastFinishedRun","lastCompleteRun","isSyncing","syncErrors","Array","statusErrorLevel","statusCompleteErrorLevel","iconConfig","syncing","warning","success","noRunYet","statusVariant","statusIcon","statusIconComplete","incompleteLastRun","statusTitle","task","getHighestLevel","run","level","max","logs","log","model","prop","optionTrue","optionFalse","inputId","options","castedValue","set","val","sortBy","sortDirection","loadingLogs","disableRouteParams","logRepository","columns","dataIndex","width","sortable","getListCriteria","getMainListingParams","naturalSorting","getList","result","getLabelVariantForItem","posSalesChannelRun","getLabelVariant","getLabelForItem","getLabel","onContinueSetup","buildMenuTree","menuItems","posIds","typeId","menuItem","onAddChannel","onCloseModal","previousApiKey","reverse","paypalPosSalesChannelRepository","salesChannelCriteria","loadSalesChannel","entity","updateRun","updateCloneSalesChannel","updateButtons","onButtonClick","redirect","setTimeout","loadLastRun","needComplete","not","first","$forceUpdate","products","actions","callback","onProductDetails","getProductLog","elements","hasSync","paypalPosLog","paypalPosSync","getSyncDate","updatedAt","createdAt","getLevel","syncingRunId","checkForSync","mounted","mountedComponent","forceUpdate","startSync","callable","updateSync","onStartSync","startCompleteSync","onStartProductSync","startProductSync","onStartImageSync","startImageSync","onStartInventorySync","startInventorySync","onSyncAbort","abortSync","unshift","State","mapPropertyErrors","getComponentHelper","ShopwareError","showDeleteModal","showResetModal","isTestingCredentials","isTestCredentialsSuccessful","apiKeyUrl","generateApiUrl","optionSyncPrices","optionNotSyncPrices","optionsReplace","swagPaypalPosSalesChannel","catchAuthenticationError","registerWebhook","catchError","$root","cloneProductVisibility","placeholder","mediaDomain","expression","commit","testCredentials","onConfirmDelete","deleteSalesChannel","unregisterWebhook","onConfirmReset","resetSync","changeLanguage","runs","isCleaningLog","showModal","currentRunId","onShowModal","onClearLogs","startLogCleanup","stepperPages","stepper","currentStep","wizardTitle","displayStepperPages","stepInitialItemVariants","maxNavigationIndex","navigationIndex","navigationSteps","toName","generateStepper","createNewSalesChannel","step","pageName","_isNew","routeToDashboard","routeToDetailOverview","onFinishWizard","finished","activateSalesChannel","silentWebhook","isNewEntity","silent","webhookPromise","systemLanguageId","imageDomain","productStreamId","syncPrices","salesChannelService","generateKey","accessKey","toggleLoading","isConnecting","setTitle","position","routeToConnectionSuccess","toggleLoadingState","mixin","saveSalesChannel","Function","posData","isFetchingInformation","posUser","firstName","lastName","mail","fullName","parts","routeToCustomization","onDisconnect","routeBackToConnectionSuccess","loading","routeToProductSelection","nextButtonDisabled","manualSalesChannel","hasClone","localCloneSalesChannelId","routeBackToCustomization","routeToSyncLibrary","updateClone","routeBackToSyncLibrary","routeToFinish","shopwareProductsCount","posProductsCount","fetchProductCounts","routeBackToProductSelection","routeToSyncPrices","getProductCount","localCount","remoteCount","routeBackToSyncPrices","onFinish","overview","syncedProducts","settings","wizard","connection","connectionSuccess","connectionDisconnect","customization","productSelection","syncLibrary","finish","capitalizeString","string","dispute","resolutionCenterUrl","orderModuleLink","orderTransactionRepository","orderTransactionCriteria","getDetail","setLinkToOrderModule","errorDetail","getExternalDetailPageLink","dispute_id","disputed_transactions","disputedTransaction","custom","formatTechnicalText","technicalText","getInquiryClass","stage","getDueDate","sellerResponseDueDate","buyerResponseDueDate","copyToClipboard","dom","JSON","stringify","createNotificationInfo","err","DISPUTE_STATE_REQUIRED_ACTION","DISPUTE_STATE_REQUIRED_OTHER_PARTY_ACTION","DISPUTE_STATE_UNDER_PAYPAL_REVIEW","DISPUTE_STATE_RESOLVED","DISPUTE_STATE_OPEN_INQUIRIES","DISPUTE_STATE_APPEALABLE","disputes","disputeStates","disputesColumns","visibleDisputes","slice","list","disputeList","items","sortDisputes","debouncedGetList","formatUpdateDate","formatUpdateTime","day","month","year","onPageChange","onRefresh","onChangeDisputeStateFilter","onSalesChannelChanged","favicon","route","navigation","parent","Mixin","debug","lastOnboardingSandbox","nonceLive","nonceSandbox","payPalPartnerIdLive","payPalPartnerClientIdLive","payPalPartnerIdSandbox","payPalPartnerClientIdSandbox","requestParams","channelId","product","secondaryProducts","capabilities","integrationType","features","displayMode","partnerLogoUrl","createRequestParameter","partnerId","partnerClientId","returnToPartnerUrl","returnUrl","sellerNonce","toString","$on","getPayPalCredentials","window","onboardingCallbackLive","getApplicationRoot","onboardingCallbackSandbox","createScript","destroyed","$off","location","origin","pathname","isArray","append","URLSearchParams","document","getElementById","PAYPAL","renderPayPalButton","payPalScript","src","async","addEventListener","head","appendChild","apps","Signup","clearTimeout","getApiCredentials","client_id","client_secret","warn","webpackContext","req","webpackContextResolve","Error","Service","addPrivilegeMappingEntry","category","roles","viewer","privileges","dependencies","errorUrl","checkInput","currentValue","inputValue","urlPattern","test","validateCurrentValue","changeMode","listToStyles","parentId","styles","newStyles","part","css","media","sourceMap","hasDocument","DEBUG","stylesInDom","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","ssrIdKey","isOldIE","navigator","userAgent","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","obj","remove","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","applyToTag","newObj","textStore","replaceText","replacement","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","sources","btoa","unescape","encodeURIComponent","firstChild","snippet","_i18n","errorText","parameters","salesChannelIds","editor","creator","deleter"],"mappings":"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","file":"static/js/swag-pay-pal.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/swagpaypal/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"0cw9\");\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-wizard-sync-library.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7043a57e\", content, true, {});","module.exports = \"{% block swag_paypal_created_component_helper %}\\n    {# only an empty element needed to render the component #}\\n    <div/>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-checkout.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"a71f5ec6\", content, true, {});","module.exports = \"{% block swag_paypal_pos_detail_settings %}\\n    <div class=\\\"swag-paypal-pos-detail-settings\\\">\\n\\n        {% block swag_paypal_pos_detail_settings_alert %}\\n            <sw-alert class=\\\"swag-paypal-pos-detail-settings__save-alert\\\">\\n                {{ $tc('swag-paypal-pos.detail.settings.saveAlert') }}\\n            </sw-alert>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_detail_settings_basic %}\\n            <sw-card :isLoading=\\\"isLoading\\\" :title=\\\"$tc('swag-paypal-pos.detail.settings.titleGeneralSettings')\\\">\\n                <sw-container columns=\\\"1fr 200px\\\" gap=\\\"0px 30px\\\">\\n\\n                    {% block swag_paypal_pos_detail_settings_input_name %}\\n                        <sw-text-field v-model=\\\"salesChannel.name\\\"\\n                                       required\\n                                       type=\\\"text\\\"\\n                                       validation=\\\"required\\\"\\n                                       :error=\\\"salesChannelNameError\\\"\\n                                       :disabled=\\\"!acl.can('sales_channel.editor')\\\"\\n                                       :label=\\\"$tc('sw-sales-channel.detail.labelInputName')\\\"\\n                                       :placeholder=\\\"placeholder(salesChannel, 'name', $tc('sw-sales-channel.detail.placeholderName'))\\\">\\n                        </sw-text-field>\\n                    {% endblock %}\\n\\n                    {% block swag_paypal_pos_detail_settings_input_active %}\\n                        <sw-switch-field v-model=\\\"salesChannel.active\\\"\\n                                         bordered\\n                                         :disabled=\\\"!acl.can('sales_channel.editor')\\\"\\n                                         :label=\\\"$tc('sw-sales-channel.detail.labelInputActive')\\\"\\n                                         :helpText=\\\"$tc('swag-paypal-pos.detail.settings.activeHelpText')\\\">\\n                        </sw-switch-field>\\n                    {% endblock %}\\n\\n                </sw-container>\\n\\n                {% block swag_paypal_pos_detail_settings_input_media_domain %}\\n                    <swag-paypal-pos-url-field v-model=\\\"swagPaypalPosSalesChannel.mediaDomain\\\"\\n                                               required\\n                                               validation=\\\"required\\\"\\n                                               :error=\\\"swagPaypalPosSalesChannelMediaDomainError\\\"\\n                                               :disabled=\\\"!acl.can('sales_channel.editor')\\\"\\n                                               :label=\\\"$tc('swag-paypal-pos.detail.settings.domain')\\\"\\n                                               :helpText=\\\"$tc('swag-paypal-pos.detail.settings.domainHelpText')\\\"\\n                                               @input=\\\"forceUpdate\\\">\\n                    </swag-paypal-pos-url-field>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_detail_settings_input_language %}\\n                    <sw-entity-single-select v-model=\\\"salesChannel.languageId\\\"\\n                                             entity=\\\"language\\\"\\n                                             required\\n                                             :disabled=\\\"!acl.can('sales_channel.editor')\\\"\\n                                             :label=\\\"$tc('global.entities.language')\\\"\\n                                             @change=\\\"changeLanguage\\\">\\n                    </sw-entity-single-select>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_detail_settings_input_product_stream %}\\n                    {# ToDo PPI-56 - implement support for product streams #}\\n                    <sw-entity-single-select v-if=\\\"false\\\"\\n                                             v-model=\\\"swagPaypalPosSalesChannel.productStreamId\\\"\\n                                             entity=\\\"product_stream\\\"\\n                                             :disabled=\\\"!acl.can('sales_channel.editor')\\\"\\n                                             :label=\\\"$tc('swag-paypal-pos.detail.settings.productStream')\\\"\\n                                             @change=\\\"forceUpdate\\\">\\n                    </sw-entity-single-select>\\n                {% endblock %}\\n\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_detail_settings_sync %}\\n            <div class=\\\"sw-sales-channel-detail-sync\\\">\\n                <sw-card :isLoading=\\\"isLoading\\\" :title=\\\"$tc('swag-paypal-pos.detail.settings.titleSync')\\\">\\n\\n                    {% block swag_paypal_pos_detail_settings_sync_input %}\\n                        <sw-radio-field\\n                            v-model=\\\"salesChannel.extensions.paypalPosSalesChannel.replace\\\"\\n                            :label=\\\"$tc('swag-paypal-pos.wizard.syncLibrary.description')\\\"\\n                            class=\\\"swag-paypal-pos-boolean-radio\\\"\\n                            :options=\\\"optionsReplace\\\"\\n                            :disabled=\\\"!acl.can('sales_channel.editor')\\\"\\n                            @input=\\\"forceUpdate\\\">\\n                        </sw-radio-field>\\n                    {% endblock %}\\n\\n                </sw-card>\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_detail_settings_prices %}\\n            <div class=\\\"sw-sales-channel-detail-prices\\\">\\n                <sw-card :isLoading=\\\"isLoading\\\" :title=\\\"$tc('swag-paypal-pos.detail.settings.titlePrices')\\\">\\n\\n                    {% block swag_paypal_pos_detail_settings_prices_input %}\\n                        <swag-paypal-pos-boolean-radio\\n                            v-model=\\\"swagPaypalPosSalesChannel.syncPrices\\\"\\n                            class=\\\"swag-paypal-pos-detail-settings__sync-prices-input\\\"\\n                            :label=\\\"$tc('swag-paypal-pos.wizard.syncPrices.description')\\\"\\n                            :optionTrue=\\\"optionSyncPrices\\\"\\n                            :optionFalse=\\\"optionNotSyncPrices\\\"\\n                            :disabled=\\\"!acl.can('sales_channel.editor')\\\"\\n                            @input=\\\"forceUpdate\\\">\\n                        </swag-paypal-pos-boolean-radio>\\n                    {% endblock %}\\n\\n                </sw-card>\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_detail_settings_credentials %}\\n            <div class=\\\"sw-sales-channel-detail-credentials\\\">\\n                <sw-card :isLoading=\\\"isLoading\\\" :title=\\\"$tc('swag-paypal-pos.detail.settings.titleCredentials')\\\">\\n\\n                    {% block swag_paypal_pos_detail_settings_credentials_apikey %}\\n                        <sw-password-field v-model=\\\"swagPaypalPosSalesChannel.apiKey\\\"\\n                                           class=\\\"swag-paypal-pos-detail-settings__apikey-field\\\"\\n                                           required\\n                                           :label=\\\"$tc('swag-paypal-pos.authentication.labelApiKey')\\\"\\n                                           :disabled=\\\"!acl.can('sales_channel.editor')\\\"\\n                                           :placeholder=\\\"$tc('swag-paypal-pos.authentication.placeholderApiKey')\\\"\\n                                           @input=\\\"forceUpdate\\\">\\n                            <template #suffix>\\n\\n                                {% block swag_paypal_pos_detail_settings_credentials_apikey_suffix %}\\n                                    <sw-icon name=\\\"default-lock-key\\\"\\n                                             class=\\\"swag-paypal-pos-detail-settings__apikey-suffix\\\"\\n                                             size=\\\"22px\\\">\\n                                    </sw-icon>\\n                                {% endblock %}\\n                            </template>\\n                        </sw-password-field>\\n                    {% endblock %}\\n\\n                    {% block swag_paypal_pos_detail_settings_credentials_apikey_description %}\\n                        <div class=\\\"swag-paypal-pos-detail-settings__apikey-description\\\">\\n\\n                            {% block swag_paypal_pos_detail_settings_credentials_apikey_description_text %}\\n                                <div class=\\\"swag-paypal-pos-detail-settings__apikey-description-text\\\">\\n                                    {{ $tc('swag-paypal-pos.authentication.apiKeyDescription') }}\\n                                </div>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_pos_detail_settings_credentials_apikey_description_link %}\\n                                <sw-external-link v-if=\\\"acl.can('sales_channel.editor')\\\"\\n                                                  :href=\\\"apiKeyUrl\\\"\\n                                                  class=\\\"swag-paypal-pos-detail-settings__apikey-description-link\\\">\\n\\n                                    {% block swag_paypal_pos_detail_settings_credentials_apikey_description_link_text %}\\n                                        {{ $tc('swag-paypal-pos.authentication.buttonGenerateKey') }}\\n                                    {% endblock %}\\n                                </sw-external-link>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n\\n                </sw-card>\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_detail_settings_options %}\\n            <sw-card :title=\\\"$tc('swag-paypal-pos.detail.settings.optionsTitle')\\\" :isLoading=\\\"isLoading\\\">\\n                <template #grid>\\n                    <sw-container rows=\\\"auto auto\\\">\\n\\n                        {% block swag_paypal_pos_detail_settings_options_reset %}\\n                            <sw-card-section>\\n                                <sw-container columns=\\\"1fr 175px\\\" gap=\\\"0px 30px\\\" class=\\\"swag-paypal-pos-detail-settings__reset-sync\\\">\\n\\n                                    {% block sw_sales_channel_detail_base_options_reset_text %}\\n                                        <div class=\\\"swag-paypal-pos-detail-settings__options-description-text\\\">\\n                                            {{ $tc('swag-paypal-pos.detail.settings.reset.descriptionText') }}\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {% block sw_sales_channel_detail_base_options_reset_button %}\\n                                        <div class=\\\"swag-paypal-pos-detail-settings__options-button\\\">\\n                                            <sw-button size=\\\"small\\\"\\n                                                       :disabled=\\\"!acl.can('sales_channel.editor')\\\"\\n                                                       @click=\\\"showResetModal = true\\\">\\n                                                {{ $tc('swag-paypal-pos.detail.settings.reset.buttonTitle') }}\\n                                            </sw-button>\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                </sw-container>\\n                            </sw-card-section>\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_pos_detail_settings_options_delete %}\\n                            <sw-card-section divider=\\\"top\\\">\\n                                <sw-container columns=\\\"1fr 175px\\\" gap=\\\"0px 30px\\\" class=\\\"sw-sales-channel-detail-settings__delete-sales-channel\\\">\\n\\n                                    {% block sw_sales_channel_detail_base_options_delete_text %}\\n                                        <div class=\\\"swag-paypal-pos-detail-settings__options-description-text\\\">\\n                                            <strong>{{ $tc('global.default.warning') }}</strong>\\n                                            {{ $tc('sw-sales-channel.detail.textDeleteSalesChannelWarning') }}\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {% block sw_sales_channel_detail_base_options_delete_button %}\\n                                        <div class=\\\"swag-paypal-pos-detail-settings__options-button\\\">\\n                                            <sw-button\\n                                                variant=\\\"danger\\\"\\n                                                size=\\\"small\\\"\\n                                                :disabled=\\\"!acl.can('sales_channel.deleter')\\\"\\n                                                @click=\\\"showDeleteModal = true\\\">\\n                                                {{ $tc('sw-sales-channel.detail.buttonDelete') }}\\n                                            </sw-button>\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                </sw-container>\\n                            </sw-card-section>\\n                        {% endblock %}\\n\\n                    </sw-container>\\n                </template>\\n\\n                {% block swag_paypal_pos_detail_settings_options_reset_modal %}\\n                    <sw-modal v-if=\\\"showResetModal\\\"\\n                              class=\\\"swag-paypal-pos-detail-settings__reset-sync-modal\\\"\\n                              ref=\\\"modal\\\"\\n                              variant=\\\"small\\\"\\n                              :title=\\\"$tc('swag-paypal-pos.detail.settings.reset.modalTitle')\\\"\\n                              @modal-close=\\\"showResetModal = false\\\">\\n\\n                        {% block swag_paypal_pos_detail_settings_options_reset_modal_confirmtext %}\\n                            <p class=\\\"swag-paypal-pos-detail-settings__reset-modal-confirm-text\\\">\\n                                {{ $tc('swag-paypal-pos.detail.settings.reset.modalConfirmText') }}\\n                            </p>\\n                            <p class=\\\"swag-paypal-pos-detail-settings__reset-modal-name\\\">\\n                                <strong>{{ placeholder(salesChannel, 'name') }}</strong>\\n                            </p>\\n                            <p>{{ $tc('swag-paypal-pos.detail.settings.reset.modalTextInfo') }}</p>\\n                        {% endblock %}\\n\\n                        {% block sw_sales_channel_detail_options_reset_modal_footer %}\\n                            <template #modal-footer>\\n\\n                                {% block swag_paypal_pos_detail_settings_options_reset_modal_abort %}\\n                                    <sw-button size=\\\"small\\\" @click=\\\"showResetModal = false\\\">\\n                                        {{ $tc('global.default.cancel') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block swag_paypal_pos_detail_settings_options_reset_modal_confirm %}\\n                                    <sw-button size=\\\"small\\\"\\n                                               variant=\\\"danger\\\"\\n                                               @click=\\\"onConfirmReset\\\">\\n                                        {{ $tc('swag-paypal-pos.detail.settings.reset.modalButtonConfirm') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                            </template>\\n                        {% endblock %}\\n\\n                    </sw-modal>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_detail_settings_options_delete_modal %}\\n                    <sw-modal v-if=\\\"showDeleteModal\\\"\\n                              class=\\\"sw-sales-channel-detail-settings__delete-modal\\\"\\n                              ref=\\\"modal\\\"\\n                              variant=\\\"small\\\"\\n                              :title=\\\"$tc('sw-sales-channel.detail.deleteModalTitle')\\\"\\n                              @modal-close=\\\"showDeleteModal = false\\\">\\n\\n                        {% block swag_paypal_pos_detail_settings_options_delete_modal_confirmtext %}\\n                            <p class=\\\"sw-sales-channel-detail-settings__delete-modal-confirm-text\\\">\\n                                {{ $tc('sw-sales-channel.detail.textConfirmDelete') }}\\n                            </p>\\n                            <p class=\\\"sw-sales-channel-detail-settings__delete-modal-name\\\">\\n                                <strong>{{ placeholder(salesChannel, 'name') }}</strong>\\n                            </p>\\n                            <p>{{ $tc('sw-sales-channel.detail.textDeleteInfo') }}</p>\\n                        {% endblock %}\\n\\n                        {% block sw_sales_channel_detail_options_delete_modal_footer %}\\n                            <template #modal-footer>\\n\\n                                {% block swag_paypal_pos_detail_settings_options_delete_modal_abort %}\\n                                    <sw-button size=\\\"small\\\" @click=\\\"showDeleteModal = false\\\">\\n                                        {{ $tc('global.default.cancel') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block swag_paypal_pos_detail_settings_options_delete_modal_confirm %}\\n                                    <sw-button size=\\\"small\\\"\\n                                               variant=\\\"danger\\\"\\n                                               @click=\\\"onConfirmDelete\\\">\\n                                        {{ $tc('sw-sales-channel.detail.buttonConfirmDelete') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                            </template>\\n                        {% endblock %}\\n\\n                    </sw-modal>\\n                {% endblock %}\\n\\n            </sw-card>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","import template from './sw-first-run-wizard-paypal-credentials.html.twig';\nimport './sw-first-run-wizard-paypal-credentials.scss';\n\nconst { Component } = Shopware;\n\nComponent.override('sw-first-run-wizard-paypal-credentials', {\n    template,\n\n    inject: [\n        'systemConfigApiService',\n        'SwagPaypalPaymentMethodService',\n    ],\n\n    mixins: [\n        'notification',\n        'swag-paypal-credentials-loader',\n    ],\n\n    data() {\n        return {\n            config: {},\n            isLoading: false,\n            setDefault: false,\n        };\n    },\n\n    computed: {\n        sandboxMode() {\n            return this.config['SwagPayPal.settings.sandbox'] || false;\n        },\n\n        onboardingUrl() {\n            return this.sandboxMode ? this.onboardingUrlSandbox : this.onboardingUrlLive;\n        },\n\n        onboardingCallback() {\n            return this.sandboxMode ? 'onboardingCallbackSandbox' : 'onboardingCallbackLive';\n        },\n\n        buttonConfig() {\n            const prev = this.$super('buttonConfig');\n\n            return prev.reduce((acc, button) => {\n                if (button.key === 'next') {\n                    button.action = this.onClickNext.bind(this);\n                }\n\n                return [...acc, button];\n            }, []);\n        },\n\n        credentialsProvided() {\n            return (!this.sandboxMode && this.credentialsProvidedLive)\n                || (this.sandboxMode && this.credentialsProvidedSandbox);\n        },\n\n        credentialsProvidedLive() {\n            return !!this.config['SwagPayPal.settings.clientId']\n                && !!this.config['SwagPayPal.settings.clientSecret'];\n        },\n\n        credentialsProvidedSandbox() {\n            return !!this.config['SwagPayPal.settings.clientIdSandbox']\n                && !!this.config['SwagPayPal.settings.clientSecretSandbox'];\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.$super('createdComponent');\n            this.fetchPayPalConfig();\n        },\n\n        onPayPalCredentialsLoadSuccess(clientId, clientSecret, merchantPayerId, sandbox) {\n            this.setConfig(clientId, clientSecret, merchantPayerId, sandbox);\n        },\n\n        onPayPalCredentialsLoadFailed(sandbox) {\n            this.setConfig('', '', sandbox, '');\n            this.createNotificationError({\n                message: this.$tc('swag-paypal-frw-credentials.messageFetchedError'),\n                duration: 10000,\n            });\n        },\n\n        setConfig(clientId, clientSecret, merchantPayerId, sandbox) {\n            const suffix = sandbox ? 'Sandbox' : '';\n            this.$set(this.config, `SwagPayPal.settings.clientId${suffix}`, clientId);\n            this.$set(this.config, `SwagPayPal.settings.clientSecret${suffix}`, clientSecret);\n            this.$set(this.config, `SwagPayPal.settings.merchantPayerId${suffix}`, merchantPayerId);\n        },\n\n        onClickNext() {\n            if (!this.credentialsProvided) {\n                this.createNotificationError({\n                    message: this.$tc('swag-paypal-frw-credentials.messageNoCredentials'),\n                });\n                return Promise.resolve(true);\n            }\n\n            // Do not test the credentials if they have been fetched from the PayPal api\n            if (this.isGetCredentialsSuccessful) {\n                return this.saveConfig().then(() => {\n                    this.$emit('frw-redirect', 'sw.first.run.wizard.index.plugins');\n\n                    return Promise.resolve(false);\n                }).catch(() => {\n                    return Promise.resolve(true);\n                });\n            }\n\n            return this.testApiCredentials()\n                .then(() => {\n                    return this.saveConfig();\n                }).then(() => {\n                    this.$emit('frw-redirect', 'sw.first.run.wizard.index.plugins');\n\n                    return Promise.resolve(false);\n                }).catch(() => {\n                    return Promise.resolve(true);\n                });\n        },\n\n        fetchPayPalConfig() {\n            this.isLoading = true;\n            return this.systemConfigApiService.getValues('SwagPayPal.settings', null)\n                .then(values => {\n                    this.config = values;\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        saveConfig() {\n            this.isLoading = true;\n            return this.systemConfigApiService.saveValues(this.config, null)\n                .then(() => {\n                    if (this.setDefault) {\n                        return this.SwagPaypalPaymentMethodService.setDefaultPaymentForSalesChannel();\n                    }\n\n                    return Promise.resolve();\n                }).then(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        testApiCredentials() {\n            this.isLoading = true;\n\n            const sandbox = this.config['SwagPayPal.settings.sandbox'];\n            const sandboxSetting = sandbox ? 'Sandbox' : '';\n            const clientId = this.config[`SwagPayPal.settings.clientId${sandboxSetting}`];\n            const clientSecret = this.config[`SwagPayPal.settings.clientSecret${sandboxSetting}`];\n\n            return this.SwagPayPalApiCredentialsService.validateApiCredentials(clientId, clientSecret, sandbox)\n                .then((response) => {\n                    const credentialsValid = response.credentialsValid;\n\n                    if (credentialsValid) {\n                        this.isLoading = false;\n                        return Promise.resolve();\n                    }\n\n                    return Promise.reject();\n                }).catch((errorResponse) => {\n                    if (errorResponse.response.data && errorResponse.response.data.errors) {\n                        const message = errorResponse.response.data.errors.map((error) => {\n                            return error.detail;\n                        }).join(' / ');\n\n                        this.createNotificationError({\n                            message: message,\n                        });\n                        this.isLoading = false;\n                    }\n\n                    return Promise.reject();\n                });\n        },\n\n        onCredentialsChanged() {\n            this.isGetCredentialsSuccessful = null;\n        },\n    },\n});\n","export const PAYPAL_POS_SALES_CHANNEL_TYPE_ID = '1ce0868f406d47d98cfe4b281e62f099';\nexport const PAYPAL_POS_SALES_CHANNEL_EXTENSION = 'paypalPosSalesChannel';\n\nexport default {\n    PAYPAL_POS_SALES_CHANNEL_TYPE_ID,\n    PAYPAL_POS_SALES_CHANNEL_EXTENSION,\n};\n","import template from './sw-sales-channel-modal-detail.html.twig';\nimport './sw-sales-channel-modal-detail.scss';\nimport { PAYPAL_POS_SALES_CHANNEL_TYPE_ID } from '../../../constant/swag-paypal.constant';\n\nconst { Component } = Shopware;\n\nComponent.override('sw-sales-channel-modal-detail', {\n    template,\n\n    methods: {\n        isPayPalPosSalesChannel(salesChannelTypeId) {\n            return salesChannelTypeId === PAYPAL_POS_SALES_CHANNEL_TYPE_ID;\n        },\n    },\n});\n","import template from './sw-sales-channel-modal-grid.html.twig';\nimport './sw-sales-channel-modal-grid.scss';\nimport { PAYPAL_POS_SALES_CHANNEL_TYPE_ID } from '../../../constant/swag-paypal.constant';\n\nconst { Component } = Shopware;\n\nComponent.override('sw-sales-channel-modal-grid', {\n    template,\n\n    methods: {\n        isPayPalPosSalesChannel(salesChannelTypeId) {\n            const salesChannelType = this.salesChannelTypes.find(type => type.id === salesChannelTypeId);\n\n            return salesChannelType.id === PAYPAL_POS_SALES_CHANNEL_TYPE_ID;\n        },\n    },\n});\n","import template from './sw-settings-payment-list.html.twig';\nimport './sw-settings-payment-list.scss';\n\nconst { Component } = Shopware;\n\nComponent.override('sw-settings-payment-list', {\n    template,\n\n    inject: [\n        'SwagPayPalApiCredentialsService',\n    ],\n\n    data() {\n        return {\n            merchantIntegrations: [],\n        };\n    },\n\n    methods: {\n        needsOnboarding(item) {\n            const integrationIds = Object.keys(this.merchantIntegrations);\n\n            if (!integrationIds.includes(item.id)) {\n                return false;\n            }\n\n            return this.merchantIntegrations[item.id].toUpperCase() === 'INACTIVE';\n        },\n\n        fetchMerchantIntegrations() {\n            this.SwagPayPalApiCredentialsService\n                .getMerchantIntegrations()\n                .then((response) => {\n                    this.merchantIntegrations = response;\n                });\n        },\n    },\n});\n","import template from './sw-settings-payment-detail.html.twig';\nimport './sw-settings-payment-detail.scss';\n\nconst { Component } = Shopware;\n\nComponent.override('sw-settings-payment-detail', {\n    template,\n\n    inject: [\n        'SwagPayPalApiCredentialsService',\n    ],\n\n    data() {\n        return {\n            merchantIntegrations: [],\n        };\n    },\n\n    computed: {\n        disableActiveSwitch() {\n            return !this.acl.can('payment.editor') || this.needsOnboarding(this.paymentMethod.id);\n        },\n    },\n\n    methods: {\n        createdComponent() {\n            this.$super('createdComponent');\n\n            this.fetchMerchantIntegrations();\n        },\n\n        needsOnboarding(id) {\n            const integrationIds = Object.keys(this.merchantIntegrations);\n\n            if (!integrationIds.includes(id)) {\n                return false;\n            }\n\n            return this.merchantIntegrations[id].toUpperCase() === 'INACTIVE';\n        },\n\n        fetchMerchantIntegrations() {\n            this.SwagPayPalApiCredentialsService\n                .getMerchantIntegrations()\n                .then((response) => {\n                    this.merchantIntegrations = response;\n                });\n        },\n    },\n});\n\n","/**\n * @deprecated tag:v6.0.0 - Will be removed without replacement.\n */\nexport const MERCHANT_LOCATION_GERMANY = 'germany';\n\n/**\n * @deprecated tag:v6.0.0 - Will be removed without replacement.\n */\nexport const MERCHANT_LOCATION_OTHER = 'other';\n\nexport default {\n    MERCHANT_LOCATION_GERMANY,\n    MERCHANT_LOCATION_OTHER,\n};\n","import template from './swag-paypal.html.twig';\nimport './swag-paypal.scss';\nimport constants from './swag-paypal-consts';\n\nconst { Component, Defaults } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { hasOwnProperty } = Shopware.Utils.object;\n\nComponent.register('swag-paypal', {\n    template,\n\n    inject: [\n        'SwagPayPalApiCredentialsService',\n        'SwagPaypalPaymentMethodService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        'notification',\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            isSaveSuccessful: false,\n            isTestSuccessful: false,\n            isTestSandboxSuccessful: false,\n            clientIdFilled: false,\n            clientSecretFilled: false,\n            clientIdSandboxFilled: false,\n            clientSecretSandboxFilled: false,\n            sandboxChecked: false,\n            salesChannels: [],\n            config: null,\n            isSetDefaultPaymentSuccessful: false,\n            isSettingDefaultPaymentMethods: false,\n            savingDisabled: false,\n            messageBlankErrorState: null,\n            showCredentials: false,\n            allowShowCredentials: true,\n            ...constants,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        showSPBCard() {\n            if (hasOwnProperty(this.config, 'SwagPayPal.settings.merchantLocation') &&\n                    this.config['SwagPayPal.settings.merchantLocation'] !== null\n            ) {\n                return this.config['SwagPayPal.settings.merchantLocation'] === this.MERCHANT_LOCATION_OTHER;\n            }\n\n            const defaultConfig = this.$refs.configComponent.allConfigs.null;\n\n            return defaultConfig['SwagPayPal.settings.merchantLocation'] === this.MERCHANT_LOCATION_OTHER;\n        },\n\n        /**\n         * @deprecated tag:v6.0.0 - Will be removed without replacement.\n         */\n        showPlusCard() {\n            if (hasOwnProperty(this.config, 'SwagPayPal.settings.merchantLocation') &&\n                    this.config['SwagPayPal.settings.merchantLocation'] !== null\n            ) {\n                return this.config['SwagPayPal.settings.merchantLocation'] === this.MERCHANT_LOCATION_GERMANY;\n            }\n\n            const defaultConfig = this.$refs.configComponent.allConfigs.null;\n\n            return defaultConfig['SwagPayPal.settings.merchantLocation'] === this.MERCHANT_LOCATION_GERMANY;\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        clientIdErrorState() {\n            if (this.sandboxChecked || this.clientIdFilled) {\n                return null;\n            }\n\n            return this.messageBlankErrorState;\n        },\n\n        clientSecretErrorState() {\n            if (this.sandboxChecked || this.clientSecretFilled) {\n                return null;\n            }\n\n            return this.messageBlankErrorState;\n        },\n\n        clientIdSandboxErrorState() {\n            if (!this.sandboxChecked || this.clientIdSandboxFilled) {\n                return null;\n            }\n\n            return this.messageBlankErrorState;\n        },\n\n        clientSecretSandboxErrorState() {\n            if (!this.sandboxChecked || this.clientSecretSandboxFilled) {\n                return null;\n            }\n\n            return this.messageBlankErrorState;\n        },\n\n        hasError() {\n            return (!this.sandboxChecked && !(this.clientIdFilled && this.clientSecretFilled)) ||\n                (this.sandboxChecked && !(this.clientIdSandboxFilled && this.clientSecretSandboxFilled));\n        },\n    },\n\n    watch: {\n        config: {\n            handler() {\n                const defaultConfig = this.$refs.configComponent.allConfigs.null;\n                const salesChannelId = this.$refs.configComponent.selectedSalesChannelId;\n\n                if (salesChannelId === null) {\n                    this.clientIdFilled = !!this.config['SwagPayPal.settings.clientId'];\n                    this.clientSecretFilled = !!this.config['SwagPayPal.settings.clientSecret'];\n                    this.clientIdSandboxFilled = !!this.config['SwagPayPal.settings.clientIdSandbox'];\n                    this.clientSecretSandboxFilled = !!this.config['SwagPayPal.settings.clientSecretSandbox'];\n                    this.sandboxChecked = !!this.config['SwagPayPal.settings.sandbox'];\n                } else {\n                    this.clientIdFilled = !!this.config['SwagPayPal.settings.clientId']\n                        || !!defaultConfig['SwagPayPal.settings.clientId'];\n                    this.clientSecretFilled = !!this.config['SwagPayPal.settings.clientSecret']\n                        || !!defaultConfig['SwagPayPal.settings.clientSecret'];\n                    this.clientIdSandboxFilled = !!this.config['SwagPayPal.settings.clientIdSandbox']\n                        || !!defaultConfig['SwagPayPal.settings.clientIdSandbox'];\n                    this.clientSecretSandboxFilled = !!this.config['SwagPayPal.settings.clientSecretSandbox']\n                        || !!defaultConfig['SwagPayPal.settings.clientSecretSandbox'];\n                    this.sandboxChecked = !!this.config['SwagPayPal.settings.sandbox']\n                        || !!defaultConfig['SwagPayPal.settings.sandbox'];\n                }\n            },\n            deep: true,\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = true;\n\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equalsAny('typeId', [\n                Defaults.storefrontSalesChannelTypeId,\n                Defaults.apiSalesChannelTypeId,\n            ]));\n\n            this.salesChannelRepository.search(criteria, Shopware.Context.api).then(res => {\n                res.add({\n                    id: null,\n                    translated: {\n                        name: this.$tc('sw-sales-channel-switch.labelDefaultOption'),\n                    },\n                });\n\n                this.salesChannels = res;\n            }).finally(() => {\n                this.isLoading = false;\n            });\n\n            this.messageBlankErrorState = {\n                code: 1,\n                detail: this.$tc('swag-paypal.messageNotBlank'),\n            };\n        },\n\n        onSave() {\n            if (this.hasError) {\n                return;\n            }\n\n            this.save();\n        },\n\n        onChangeLoading(state) {\n            this.isLoading = state;\n        },\n\n        save() {\n            this.isLoading = true;\n\n            this.$refs.configComponent.save().then((response) => {\n                this.isSaveSuccessful = true;\n\n                if (response.payPalWebhookErrors) {\n                    const errorMessage = this.$tc('swag-paypal.settingForm.messageWebhookError');\n                    response.payPalWebhookErrors.forEach((error) => {\n                        this.createNotificationError({\n                            message: `${errorMessage}<br><br><ul><li>${error}</li></ul>`,\n                        });\n                    });\n                }\n\n                // reload payment methods and merchant integrations after saving configuration\n                this.$refs.swagPayPalCheckoutComponent.getPaymentMethodsAndMerchantIntegrations();\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onSetPaymentMethodDefault() {\n            this.isSettingDefaultPaymentMethods = true;\n\n            this.SwagPaypalPaymentMethodService.setDefaultPaymentForSalesChannel(\n                this.$refs.configComponent.selectedSalesChannelId,\n            ).then(() => {\n                this.isSettingDefaultPaymentMethods = false;\n                this.isSetDefaultPaymentSuccessful = true;\n            });\n        },\n\n        preventSave(mode) {\n            if (!mode) {\n                this.savingDisabled = false;\n                return;\n            }\n\n            this.savingDisabled = true;\n        },\n\n        onChangeCredentialsVisibility(visibility) {\n            this.showCredentials = visibility;\n        },\n    },\n});\n","import './swag-paypal-settings-hint.scss';\nimport template from './swag-paypal-settings-hint.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-settings-hint', {\n    template,\n\n    props: {\n        hintText: {\n            type: String,\n            required: true,\n        },\n    },\n});\n","import template from './swag-paypal-behavior.html.twig';\nimport constants from '../../page/swag-paypal/swag-paypal-consts';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-behavior', {\n    template,\n\n    inject: [\n        'acl',\n    ],\n\n    props: {\n        actualConfigData: {\n            type: Object,\n            required: true,\n        },\n        allConfigs: {\n            type: Object,\n            required: true,\n        },\n        selectedSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            ...constants,\n        };\n    },\n\n    computed: {\n        intentOptions() {\n            return [\n                {\n                    id: 'CAPTURE',\n                    name: this.$tc('swag-paypal.settingForm.behavior.intent.CAPTURE'),\n                },\n                {\n                    id: 'AUTHORIZE',\n                    name: this.$tc('swag-paypal.settingForm.behavior.intent.AUTHORIZE'),\n                },\n            ];\n        },\n\n        /**\n         * @deprecated tag:v6.0.0 Will be removed without replacement.\n         */\n        merchantLocationOptions() {\n            return [\n                {\n                    id: this.MERCHANT_LOCATION_GERMANY,\n                    name: this.$tc('swag-paypal.settingForm.behavior.merchantLocation.germany'),\n                },\n                {\n                    id: this.MERCHANT_LOCATION_OTHER,\n                    name: this.$tc('swag-paypal.settingForm.behavior.merchantLocation.other'),\n                },\n            ];\n        },\n\n        landingPageOptions() {\n            return [\n                {\n                    id: 'LOGIN',\n                    name: this.$tc('swag-paypal.settingForm.behavior.landingPage.options.login'),\n                },\n                {\n                    id: 'BILLING',\n                    name: this.$tc('swag-paypal.settingForm.behavior.landingPage.options.billing'),\n                },\n                {\n                    id: 'NO_PREFERENCE',\n                    name: this.$tc('swag-paypal.settingForm.behavior.landingPage.options.no_preference'),\n                },\n            ];\n        },\n\n        landingPageHint() {\n            let landingPageOption = this.actualConfigData['SwagPayPal.settings.landingPage'] ||\n                this.allConfigs.null['SwagPayPal.settings.landingPage'];\n            landingPageOption = landingPageOption.toLowerCase();\n            const translationKey = `swag-paypal.settingForm.behavior.landingPage.helpText.${landingPageOption}`;\n            return this.$tc(translationKey);\n        },\n\n        loggingLevelOptions() {\n            return [\n                {\n                    value: 300,\n                    label: this.$tc('swag-paypal.settingForm.behavior.loggingLevel.options.basic'),\n                },\n                {\n                    value: 100,\n                    label: this.$tc('swag-paypal.settingForm.behavior.loggingLevel.options.advanced'),\n                },\n            ];\n        },\n    },\n\n    methods: {\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkBoolFieldInheritance(value) {\n            return typeof value !== 'boolean';\n        },\n    },\n});\n","import template from './swag-paypal-checkout.html.twig';\nimport './swag-paypal-checkout.scss';\n\nconst { Component, Context } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.register('swag-paypal-checkout', {\n    template,\n\n    inject: [\n        'acl',\n        'repositoryFactory',\n        'SwagPayPalApiCredentialsService',\n    ],\n\n    mixins: [\n        'notification',\n        'swag-paypal-credentials-loader',\n    ],\n\n    props: {\n        actualConfigData: {\n            type: Object,\n            required: true,\n        },\n        allConfigs: {\n            type: Object,\n            required: true,\n        },\n        selectedSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        clientIdErrorState: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        clientSecretErrorState: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        clientIdSandboxErrorState: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        clientSecretSandboxErrorState: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        clientIdFilled: {\n            type: Boolean,\n            required: true,\n        },\n        clientSecretFilled: {\n            type: Boolean,\n            required: true,\n        },\n        clientIdSandboxFilled: {\n            type: Boolean,\n            required: true,\n        },\n        clientSecretSandboxFilled: {\n            type: Boolean,\n            required: true,\n        },\n        isLoading: {\n            type: Boolean,\n            required: true,\n        },\n        allowShowCredentials: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            showCredentials: false,\n            paymentMethods: [],\n            iconMap: {\n                handler_swag_paypalpaymenthandler: 'paypal-payment-method-paypal',\n                handler_swag_acdchandler: 'paypal-payment-method-credit-and-debit-card',\n                handler_swag_puihandler: 'paypal-payment-method-pay-upon-invoice',\n                handler_swag_bancontactapmhandler: 'paypal-payment-method-bancontact',\n                handler_swag_blikapmhandler: 'paypal-payment-method-blik',\n                handler_swag_epsapmhandler: 'paypal-payment-method-eps',\n                handler_swag_giropayapmhandler: 'paypal-payment-method-giropay',\n                handler_swag_idealapmhandler: 'paypal-payment-method-iDEAL',\n                handler_swag_multibancoapmhandler: 'paypal-payment-method-multibanco',\n                handler_swag_mybankapmhandler: 'paypal-payment-method-mybank',\n                handler_swag_oxxoapmhandler: 'paypal-payment-method-oxxo',\n                handler_swag_p24apmhandler: 'paypal-payment-method-p24',\n                handler_swag_sofortapmhandler: 'paypal-payment-method-sofort',\n                handler_swag_trustlyapmhandler: 'paypal-payment-method-trustly',\n                handler_swag_sepahandler: 'paypal-payment-method-sepa',\n            },\n            merchantIntegrations: {},\n            plusDeprecationModalOpen: false,\n            showHintMerchantIdMustBeEnteredManually: false,\n        };\n    },\n\n    computed: {\n        paymentMethodRepository() {\n            return this.repositoryFactory.create('payment_method');\n        },\n\n        paymentMethodCriteria() {\n            const criteria = new Criteria();\n\n            criteria.addFilter(Criteria.equals('plugin.name', 'SwagPayPal'));\n            criteria.addSorting(Criteria.sort('position', 'ASC'), true);\n\n            return criteria;\n        },\n\n        isLive() {\n            return !this.isSandbox;\n        },\n\n        isSandbox() {\n            return this.actualConfigData['SwagPayPal.settings.sandbox'];\n        },\n\n        isOnboardingPPCPFinished() {\n            const sepaPaymentMethod = this.paymentMethods\n                .find((pm) => pm.formattedHandlerIdentifier === 'handler_swag_sepahandler');\n\n            if (!sepaPaymentMethod) {\n                return false;\n            }\n\n            return this.onboardingStatus(sepaPaymentMethod) === 'active';\n        },\n    },\n\n    watch: {\n        isSandbox() {\n            this.$emit('on-save-settings');\n        },\n\n        isOnboardingPPCPFinished() {\n            // open the deactivate PayPalPLUS modal if ppcp onboarding was successful and PayPalPlus is still active\n            const plusCheckoutEnabled = this.actualConfigData['SwagPayPal.settings.plusCheckoutEnabled'];\n\n            if (!plusCheckoutEnabled) {\n                return;\n            }\n\n            this.plusDeprecationModalOpen = plusCheckoutEnabled && this.isOnboardingPPCPFinished;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            await this.getPaymentMethodsAndMerchantIntegrations();\n        },\n\n        updateShowCredentials() {\n            this.$emit('on-change-credentials-visibility', this.showCredentials);\n        },\n\n        deactivatePayPalPlus() {\n            this.$set(this.actualConfigData, 'SwagPayPal.settings.plusCheckoutEnabled', false);\n            this.$set(this.actualConfigData, 'SwagPayPal.settings.merchantLocation', 'other');\n            this.$set(this.actualConfigData, 'SwagPayPal.settings.spbAlternativePaymentMethodsEnabled', false);\n            this.$emit('on-deactivate-paypal-plus');\n\n            this.plusDeprecationModalOpen = false;\n        },\n\n        async getPaymentMethodsAndMerchantIntegrations() {\n            await this.fetchMerchantIntegrations();\n            await this.getPaymentMethods();\n        },\n\n        async getPaymentMethods() {\n            this.paymentMethods = await this.paymentMethodRepository.search(this.paymentMethodCriteria, Context.api)\n                .then((response) => {\n                    return response.filter((paymentMethod) => {\n                        return paymentMethod.formattedHandlerIdentifier !== 'handler_swag_pospayment';\n                    });\n                });\n        },\n\n        async fetchMerchantIntegrations() {\n            this.merchantIntegrations = await this.SwagPayPalApiCredentialsService\n                .getMerchantIntegrations()\n                .then((response) => {\n                    return response;\n                });\n        },\n\n        icon(paymentMethod) {\n            return this.iconMap[paymentMethod.formattedHandlerIdentifier];\n        },\n\n        editLink(paymentMethod) {\n            return {\n                name: 'sw.settings.payment.detail',\n                params: {\n                    id: paymentMethod.id,\n                },\n            };\n        },\n\n        needsOnboarding(paymentMethod) {\n            return this.onboardingStatus(paymentMethod)?.toUpperCase() !== 'ACTIVE';\n        },\n\n        paymentMethodToggleDisabled(paymentMethod) {\n            // should be able to deactivate active payment method\n            if (paymentMethod.active) {\n                return false;\n            }\n\n            return this.needsOnboarding(paymentMethod);\n        },\n\n        onboardingStatus(paymentMethod) {\n            return this.merchantIntegrations[paymentMethod.id];\n        },\n\n        onChangePaymentMethodActive(paymentMethod) {\n            paymentMethod.active = !paymentMethod.active;\n\n            this.paymentMethodRepository.save(paymentMethod, Context.api)\n                .then(() => {\n                    const state = paymentMethod.active ? 'active' : 'inactive';\n\n                    this.createNotificationSuccess({\n                        message: this.$tc(\n                            `swag-paypal.settingForm.checkout.paymentMethodStatusChangedSuccess.${state}`,\n                            0,\n                            { name: paymentMethod.name },\n                        ),\n                    });\n                });\n        },\n\n        statusBadgeVariant(paymentMethod) {\n            let variant;\n\n            switch (this.onboardingStatus(paymentMethod)) {\n                case 'active': variant = 'success'; break;\n                case 'limited': variant = 'danger'; break;\n                case 'inactive': variant = 'neutral'; break;\n                case 'pending': variant = 'info'; break;\n                default: variant = 'neutral';\n            }\n\n            return variant;\n        },\n\n        statusBadgeColor(paymentMethod) {\n            let variant;\n\n            switch (this.onboardingStatus(paymentMethod)) {\n                case 'active':\n                    variant = '#37D046';\n                    break;\n                case 'limited':\n                    variant = '#ff9800';\n                    break;\n                case 'inactive':\n                    variant = '#52667A';\n                    break;\n                case 'pending':\n                    variant = '#189eff';\n                    break;\n                default:\n                    variant = '#189eff';\n            }\n\n            return variant;\n        },\n\n        onboardingStatusText(paymentMethod) {\n            const status = this.onboardingStatus(paymentMethod);\n\n            return this.$tc(`swag-paypal.settingForm.checkout.onboardingStatusText.${status}`);\n        },\n\n        showEditLink(paymentMethod) {\n            return this.onboardingStatus(paymentMethod) === 'active';\n        },\n\n        availabilityToolTip(paymentMethod) {\n            const handlerElements = paymentMethod.formattedHandlerIdentifier.split('_');\n            const handlerName = handlerElements[handlerElements.length - 1];\n            const snippetKey = `swag-paypal.settingForm.checkout.availabilityToolTip.${handlerName}`;\n\n            if (!this.$te(snippetKey)) {\n                return null;\n            }\n\n            return this.$tc(snippetKey);\n        },\n\n        closeModal() {\n            this.plusDeprecationModalOpen = false;\n        },\n\n        onPayPalCredentialsLoadSuccess(clientId, clientSecret, merchantPayerId, sandbox) {\n            this.setConfig(clientId, clientSecret, merchantPayerId, sandbox);\n            this.$emit('on-save-settings');\n        },\n\n        onPayPalCredentialsLoadFailed(sandbox) {\n            this.setConfig('', '', '', sandbox);\n            this.createNotificationError({\n                message: this.$tc('swag-paypal.settingForm.credentials.button.messageFetchedError'),\n                duration: 10000,\n            });\n        },\n\n        setConfig(clientId, clientSecret, merchantPayerId, sandbox) {\n            const suffix = sandbox ? 'Sandbox' : '';\n            this.$set(this.actualConfigData, `SwagPayPal.settings.clientId${suffix}`, clientId);\n            this.$set(this.actualConfigData, `SwagPayPal.settings.clientSecret${suffix}`, clientSecret);\n            this.$set(this.actualConfigData, `SwagPayPal.settings.merchantPayerId${suffix}`, merchantPayerId);\n        },\n\n        checkBoolFieldInheritance(value) {\n            return typeof value !== 'boolean';\n        },\n    },\n});\n","import template from './swag-paypal-created-component-helper.html.twig';\n\nconst { Component } = Shopware;\n\n/* This component exists only to implement the createdComponent live-cycle\n * hook in without using it of the actual component. the reason is that there\n * are problems in the cloud with other plugins (e.g. Mollie) that already\n * overwrite created-Component. Since the order of plugin overrides is not deterministic,\n * race conditions can occur here.\n*/\n\nComponent.register('swag-paypal-created-component-helper', {\n    template,\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.$emit('on-created-component');\n        },\n    },\n});\n","import template from './swag-paypal-credentials.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-credentials', {\n    template,\n\n    inject: [\n        'acl',\n        'SwagPayPalApiCredentialsService',\n    ],\n\n    mixins: [\n        'notification',\n    ],\n\n    props: {\n        actualConfigData: {\n            type: Object,\n            required: true,\n        },\n        allConfigs: {\n            type: Object,\n            required: true,\n        },\n        selectedSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        clientIdErrorState: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        clientSecretErrorState: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        clientIdSandboxErrorState: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        clientSecretSandboxErrorState: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        clientIdFilled: {\n            type: Boolean,\n            required: true,\n        },\n        clientSecretFilled: {\n            type: Boolean,\n            required: true,\n        },\n        clientIdSandboxFilled: {\n            type: Boolean,\n            required: true,\n        },\n        clientSecretSandboxFilled: {\n            type: Boolean,\n            required: true,\n        },\n        isLoading: {\n            type: Boolean,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            isTestingLive: false,\n            isTestingSandbox: false,\n            isTestLiveSuccessful: false,\n            isTestSandboxSuccessful: false,\n        };\n    },\n\n    computed: {\n        testLiveButtonDisabled() {\n            return this.isLoading || !this.clientSecretFilled || !this.clientIdFilled || this.isTestingLive;\n        },\n\n        testSandboxButtonDisabled() {\n            return this.isLoading || !this.clientSecretSandboxFilled || !this.clientIdSandboxFilled || this.isTestingSandbox;\n        },\n    },\n\n    methods: {\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkBoolFieldInheritance(value) {\n            return typeof value !== 'boolean';\n        },\n\n        onTest(sandbox) {\n            if (sandbox) {\n                this.isTestingSandbox = true;\n            } else {\n                this.isTestingLive = true;\n            }\n\n            const sandboxSetting = sandbox ? 'Sandbox' : '';\n            const clientId = this.actualConfigData[`SwagPayPal.settings.clientId${sandboxSetting}`] ||\n                    this.allConfigs.null[`SwagPayPal.settings.clientId${sandboxSetting}`];\n            const clientSecret = this.actualConfigData[`SwagPayPal.settings.clientSecret${sandboxSetting}`] ||\n                    this.allConfigs.null[`SwagPayPal.settings.clientSecret${sandboxSetting}`];\n\n            this.SwagPayPalApiCredentialsService.validateApiCredentials(\n                clientId,\n                clientSecret,\n                sandbox,\n            ).then((response) => {\n                const credentialsValid = response.credentialsValid;\n\n                if (credentialsValid) {\n                    if (sandbox) {\n                        this.isTestingSandbox = false;\n                        this.isTestSandboxSuccessful = true;\n                    } else {\n                        this.isTestingLive = false;\n                        this.isTestLiveSuccessful = true;\n                    }\n                }\n            }).catch((errorResponse) => {\n                if (errorResponse.response.data && errorResponse.response.data.errors) {\n                    let message = `<b>${this.$tc('swag-paypal.settingForm.messageTestError')}</b> `;\n                    message += errorResponse.response.data.errors.map((error) => {\n                        return error.detail;\n                    }).join(' / ');\n\n                    this.createNotificationError({\n                        message: message,\n                    });\n\n                    if (sandbox) {\n                        this.isTestingSandbox = false;\n                        this.isTestSandboxSuccessful = false;\n                    } else {\n                        this.isTestingLive = false;\n                        this.isTestLiveSuccessful = false;\n                    }\n                }\n            });\n        },\n\n        /**\n         * @deprecated tag:v6.0.0 Will be removed without replacement.\n         */\n        onPayPalCredentialsLoadSuccess(clientId, clientSecret, sandbox) {\n            if (sandbox) {\n                this.$set(this.actualConfigData, 'SwagPayPal.settings.clientIdSandbox', clientId);\n                this.$set(this.actualConfigData, 'SwagPayPal.settings.clientSecretSandbox', clientSecret);\n            } else {\n                this.$set(this.actualConfigData, 'SwagPayPal.settings.clientId', clientId);\n                this.$set(this.actualConfigData, 'SwagPayPal.settings.clientSecret', clientSecret);\n            }\n        },\n\n        /**\n         * @deprecated tag:v6.0.0 Will be removed without replacement.\n         */\n        onPayPalCredentialsLoadFailed(sandbox) {\n            if (sandbox) {\n                this.$set(this.actualConfigData, 'SwagPayPal.settings.clientIdSandbox', '');\n                this.$set(this.actualConfigData, 'SwagPayPal.settings.clientSecretSandbox', '');\n                this.$set(this.actualConfigData, 'SwagPayPal.settings.merchantPayerIdSandbox', '');\n            } else {\n                this.$set(this.actualConfigData, 'SwagPayPal.settings.clientId', '');\n                this.$set(this.actualConfigData, 'SwagPayPal.settings.clientSecret', '');\n                this.$set(this.actualConfigData, 'SwagPayPal.settings.merchantPayerId', '');\n            }\n            this.createNotificationError({\n                message: this.$tc('swag-paypal.settingForm.credentials.button.messageFetchedError'),\n                duration: 10000,\n            });\n        },\n    },\n});\n","import template from './swag-paypal-express.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-express', {\n    template,\n\n    inject: [\n        'acl',\n    ],\n\n    props: {\n        actualConfigData: {\n            type: Object,\n            required: true,\n        },\n        allConfigs: {\n            type: Object,\n            required: true,\n        },\n        selectedSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    computed: {\n        buttonColorOptions() {\n            return [\n                {\n                    id: 'blue',\n                    name: this.$tc('swag-paypal.settingForm.express.ecsButtonColor.options.blue'),\n                },\n                {\n                    id: 'black',\n                    name: this.$tc('swag-paypal.settingForm.express.ecsButtonColor.options.black'),\n                },\n                {\n                    id: 'gold',\n                    name: this.$tc('swag-paypal.settingForm.express.ecsButtonColor.options.gold'),\n                },\n                {\n                    id: 'silver',\n                    name: this.$tc('swag-paypal.settingForm.express.ecsButtonColor.options.silver'),\n                },\n                {\n                    id: 'white',\n                    name: this.$tc('swag-paypal.settingForm.express.ecsButtonColor.options.white'),\n                },\n            ];\n        },\n        buttonShapeOptions() {\n            return [\n                {\n                    id: 'pill',\n                    name: this.$tc('swag-paypal.settingForm.express.ecsButtonShape.options.pill'),\n                },\n                {\n                    id: 'rect',\n                    name: this.$tc('swag-paypal.settingForm.express.ecsButtonShape.options.rect'),\n                },\n            ];\n        },\n    },\n\n    methods: {\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkBoolFieldInheritance(value) {\n            return typeof value !== 'boolean';\n        },\n\n        preventSave(mode) {\n            this.$emit('preventSave', mode);\n        },\n    },\n});\n","import template from './swag-paypal-installment.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-installment', {\n    template,\n\n    inject: [\n        'acl',\n    ],\n\n    props: {\n        actualConfigData: {\n            type: Object,\n            required: true,\n        },\n        allConfigs: {\n            type: Object,\n            required: true,\n        },\n        selectedSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    methods: {\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkBoolFieldInheritance(value) {\n            return typeof value !== 'boolean';\n        },\n    },\n});\n","import template from './swag-paypal-plus.html.twig';\nimport './swag-paypal-plus.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @deprecated tag:v6.0.0 - Will be removed without replacement.\n */\nComponent.register('swag-paypal-plus', {\n    template,\n\n    inject: [\n        'acl',\n    ],\n\n    props: {\n        actualConfigData: {\n            type: Object,\n            required: true,\n        },\n        allConfigs: {\n            type: Object,\n            required: true,\n        },\n        selectedSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    computed: {\n        isPayPalPLUSActive() {\n            return this.actualConfigData['SwagPayPal.settings.plusCheckoutEnabled'];\n        },\n\n        isPayPalPLUSInActive() {\n            return !this.isPayPalPLUSActive;\n        },\n    },\n\n    methods: {\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkBoolFieldInheritance(value) {\n            return typeof value !== 'boolean';\n        },\n\n        ifItWasNotActive() {\n            return !this.actualConfigData['SwagPayPal.settings.plusCheckoutEnabled'];\n        },\n    },\n});\n","import template from './swag-paypal-pui.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-pui', {\n    template,\n\n    inject: [\n        'acl',\n    ],\n\n    props: {\n        actualConfigData: {\n            type: Object,\n            required: true,\n        },\n        allConfigs: {\n            type: Object,\n            required: true,\n        },\n        selectedSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    methods: {\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n    },\n});\n","import template from './swag-paypal-settings-icon.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-settings-icon', {\n    template,\n});\n","import template from './swag-paypal-spb.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-spb', {\n    template,\n\n    inject: [\n        'acl',\n    ],\n\n    props: {\n        actualConfigData: {\n            type: Object,\n            required: true,\n        },\n        allConfigs: {\n            type: Object,\n            required: true,\n        },\n        selectedSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    computed: {\n        buttonColorOptions() {\n            return [\n                {\n                    id: 'blue',\n                    name: this.$tc('swag-paypal.settingForm.express.ecsButtonColor.options.blue'),\n                },\n                {\n                    id: 'black',\n                    name: this.$tc('swag-paypal.settingForm.express.ecsButtonColor.options.black'),\n                },\n                {\n                    id: 'gold',\n                    name: this.$tc('swag-paypal.settingForm.express.ecsButtonColor.options.gold'),\n                },\n                {\n                    id: 'silver',\n                    name: this.$tc('swag-paypal.settingForm.express.ecsButtonColor.options.silver'),\n                },\n                {\n                    id: 'white',\n                    name: this.$tc('swag-paypal.settingForm.express.ecsButtonColor.options.white'),\n                },\n            ];\n        },\n        buttonShapeOptions() {\n            return [\n                {\n                    id: 'pill',\n                    name: this.$tc('swag-paypal.settingForm.express.ecsButtonShape.options.pill'),\n                },\n                {\n                    id: 'rect',\n                    name: this.$tc('swag-paypal.settingForm.express.ecsButtonShape.options.rect'),\n                },\n            ];\n        },\n    },\n\n    methods: {\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkBoolFieldInheritance(value) {\n            return typeof value !== 'boolean';\n        },\n\n        preventSave(mode) {\n            this.$emit('preventSave', mode);\n        },\n    },\n});\n","import template from './sw-plugin-box-with-onboarding.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.extend('swag-paypal-plugin-box-with-onboarding', 'sw-plugin-box', {\n    template,\n\n    props: {\n        paymentMethod: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    methods: {\n        createdComponent() {\n            this.$super('createdComponent');\n        },\n    },\n});\n","import template from './swag-paypal-locale-field.html.twig';\nimport './swag-paypal-locale-field.scss';\n\nconst { Component } = Shopware;\nconst { debounce } = Shopware.Utils;\n\nComponent.extend('swag-paypal-locale-field', 'sw-text-field', {\n    template,\n\n    data() {\n        return {\n            error: null,\n        };\n    },\n\n    methods: {\n        onInput: debounce(function onInput(event) {\n            this.checkValue(event.target.value);\n        }, 350),\n\n        onBlur(event, removeFocusClass) {\n            removeFocusClass();\n            this.checkValue(event.target.value);\n        },\n\n        checkValue(value) {\n            const localeCodeRegex = /^[a-z]{2}_[A-Z]{2}$/;\n\n            this.$emit('change', value || '');\n\n            if (!value || localeCodeRegex.exec(value)) {\n                this.preventSave(false);\n                this.error = null;\n                return;\n            }\n\n            this.preventSave(true);\n            this.error = {\n                code: 1,\n                detail: this.$tc('swag-paypal.settingForm.locale-field.error.detail'),\n            };\n        },\n\n        preventSave(mode) {\n            this.$emit('preventSave', mode);\n        },\n    },\n});\n","import './acl';\nimport './page/swag-paypal';\nimport './components/swag-paypal-settings-hint';\nimport './components/swag-paypal-behavior';\nimport './components/swag-paypal-checkout';\nimport './components/swag-paypal-created-component-helper';\nimport './components/swag-paypal-credentials';\nimport './components/swag-paypal-express';\nimport './components/swag-paypal-installment';\nimport './components/swag-paypal-plus';\nimport './components/swag-paypal-pui';\nimport './components/swag-paypal-settings-icon';\nimport './components/swag-paypal-spb';\nimport './components/swag-paypal-plugin-box-with-onboarding';\nimport './components/swag-paypal-locale-field';\n\nconst { Module } = Shopware;\n\nModule.register('swag-paypal', {\n    type: 'plugin',\n    name: 'SwagPayPal',\n    title: 'swag-paypal.general.mainMenuItemGeneral',\n    description: 'swag-paypal.general.descriptionTextModule',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#9AA8B5',\n    icon: 'default-action-settings',\n\n    routes: {\n        index: {\n            component: 'swag-paypal',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index',\n                privilege: 'swag_paypal.viewer',\n            },\n        },\n    },\n\n    settingsItem: {\n        group: 'plugins',\n        to: 'swag.paypal.index',\n        iconComponent: 'swag-paypal-settings-icon',\n        backgroundEnabled: true,\n        privilege: 'swag_paypal.viewer',\n    },\n});\n","import template from './swag-paypal-payment-action-capture.html.twig';\n\nconst { Component } = Shopware;\nconst utils = Shopware.Utils;\n\nComponent.register('swag-paypal-payment-action-capture', {\n    template,\n\n    inject: ['SwagPayPalPaymentService'],\n\n    mixins: [\n        'notification',\n    ],\n\n    props: {\n        paymentResource: {\n            type: Object,\n            required: true,\n        },\n\n        maxCaptureValue: {\n            type: Number,\n            required: true,\n        },\n\n        orderId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            isFinalCapture: true,\n            captureValue: this.maxCaptureValue,\n            isLoading: true,\n            currency: this.paymentResource.transactions[0].amount.currency,\n        };\n    },\n\n    computed: {\n        showHint() {\n            return this.isFinalCapture && this.captureValue !== this.maxCaptureValue;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = false;\n        },\n\n        capture() {\n            const captureAmount = this.captureValue;\n            const currency = this.currency;\n            const isFinalCapture = this.isFinalCapture;\n            const resourceType = this.paymentResource.intent;\n            const resourceId = this.getResourceId(this.paymentResource);\n\n            this.isLoading = true;\n            this.SwagPayPalPaymentService.capturePayment(\n                this.orderId,\n                resourceType,\n                resourceId,\n                captureAmount,\n                currency,\n                isFinalCapture,\n            ).then(() => {\n                this.createNotificationSuccess({\n                    message: this.$tc('swag-paypal-payment.captureAction.successMessage'),\n                });\n                this.isLoading = false;\n                this.$emit('modal-close');\n                this.$nextTick(() => {\n                    this.$router.replace(`${this.$route.path}?hash=${utils.createId()}`);\n                });\n            }).catch((errorResponse) => {\n                try {\n                    this.createNotificationError({\n                        message: `${errorResponse.response.data.errors[0].title}: ${\n                            errorResponse.response.data.errors[0].detail}`,\n                        autoClose: false,\n                    });\n                } catch (e) {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false,\n                    });\n                } finally {\n                    this.isLoading = false;\n                }\n            });\n        },\n\n        getResourceId(paymentResource) {\n            let relatedResourceId = null;\n            paymentResource.transactions[0].related_resources.forEach((relatedResource) => {\n                if (relatedResource.authorization) {\n                    relatedResourceId = relatedResource.authorization.id;\n                }\n                if (relatedResource.order) {\n                    relatedResourceId = relatedResource.order.id;\n                }\n            });\n            return relatedResourceId;\n        },\n    },\n});\n","export const REFUNDED_STATE = 'refunded';\nexport const VOIDED_STATE = 'voided';\nexport const CAPTURED_STATE = 'captured';\nexport const COMPLETED_STATE = 'completed';\nexport const CAPTURE_RESOURCE_TYPE = 'capture';\nexport const SALE_RESOURCE_TYPE = 'sale';\nexport const FAILED_STATE = 'failed';\nexport const DENIED_STATE = 'denied';\nexport const CANCELLED_STATE = 'cancelled';\n\nexport default {\n    REFUNDED_STATE,\n    VOIDED_STATE,\n    CAPTURED_STATE,\n    COMPLETED_STATE,\n    CAPTURE_RESOURCE_TYPE,\n    SALE_RESOURCE_TYPE,\n    FAILED_STATE,\n    DENIED_STATE,\n    CANCELLED_STATE,\n};\n","import template from './swag-paypal-payment-action-refund.html.twig';\nimport {\n    REFUNDED_STATE,\n    SALE_RESOURCE_TYPE,\n    CAPTURE_RESOURCE_TYPE,\n} from '../../swag-paypal-payment-consts';\n\nconst { Component, Filter } = Shopware;\nconst utils = Shopware.Utils;\n\nComponent.register('swag-paypal-payment-action-refund', {\n    template,\n\n    inject: ['SwagPayPalPaymentService'],\n\n    mixins: [\n        'notification',\n    ],\n\n    props: {\n        paymentResource: {\n            type: Object,\n            required: true,\n        },\n\n        orderId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            captures: [],\n            selectedCapture: {},\n            existingRefunds: [],\n            refundAmount: 0,\n            refundableAmount: 0,\n            refundDescription: '',\n            refundReason: '',\n            refundInvoiceNumber: '',\n            isLoading: true,\n            selectedCaptureId: '',\n        };\n    },\n\n    computed: {\n        dateFilter() {\n            return Filter.getByName('date');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.getRefundableCaptures();\n            this.mapRefunds();\n            this.selectedCaptureId = this.captures[0].id;\n            this.isLoading = false;\n            this.preserveCapture();\n            this.refundAmount = Number(this.captures[0].refundableAmount);\n        },\n\n        getRefundableCaptures() {\n            const relatedResources = this.paymentResource.transactions[0].related_resources;\n\n            this.captures = relatedResources.reduce((accumulator, relatedResource) => {\n                if (relatedResource.sale) {\n                    const sale = relatedResource.sale;\n\n                    if (sale.state !== REFUNDED_STATE) {\n                        accumulator.push(this.formatCapture(sale, SALE_RESOURCE_TYPE));\n                    }\n                }\n\n                if (relatedResource.capture) {\n                    const capture = relatedResource.capture;\n\n                    if (capture.state !== REFUNDED_STATE) {\n                        accumulator.push(this.formatCapture(capture, CAPTURE_RESOURCE_TYPE));\n                    }\n                }\n\n                if (relatedResource.refund) {\n                    this.existingRefunds.push(relatedResource.refund);\n                }\n\n                return accumulator;\n            }, this.captures);\n        },\n\n        formatCapture(resource, resourceType) {\n            const createDate = this.dateFilter(resource.create_time);\n\n            return {\n                label: `${createDate} (${resource.amount.total} ${resource.amount.currency})` +\n                    ` - ${resource.id} [${resource.state}]`,\n                id: resource.id,\n                refundableAmount: resource.amount.total,\n                currency: resource.amount.currency,\n                type: resourceType,\n            };\n        },\n\n        mapRefunds() {\n            this.existingRefunds.forEach((refund) => {\n                const capture = this.captures.find((resource) => {\n                    switch (resource.type) {\n                        case CAPTURE_RESOURCE_TYPE:\n                            return (refund.capture_id === resource.id);\n                        case SALE_RESOURCE_TYPE:\n                            return (refund.sale_id === resource.id);\n                        default:\n                            return false;\n                    }\n                });\n\n                if (capture) {\n                    let refundAmount = Number(refund.amount.total);\n                    if (refundAmount < 0) {\n                        refundAmount *= -1.0;\n                    }\n                    capture.refundableAmount -= refundAmount;\n                }\n            });\n        },\n\n        preserveCapture() {\n            const capture = this.captures.find((selectedCapture) => {\n                return selectedCapture.id === this.selectedCaptureId;\n            });\n\n            this.selectedCapture = capture;\n            this.refundableAmount = Number(capture.refundableAmount);\n            this.refundAmount = Number(capture.refundableAmount);\n        },\n\n        refund() {\n            this.isLoading = true;\n\n            let refundAmount = this.refundAmount;\n            const description = this.refundDescription;\n            const currency = this.selectedCapture.currency;\n            const resourceType = this.selectedCapture.type;\n            const resourceId = this.selectedCapture.id;\n            const reason = this.refundReason;\n            const invoiceNumber = this.refundInvoiceNumber;\n\n            if (refundAmount === 0) {\n                refundAmount = this.refundableAmount;\n            }\n\n            this.SwagPayPalPaymentService.refundPayment(\n                this.orderId,\n                resourceType,\n                resourceId,\n                refundAmount,\n                currency,\n                description,\n                reason,\n                invoiceNumber,\n            ).then(() => {\n                this.createNotificationSuccess({\n                    message: this.$tc('swag-paypal-payment.refundAction.successMessage'),\n                });\n                this.isLoading = false;\n                this.$emit('modal-close');\n                this.$nextTick(() => {\n                    this.$router.replace(`${this.$route.path}?hash=${utils.createId()}`);\n                });\n            }).catch((errorResponse) => {\n                try {\n                    this.createNotificationError({\n                        message: `${errorResponse.response.data.errors[0].title}: ${\n                            errorResponse.response.data.errors[0].detail}`,\n                        autoClose: false,\n                    });\n                } catch (e) {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false,\n                    });\n                } finally {\n                    this.isLoading = false;\n                }\n            });\n        },\n    },\n});\n","import template from './swag-paypal-payment-action-void.html.twig';\n\nconst { Component } = Shopware;\nconst utils = Shopware.Utils;\n\nComponent.register('swag-paypal-payment-action-void', {\n    template,\n\n    inject: ['SwagPayPalPaymentService'],\n\n    mixins: [\n        'notification',\n    ],\n\n    props: {\n        paymentResource: {\n            type: Object,\n            required: true,\n        },\n\n        orderId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n        };\n    },\n\n    methods: {\n        voidPayment() {\n            this.isLoading = true;\n            const resourceType = this.paymentResource.intent;\n            const resourceId = this.getResourceId();\n            const orderId = this.$route.params.id;\n\n            this.SwagPayPalPaymentService.voidPayment(this.orderId, resourceType, resourceId, orderId).then(() => {\n                this.createNotificationSuccess({\n                    message: this.$tc('swag-paypal-payment.voidAction.successMessage'),\n                });\n                this.isLoading = false;\n                this.closeModal();\n                this.$nextTick(() => {\n                    this.$router.replace(`${this.$route.path}?hash=${utils.createId()}`);\n                });\n            }).catch((errorResponse) => {\n                try {\n                    this.createNotificationError({\n                        message: `${errorResponse.response.data.errors[0].title}: ${\n                            errorResponse.response.data.errors[0].detail}`,\n                        autoClose: false,\n                    });\n                } catch (e) {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false,\n                    });\n                } finally {\n                    this.isLoading = false;\n                }\n            });\n        },\n\n        getResourceId() {\n            const firstRelatedResource = this.paymentResource.transactions[0].related_resources[0];\n\n            if (firstRelatedResource.order) {\n                return firstRelatedResource.order.id;\n            }\n\n            return firstRelatedResource.authorization.id;\n        },\n\n        closeModal() {\n            this.$emit('modal-close');\n        },\n    },\n});\n","import template from './swag-paypal-payment-actions.html.twig';\nimport './swag-paypal-payment-actions.scss';\nimport './extensions/swag-paypal-payment-action-capture';\nimport './extensions/swag-paypal-payment-action-refund';\nimport './extensions/swag-paypal-payment-action-void';\nimport {\n    VOIDED_STATE,\n    CAPTURED_STATE,\n    COMPLETED_STATE,\n    CANCELLED_STATE,\n    FAILED_STATE,\n} from './swag-paypal-payment-consts';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-payment-actions', {\n    template,\n\n    inject: [\n        'acl',\n    ],\n\n    props: {\n        paymentResource: {\n            type: Object,\n            required: true,\n        },\n\n        orderId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            modalType: '',\n            refundableAmount: 0,\n            captureableAmount: 0,\n            showVoidButton: false,\n            relatedResources: null,\n        };\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.relatedResources = this.paymentResource.transactions[0].related_resources;\n            this.setPaymentActionAmounts();\n            this.setShowVoidButton();\n            this.captureableAmount = this.formatAmount(this.captureableAmount);\n            this.refundableAmount = this.formatAmount(this.refundableAmount);\n        },\n\n        spawnModal(modalType) {\n            this.modalType = modalType;\n        },\n\n        closeModal() {\n            this.modalType = '';\n        },\n\n        setPaymentActionAmounts() {\n            if (this.relatedResources === null) {\n                return;\n            }\n\n            this.relatedResources.forEach((relatedResource) => {\n                if (relatedResource.authorization) {\n                    if (relatedResource.authorization.state !== COMPLETED_STATE) {\n                        this.captureableAmount += Number(relatedResource.authorization.amount.total);\n                    }\n                }\n\n                if (relatedResource.order) {\n                    if (relatedResource.order.state !== COMPLETED_STATE) {\n                        this.captureableAmount += Number(relatedResource.order.amount.total);\n                    }\n                }\n\n                if (relatedResource.sale) {\n                    this.refundableAmount += Number(relatedResource.sale.amount.total);\n                }\n\n                if (relatedResource.capture) {\n                    const captureAmount = Number(relatedResource.capture.amount.total);\n                    this.captureableAmount -= captureAmount;\n                    this.refundableAmount += captureAmount;\n                }\n\n                if (relatedResource.refund) {\n                    if (relatedResource.refund.state !== FAILED_STATE\n                        && relatedResource.refund.state !== CANCELLED_STATE\n                    ) {\n                        let refund = Number(relatedResource.refund.amount.total);\n                        if (refund > 0) {\n                            refund *= -1.0;\n                        }\n                        this.refundableAmount += refund;\n                    }\n                }\n            });\n        },\n\n        setShowVoidButton() {\n            if (this.relatedResources === null) {\n                return;\n            }\n\n            const firstRelatedResource = this.relatedResources[0];\n\n            if (!firstRelatedResource) {\n                return;\n            }\n\n            const nonVoidAbleStates = [VOIDED_STATE, CAPTURED_STATE, COMPLETED_STATE];\n\n            if (firstRelatedResource.sale) {\n                return;\n            }\n\n            if (firstRelatedResource.order) {\n                const order = firstRelatedResource.order;\n                if (nonVoidAbleStates.includes(order.state)) {\n                    this.captureableAmount = 0;\n                    return;\n                }\n\n                this.showVoidButton = true;\n            }\n\n            if (firstRelatedResource.authorization) {\n                const authorization = firstRelatedResource.authorization;\n                if (nonVoidAbleStates.includes(authorization.state)) {\n                    this.captureableAmount = 0;\n                    return;\n                }\n\n                this.showVoidButton = true;\n            }\n        },\n\n        formatAmount(value) {\n            return Number(`${Math.round(`${value}e2`)}e-2`);\n        },\n    },\n});\n","import template from './swag-paypal-payment-action-v2-capture.html.twig';\n\nconst { Component } = Shopware;\nconst utils = Shopware.Utils;\n\nComponent.register('swag-paypal-payment-action-v2-capture', {\n    template,\n\n    inject: ['SwagPayPalOrderService'],\n\n    mixins: [\n        'notification',\n    ],\n\n    props: {\n        paypalOrder: {\n            type: Object,\n            required: true,\n        },\n\n        orderTransactionId: {\n            type: String,\n            required: true,\n        },\n\n        paypalPartnerAttributionId: {\n            type: String,\n            required: true,\n        },\n\n        captureableAmount: {\n            type: Number,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            authorization: {},\n            isFinalCapture: true,\n            captureAmount: this.captureableAmount,\n            captureInvoiceNumber: '',\n            captureNoteToPayer: '',\n            currencyCode: '',\n            isLoading: true,\n        };\n    },\n\n    computed: {\n        showHint() {\n            return this.isFinalCapture && this.captureAmount !== this.captureableAmount;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.authorization = this.paypalOrder.purchase_units[0].payments.authorizations[0];\n            this.currencyCode = this.authorization.amount.currency_code;\n            this.isLoading = false;\n        },\n\n        capture() {\n            this.isLoading = true;\n\n            let captureAmount = this.captureAmount;\n            if (captureAmount === 0) {\n                captureAmount = this.captureableAmount;\n            }\n\n            this.SwagPayPalOrderService.captureAuthorization(\n                this.orderTransactionId,\n                this.authorization.id,\n                this.currencyCode,\n                captureAmount,\n                this.captureInvoiceNumber,\n                this.captureNoteToPayer,\n                this.paypalPartnerAttributionId,\n                this.isFinalCapture,\n            ).then(() => {\n                this.createNotificationSuccess({\n                    message: this.$tc('swag-paypal-payment.captureAction.successMessage'),\n                });\n                this.isLoading = false;\n                this.$emit('modal-close');\n                this.$nextTick(() => {\n                    this.$router.replace(`${this.$route.path}?hash=${utils.createId()}`);\n                });\n            }).catch((errorResponse) => {\n                try {\n                    this.createNotificationError({\n                        message: `${errorResponse.response.data.errors[0].title}: ${\n                            errorResponse.response.data.errors[0].detail}`,\n                        autoClose: false,\n                    });\n                } catch (e) {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false,\n                    });\n                } finally {\n                    this.isLoading = false;\n                }\n            });\n        },\n    },\n});\n","export const ORDER_CREATED = 'CREATED';\nexport const ORDER_SAVED = 'SAVED';\nexport const ORDER_APPROVED = 'APPROVED';\nexport const ORDER_VOIDED = 'VOIDED';\nexport const ORDER_COMPLETED = 'COMPLETED';\nexport const ORDER_PAYER_ACTION_REQUIRED = 'PAYER_ACTION_REQUIRED';\n\nexport const ORDER_CAPTURE_COMPLETED = 'COMPLETED';\nexport const ORDER_CAPTURE_DECLINED = 'DECLINED';\nexport const ORDER_CAPTURE_PARTIALLY_REFUNDED = 'PARTIALLY_REFUNDED';\nexport const ORDER_CAPTURE_PENDING = 'PENDING';\nexport const ORDER_CAPTURE_REFUNDED = 'REFUNDED';\n\nexport const ORDER_AUTHORIZATION_CREATED = 'CREATED';\nexport const ORDER_AUTHORIZATION_CAPTURED = 'CAPTURED';\nexport const ORDER_AUTHORIZATION_DENIED = 'DENIED';\nexport const ORDER_AUTHORIZATION_EXPIRED = 'EXPIRED';\nexport const ORDER_AUTHORIZATION_PARTIALLY_CAPTURED = 'PARTIALLY_CAPTURED';\nexport const ORDER_AUTHORIZATION_VOIDED = 'VOIDED';\nexport const ORDER_AUTHORIZATION_PENDING = 'PENDING';\n\nexport const ORDER_REFUND_CANCELLED = 'CANCELLED';\nexport const ORDER_REFUND_PENDING = 'PENDING';\nexport const ORDER_REFUND_COMPLETED = 'COMPLETED';\n\nexport default {\n    ORDER_CREATED,\n    ORDER_SAVED,\n    ORDER_APPROVED,\n    ORDER_VOIDED,\n    ORDER_COMPLETED,\n    ORDER_PAYER_ACTION_REQUIRED,\n\n    ORDER_CAPTURE_COMPLETED,\n    ORDER_CAPTURE_DECLINED,\n    ORDER_CAPTURE_PARTIALLY_REFUNDED,\n    ORDER_CAPTURE_PENDING,\n    ORDER_CAPTURE_REFUNDED,\n\n    ORDER_AUTHORIZATION_CREATED,\n    ORDER_AUTHORIZATION_CAPTURED,\n    ORDER_AUTHORIZATION_DENIED,\n    ORDER_AUTHORIZATION_EXPIRED,\n    ORDER_AUTHORIZATION_PARTIALLY_CAPTURED,\n    ORDER_AUTHORIZATION_VOIDED,\n    ORDER_AUTHORIZATION_PENDING,\n\n    ORDER_REFUND_CANCELLED,\n    ORDER_REFUND_PENDING,\n    ORDER_REFUND_COMPLETED,\n};\n","import template from './swag-paypal-payment-action-v2-refund.html.twig';\nimport { ORDER_CAPTURE_REFUNDED } from '../../../swag-paypal-payment-details-v2/swag-paypal-order-consts';\n\nconst { Component, Filter } = Shopware;\nconst utils = Shopware.Utils;\n\nComponent.register('swag-paypal-payment-action-v2-refund', {\n    template,\n\n    inject: ['SwagPayPalOrderService'],\n\n    mixins: [\n        'notification',\n    ],\n\n    props: {\n        paypalOrder: {\n            type: Object,\n            required: true,\n        },\n\n        orderTransactionId: {\n            type: String,\n            required: true,\n        },\n\n        paypalPartnerAttributionId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            captures: [],\n            selectedCapture: {},\n            refundAmount: 0,\n            refundInvoiceNumber: '',\n            refundNoteToPayer: '',\n            selectedCaptureId: '',\n            isLoading: true,\n        };\n    },\n\n    computed: {\n        dateFilter() {\n            return Filter.getByName('date');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.getRefundableCaptures();\n            const firstCapture = this.captures[0];\n            this.selectedCaptureId = firstCapture.id;\n            this.selectedCapture = firstCapture;\n            this.refundAmount = Number(firstCapture.amount.value);\n            this.isLoading = false;\n        },\n\n        getRefundableCaptures() {\n            const rawCaptures = this.paypalOrder.purchase_units[0].payments.captures;\n            const refundableCaptures = [];\n\n            rawCaptures.forEach((capture) => {\n                if (capture.status !== ORDER_CAPTURE_REFUNDED) {\n                    refundableCaptures.push(capture);\n                }\n            });\n\n            this.captures = refundableCaptures;\n        },\n\n        setCapture() {\n            this.selectedCapture = this.captures.find((selectedCapture) => {\n                return selectedCapture.id === this.selectedCaptureId;\n            });\n\n            this.refundAmount = Number(this.selectedCapture.amount.value);\n        },\n\n        refund() {\n            this.isLoading = true;\n\n            let refundAmount = this.refundAmount;\n            if (refundAmount === 0) {\n                refundAmount = this.selectedCapture.amount.value;\n            }\n\n            this.SwagPayPalOrderService.refundCapture(\n                this.orderTransactionId,\n                this.selectedCapture.id,\n                this.paypalOrder.id,\n                this.selectedCapture.amount.currency_code,\n                refundAmount,\n                this.refundInvoiceNumber,\n                this.refundNoteToPayer,\n                this.paypalPartnerAttributionId,\n            ).then(() => {\n                this.createNotificationSuccess({\n                    message: this.$tc('swag-paypal-payment.refundAction.successMessage'),\n                });\n                this.isLoading = false;\n                this.$emit('modal-close');\n                this.$nextTick(() => {\n                    this.$router.replace(`${this.$route.path}?hash=${utils.createId()}`);\n                });\n            }).catch((errorResponse) => {\n                try {\n                    this.createNotificationError({\n                        message: `${errorResponse.response.data.errors[0].title}: ${\n                            errorResponse.response.data.errors[0].detail}`,\n                        autoClose: false,\n                    });\n                } catch (e) {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false,\n                    });\n                } finally {\n                    this.isLoading = false;\n                }\n            });\n        },\n    },\n});\n","import template from './swag-paypal-payment-action-v2-void.html.twig';\n\nconst { Component } = Shopware;\nconst utils = Shopware.Utils;\n\nComponent.register('swag-paypal-payment-action-v2-void', {\n    template,\n\n    inject: ['SwagPayPalOrderService'],\n\n    mixins: [\n        'notification',\n    ],\n\n    props: {\n        paypalOrder: {\n            type: Object,\n            required: true,\n        },\n\n        orderTransactionId: {\n            type: String,\n            required: true,\n        },\n\n        paypalPartnerAttributionId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n        };\n    },\n\n    methods: {\n        voidPayment() {\n            this.isLoading = true;\n            const authorization = this.paypalOrder.purchase_units[0].payments.authorizations[0];\n\n            this.SwagPayPalOrderService.voidAuthorization(\n                this.orderTransactionId,\n                authorization.id,\n                this.paypalPartnerAttributionId,\n            ).then(() => {\n                this.createNotificationSuccess({\n                    message: this.$tc('swag-paypal-payment.voidAction.successMessage'),\n                });\n                this.isLoading = false;\n                this.closeModal();\n                this.$nextTick(() => {\n                    this.$router.replace(`${this.$route.path}?hash=${utils.createId()}`);\n                });\n            }).catch((errorResponse) => {\n                try {\n                    this.createNotificationError({\n                        message: `${errorResponse.response.data.errors[0].title}: ${\n                            errorResponse.response.data.errors[0].detail}`,\n                        autoClose: false,\n                    });\n                } catch (e) {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false,\n                    });\n                } finally {\n                    this.isLoading = false;\n                }\n            });\n        },\n\n        closeModal() {\n            this.$emit('modal-close');\n        },\n    },\n});\n","import template from './swag-paypal-payment-actions-v2.html.twig';\nimport './extensions/swag-paypal-payment-action-v2-capture';\nimport './extensions/swag-paypal-payment-action-v2-refund';\nimport './extensions/swag-paypal-payment-action-v2-void';\nimport './swag-paypal-payment-actions-v2.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-payment-actions-v2', {\n    template,\n\n    inject: [\n        'acl',\n    ],\n\n    props: {\n        paypalOrder: {\n            type: Object,\n            required: true,\n        },\n\n        orderTransactionId: {\n            type: String,\n            required: true,\n        },\n\n        paypalPartnerAttributionId: {\n            type: String,\n            required: true,\n        },\n\n        refundableAmount: {\n            type: Number,\n            required: true,\n        },\n\n        captureableAmount: {\n            type: Number,\n            required: true,\n        },\n\n        showVoidButton: {\n            type: Boolean,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            modalType: '',\n        };\n    },\n\n    methods: {\n        spawnModal(modalType) {\n            this.modalType = modalType;\n        },\n\n        closeModal() {\n            this.modalType = '';\n        },\n    },\n});\n","import template from './swag-paypal-payment-details-v1.html.twig';\n\nconst { Component, Filter } = Shopware;\n\nComponent.register('swag-paypal-payment-details-v1', {\n    template,\n\n    props: {\n        paymentResource: {\n            type: Object,\n            required: true,\n        },\n\n        orderId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            relatedResources: [],\n            createDateTime: '',\n            updateDateTime: '',\n            currency: '',\n            amount: {},\n            payerId: '',\n        };\n    },\n\n    computed: {\n        dateFilter() {\n            return Filter.getByName('date');\n        },\n\n        relatedResourceColumns() {\n            return [\n                {\n                    property: 'type',\n                    label: this.$tc('swag-paypal-payment.transactionHistory.types.type'),\n                    rawData: true,\n                },\n                {\n                    property: 'total',\n                    label: this.$tc('swag-paypal-payment.transactionHistory.types.amount'),\n                    rawData: true,\n                },\n                {\n                    property: 'id',\n                    label: this.$tc('swag-paypal-payment.transactionHistory.types.trackingId'),\n                    rawData: true,\n                },\n                {\n                    property: 'status',\n                    label: this.$tc('swag-paypal-payment.transactionHistory.types.state'),\n                    rawData: true,\n                },\n                {\n                    property: 'transactionFee',\n                    label: this.$tc('swag-paypal-payment.transactionHistory.types.transactionFee'),\n                    rawData: true,\n                },\n                {\n                    property: 'paymentMode',\n                    label: this.$tc('swag-paypal-payment.transactionHistory.types.paymentMode'),\n                    rawData: true,\n                },\n                {\n                    property: 'create',\n                    label: this.$tc('swag-paypal-payment.transactionHistory.types.createTime'),\n                    rawData: true,\n                },\n                {\n                    property: 'update',\n                    label: this.$tc('swag-paypal-payment.transactionHistory.types.updateTime'),\n                    rawData: true,\n                },\n            ];\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.createDateTime = this.formatDate(this.paymentResource.create_time);\n            this.updateDateTime = this.formatDate(this.paymentResource.update_time);\n            this.amount = this.paymentResource.transactions[0].amount;\n            this.currency = this.paymentResource.transactions[0].amount.currency;\n            if (this.paymentResource.payer && this.paymentResource.payer.payer_info) {\n                this.payerId = this.paymentResource.payer.payer_info.payer_id;\n            }\n\n            this.setRelatedResources();\n        },\n\n        setRelatedResources() {\n            const rawRelatedResources = this.paymentResource.transactions[0].related_resources;\n            if (rawRelatedResources === null) {\n                return;\n            }\n\n            rawRelatedResources.forEach((relatedResource) => {\n                if (relatedResource.sale) {\n                    this.pushRelatedResource('sale', relatedResource.sale);\n                }\n\n                if (relatedResource.authorization) {\n                    this.pushRelatedResource('authorization', relatedResource.authorization);\n                }\n\n                if (relatedResource.order) {\n                    this.pushRelatedResource('order', relatedResource.order);\n                }\n\n                if (relatedResource.refund) {\n                    this.pushRelatedResource('refund', relatedResource.refund);\n                }\n\n                if (relatedResource.capture) {\n                    this.pushRelatedResource('capture', relatedResource.capture);\n                }\n            });\n        },\n\n        pushRelatedResource(type, relatedResource) {\n            let transactionFee = null;\n            const currency = relatedResource.amount.currency;\n            if (relatedResource.transaction_fee) {\n                transactionFee = `${relatedResource.transaction_fee.value} ${currency}`;\n            }\n\n            this.relatedResources.push({\n                id: relatedResource.id,\n                type: this.$tc(`swag-paypal-payment.transactionHistory.states.${type}`),\n                total: `${relatedResource.amount.total} ${currency}`,\n                create: this.formatDate(relatedResource.create_time),\n                createRaw: relatedResource.create_time,\n                update: this.formatDate(relatedResource.update_time),\n                transactionFee: transactionFee,\n                status: relatedResource.state,\n                paymentMode: relatedResource.payment_mode,\n            });\n\n            this.relatedResources.sort((a, b) => {\n                const dateA = new Date(a.createRaw);\n                const dateB = new Date(b.createRaw);\n\n                return dateA - dateB;\n            });\n        },\n\n        formatDate(dateTime) {\n            return this.dateFilter(dateTime, {\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            });\n        },\n    },\n});\n","import template from './swag-paypal-payment-details-v2.html.twig';\nimport {\n    ORDER_AUTHORIZATION_CREATED,\n    ORDER_AUTHORIZATION_PARTIALLY_CAPTURED,\n    ORDER_AUTHORIZATION_PENDING,\n} from './swag-paypal-order-consts';\n\nconst { Component, Filter } = Shopware;\n\nComponent.register('swag-paypal-payment-details-v2', {\n    template,\n\n    props: {\n        paypalOrder: {\n            type: Object,\n            required: true,\n        },\n\n        orderTransactionId: {\n            type: String,\n            required: true,\n        },\n\n        paypalPartnerAttributionId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            payments: [],\n            createDateTime: '',\n            updateDateTime: '',\n            currency: '',\n            amount: {},\n            payerId: '',\n            refundableAmount: 0,\n            captureableAmount: 0,\n            showVoidButton: false,\n        };\n    },\n\n    computed: {\n        dateFilter() {\n            return Filter.getByName('date');\n        },\n\n        paymentColumns() {\n            return [\n                {\n                    property: 'type',\n                    label: this.$tc('swag-paypal-payment.transactionHistory.types.type'),\n                    rawData: true,\n                },\n                {\n                    property: 'id',\n                    label: this.$tc('swag-paypal-payment.transactionHistory.types.trackingId'),\n                    rawData: true,\n                },\n                {\n                    property: 'total',\n                    label: this.$tc('swag-paypal-payment.transactionHistory.types.amount'),\n                    rawData: true,\n                },\n                {\n                    property: 'status',\n                    label: this.$tc('swag-paypal-payment.transactionHistory.types.state'),\n                    rawData: true,\n                },\n                {\n                    property: 'transactionFee',\n                    label: this.$tc('swag-paypal-payment.transactionHistory.types.transactionFee'),\n                    rawData: true,\n                },\n                {\n                    property: 'create',\n                    label: this.$tc('swag-paypal-payment.transactionHistory.types.createTime'),\n                    rawData: true,\n                },\n                {\n                    property: 'update',\n                    label: this.$tc('swag-paypal-payment.transactionHistory.types.updateTime'),\n                    rawData: true,\n                },\n            ];\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.createDateTime = this.formatDate(this.paypalOrder.create_time);\n            this.updateDateTime = this.formatDate(this.paypalOrder.update_time);\n            this.amount = this.paypalOrder.purchase_units[0].amount;\n            this.currency = this.amount.currency_code;\n            const payer = this.paypalOrder.payer;\n            if (payer !== null) {\n                this.payerId = payer.payer_id;\n            }\n\n            this.setPayments();\n        },\n\n        setPayments() {\n            const payments = this.paypalOrder.purchase_units[0].payments;\n            if (payments === null) {\n                return;\n            }\n\n            const rawAuthorizations = payments.authorizations;\n            const rawCaptures = payments.captures;\n            const rawRefunds = payments.refunds;\n\n            if (rawAuthorizations !== null) {\n                rawAuthorizations.forEach((authorization) => {\n                    this.pushPayment('authorization', authorization);\n                    const authStatus = authorization.status;\n                    if (authStatus === ORDER_AUTHORIZATION_CREATED\n                        || authStatus === ORDER_AUTHORIZATION_PARTIALLY_CAPTURED\n                    ) {\n                        this.captureableAmount += Number(authorization.amount.value);\n                        this.showVoidButton = true;\n                    }\n                    if (authStatus === ORDER_AUTHORIZATION_PENDING) {\n                        this.showVoidButton = true;\n                    }\n                });\n            }\n\n            if (rawCaptures !== null) {\n                rawCaptures.forEach((capture) => {\n                    this.pushPayment('capture', capture);\n                    const captureAmount = Number(capture.amount.value);\n                    this.refundableAmount += captureAmount;\n                    this.captureableAmount -= captureAmount;\n                });\n            }\n\n            if (rawRefunds !== null) {\n                rawRefunds.forEach((refund) => {\n                    this.pushPayment('refund', refund);\n                    this.refundableAmount -= Number(refund.amount.value);\n                });\n            }\n\n            this.refundableAmount = this.formatAmount(this.refundableAmount);\n            this.captureableAmount = this.formatAmount(this.captureableAmount);\n        },\n\n        pushPayment(type, payment) {\n            this.payments.push({\n                id: payment.id,\n                type: this.$tc(`swag-paypal-payment.transactionHistory.states.${type}`),\n                total: `${payment.amount.value} ${payment.amount.currency_code}`,\n                create: this.formatDate(payment.create_time),\n                createRaw: payment.create_time,\n                update: this.formatDate(payment.update_time),\n                transactionFee: this.getTransactionFee(type, payment),\n                status: payment.status,\n            });\n\n            this.payments.sort((a, b) => {\n                const dateA = new Date(a.createRaw);\n                const dateB = new Date(b.createRaw);\n\n                return dateA - dateB;\n            });\n        },\n\n        getTransactionFee(type, payment) {\n            if (type === 'capture') {\n                const sellerReceivableBreakdown = payment.seller_receivable_breakdown;\n                if (sellerReceivableBreakdown === null) {\n                    return null;\n                }\n\n                const paypalFee = sellerReceivableBreakdown.paypal_fee;\n                if (paypalFee == null) {\n                    return null;\n                }\n\n                return `${paypalFee.value} ${paypalFee.currency_code}`;\n            }\n\n            if (type === 'refund') {\n                const sellerPayableBreakdown = payment.seller_payable_breakdown;\n                if (sellerPayableBreakdown === null) {\n                    return null;\n                }\n\n                const paypalFee = sellerPayableBreakdown.paypal_fee;\n                if (paypalFee === null) {\n                    return null;\n                }\n\n                return `${paypalFee.value} ${paypalFee.currency_code}`;\n            }\n\n            return null;\n        },\n\n        formatDate(dateTime) {\n            return this.dateFilter(dateTime, {\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            });\n        },\n\n        formatAmount(value) {\n            return Number(`${Math.round(`${value}e2`)}e-2`);\n        },\n    },\n});\n","import template from './swag-paypal-text-field.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @protected\n * @description Simple text field. But this one allows attribute downpassing to the input field instead of the block.\n * @status ready\n * @example-type dynamic\n * @component-example\n * <swag-paypal-text-field label=\"Name\" placeholder=\"placeholder goes here...\"></swag-paypal-text-field>\n */\nComponent.extend('swag-paypal-text-field', 'sw-text-field', {\n    template,\n});\n","import template from './swag-paypal-textarea-field.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @protected\n * @description textarea input field. But this one allows attribute downpassing to the input field instead of the block.\n * @status ready\n * @example-type static\n * @component-example\n * <swag-paypal-textarea-field label=\"Name\" placeholder=\"placeholder goes here...\"></swag-paypal-textarea-field>\n */\nComponent.extend('swag-paypal-textarea-field', 'sw-textarea-field', {\n    template,\n});\n","import template from './sw-order-detail.html.twig';\nimport './sw-order-detail.scss';\n\nconst { Component, Context } = Shopware;\nconst { hasOwnProperty } = Shopware.Utils.object;\nconst Criteria = Shopware.Data.Criteria;\n\nComponent.override('sw-order-detail', {\n    template,\n\n    data() {\n        return {\n            isPayPalPayment: false,\n        };\n    },\n\n    computed: {\n        isEditable() {\n            return !this.isPayPalPayment || this.$route.name !== 'swag.paypal.payment.detail';\n        },\n\n        // TODO PPI-74 - Remove\n        showTabs() {\n            return true;\n        },\n    },\n\n    watch: {\n        orderId: {\n            deep: true,\n            handler() {\n                if (!this.orderId) {\n                    return;\n                }\n\n                const orderRepository = this.repositoryFactory.create('order');\n                const orderCriteria = new Criteria(1, 1);\n                orderCriteria.addAssociation('transactions');\n                orderCriteria\n                    .getAssociation('transactions')\n                    .addSorting(Criteria.sort('createdAt', 'DESC'))\n                    .setLimit(1);\n\n                orderRepository.get(this.orderId, Context.api, orderCriteria).then((order) => {\n                    const transaction = order.transactions.last();\n                    if (!transaction) {\n                        return;\n                    }\n\n                    this.isPayPalPayment = hasOwnProperty(transaction, 'customFields') &&\n                        hasOwnProperty(transaction.customFields, 'swag_paypal_order_id');\n                });\n            },\n            immediate: true,\n        },\n    },\n\n    methods: {\n        /**\n         * @deprecated tag:v6.0.0 - Will be removed without replacement\n         */\n        setIsPayPalPayment(paymentMethodId) {\n            this.isPayPalPayment = !!paymentMethodId;\n        },\n    },\n});\n","import template from './swag-paypal-payment-detail.html.twig';\nimport './swag-paypal-payment-detail.scss';\n\nconst { Component, Filter, Context } = Shopware;\nconst { isEmpty } = Shopware.Utils.types;\nconst Criteria = Shopware.Data.Criteria;\n\nComponent.register('swag-paypal-payment-detail', {\n    template,\n\n    inject: [\n        'SwagPayPalPaymentService',\n        'SwagPayPalOrderService',\n        'repositoryFactory',\n    ],\n\n    mixins: ['notification'],\n\n    data() {\n        return {\n            order: {},\n            orderTransaction: {},\n            paypalOrder: {},\n            paymentResource: {},\n            isLoading: true,\n            orderTransactionState: null,\n        };\n    },\n\n    computed: {\n        dateFilter() {\n            return Filter.getByName('date');\n        },\n\n        stateFailedCancelled() {\n            return this.orderTransactionState === 'failed' || this.orderTransactionState === 'cancelled';\n        },\n\n        showCanceledPaymentError() {\n            return this.isLoading === false\n                && this.showPayPalPayment === false\n                && this.showPayPalOrder === false\n                && this.stateFailedCancelled === true;\n        },\n\n        showSandboxLiveError() {\n            return this.isLoading === false\n                && this.showPayPalPayment === false\n                && this.showPayPalOrder === false\n                && this.stateFailedCancelled === false;\n        },\n\n        showGeneralError() {\n            return this.isLoading === false\n                && this.showPayPalPayment === false\n                && this.showPayPalOrder === false\n                && this.showCanceledPaymentError === false\n                && this.showSandboxLiveError === false;\n        },\n\n        showPayPalPayment() {\n            return isEmpty(this.paymentResource) === false;\n        },\n\n        showPayPalOrder() {\n            return isEmpty(this.paypalOrder) === false;\n        },\n    },\n\n    watch: {\n        '$route'() {\n            this.resetDataAttributes();\n            this.createdComponent();\n        },\n\n        'order.orderNumber'() {\n            this.emitIdentifier();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            const orderId = this.$route.params.id;\n            const orderRepository = this.repositoryFactory.create('order');\n            const orderCriteria = new Criteria(1, 1);\n            orderCriteria.addAssociation('transactions.stateMachineState');\n            orderCriteria.getAssociation('transactions').addSorting(Criteria.sort('createdAt'));\n\n            orderRepository.get(orderId, Context.api, orderCriteria).then((order) => {\n                this.order = order;\n                this.orderTransaction = order.transactions[order.transactions.length - 1];\n                this.orderTransactionState = this.orderTransaction.stateMachineState.technicalName;\n\n                if (this.orderTransaction.customFields === null) {\n                    this.isLoading = false;\n\n                    return;\n                }\n\n                const paypalPaymentId = this.orderTransaction.customFields.swag_paypal_transaction_id;\n                if (paypalPaymentId) {\n                    this.handlePayPalPayment(paypalPaymentId);\n                }\n                const paypalOrderId = this.orderTransaction.customFields.swag_paypal_order_id;\n                if (!paypalOrderId) {\n                    this.isLoading = false;\n\n                    return;\n                }\n\n                this.handlePayPalOrder(paypalOrderId);\n            });\n        },\n\n        handlePayPalOrder(paypalOrderId) {\n            this.SwagPayPalOrderService.getOrderDetails(this.orderTransaction.id, paypalOrderId).then((paypalOrder) => {\n                this.paypalOrder = paypalOrder;\n                this.isLoading = false;\n            }).catch(this.handleError);\n        },\n\n        handlePayPalPayment(paypalPaymentId) {\n            this.SwagPayPalPaymentService.getPaymentDetails(this.order.id, paypalPaymentId).then((payment) => {\n                this.paymentResource = payment;\n                this.isLoading = false;\n            }).catch(this.handleError);\n        },\n\n        handleError(errorResponse) {\n            try {\n                this.createNotificationError({\n                    message: `${this.$tc('swag-paypal-payment.paymentDetails.error.title')}: ${\n                        errorResponse.response.data.errors[0].detail}`,\n                    autoClose: false,\n                });\n            } catch (e) {\n                this.createNotificationError({\n                    message: `${this.$tc('swag-paypal-payment.paymentDetails.error.title')}: ${errorResponse.message}`,\n                    autoClose: false,\n                });\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        emitIdentifier() {\n            const orderNumber = this.order !== null ? this.order.orderNumber : '';\n            this.$emit('identifier-change', orderNumber);\n        },\n\n        resetDataAttributes() {\n            this.isLoading = true;\n            this.paypalOrder = {};\n        },\n    },\n});\n","import './component/swag-paypal-payment-actions';\nimport './component/swag-paypal-payment-actions-v2';\nimport './component/swag-paypal-payment-details-v1';\nimport './component/swag-paypal-payment-details-v2';\nimport './component/swag-paypal-text-field';\nimport './component/swag-paypal-textarea-field';\nimport './extension/sw-order-detail';\nimport './page/swag-paypal-payment-detail';\n\nconst { Module } = Shopware;\n\nModule.register('swag-paypal-payment', {\n    type: 'plugin',\n    name: 'SwagPayPal',\n    title: 'swag-paypal-payment.general.title',\n    description: 'swag-paypal-payment.general.descriptionTextModule',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#2b52ff',\n\n    routeMiddleware(next, currentRoute) {\n        if (currentRoute.name === 'sw.order.detail') {\n            currentRoute.children.push({\n                component: 'swag-paypal-payment-detail',\n                name: 'swag.paypal.payment.detail',\n                isChildren: true,\n                path: '/sw/order/paypal/detail/:id',\n                meta: {\n                    parentPath: 'sw.order.index',\n                    privilege: 'order.viewer',\n                },\n            });\n        }\n        next(currentRoute);\n    },\n});\n","const ApiService = Shopware.Classes.ApiService;\n\nclass SwagPayPalApiCredentialsService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'paypal') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    validateApiCredentials(clientId, clientSecret, sandboxActive) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(\n                `_action/${this.getApiBasePath()}/validate-api-credentials`,\n                {\n                    params: { clientId, clientSecret, sandboxActive },\n                    headers: headers,\n                },\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getApiCredentials(authCode, sharedId, nonce, sandboxActive, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(`_action/${this.getApiBasePath()}/get-api-credentials`,\n                { authCode, sharedId, nonce, sandboxActive },\n                { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getMerchantIntegrations() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(\n                `_action/${this.getApiBasePath()}/get-merchant-integrations`,\n                {\n                    params: { },\n                    headers: headers,\n                },\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default SwagPayPalApiCredentialsService;\n","const ApiService = Shopware.Classes.ApiService;\n\nclass SwagPayPalPosSettingApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'paypal/pos') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    /**\n     * Checks, if an access token for this user data can be created\n     *\n     * @param {string} apiKey\n     * @param {string|null} salesChannelId\n     * @returns {Promise|Object}\n     */\n    validateApiCredentials(apiKey, salesChannelId = null) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .post(`_action/${this.getApiBasePath()}/validate-api-credentials`, { apiKey, salesChannelId }, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Fetch necessary information for the sales channel from Zettle (e.g. currency)\n     * and insert into salesChannel Object\n     *\n     * @param {Object} salesChannel\n     * @param {Boolean} forceLanguage\n     * @returns {Promise|Object}\n     */\n    fetchInformation(salesChannel, forceLanguage = false) {\n        const headers = this.getBasicHeaders();\n        const apiKey = salesChannel.extensions.paypalPosSalesChannel.apiKey;\n\n        return this.httpClient\n            .post(`${this.getApiBasePath()}/fetch-information`, { apiKey }, { headers })\n            .then((response) => {\n                const data = ApiService.handleResponse(response);\n                delete data.extensions;\n\n                if (data.languageId !== null && (salesChannel.id === null || forceLanguage)) {\n                    salesChannel.languages.length = 0;\n                    salesChannel.languages.push({\n                        id: data.languageId,\n                    });\n                } else {\n                    delete data.languageId;\n                }\n\n                Object.assign(salesChannel, data);\n\n                salesChannel.currencies.length = 0;\n                salesChannel.currencies.push({\n                    id: data.currencyId,\n                });\n\n                salesChannel.countries.length = 0;\n                salesChannel.countries.push({\n                    id: data.countryId,\n                });\n\n                return data;\n            });\n    }\n\n    /**\n     * Clone product visibilility from one sales channel to another\n     *\n     * @param {String} toSalesChannelId\n     * @param {String} fromSalesChannelId\n     * @returns {Promise|Object}\n     */\n    cloneProductVisibility(fromSalesChannelId, toSalesChannelId) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .post(\n                `_action/${this.getApiBasePath()}/clone-product-visibility`,\n                { fromSalesChannelId, toSalesChannelId },\n                { headers },\n            ).then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Get product count from Zettle and cloned Sales Channel\n     *\n     * @param {String} salesChannelId\n     * @param {String|null} cloneSalesChannelId\n     * @returns {Promise|Object}\n     */\n    getProductCount(salesChannelId, cloneSalesChannelId) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(\n                `${this.getApiBasePath()}/product-count`,\n                {\n                    params: { salesChannelId, cloneSalesChannelId },\n                    headers,\n                },\n            ).then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * @returns {string}\n     */\n    generateApiUrl() {\n        const scopes = [\n            'READ:PURCHASE',\n            'READ:FINANCE',\n            'READ:USERINFO',\n            'READ:PRODUCT',\n            'WRITE:PRODUCT',\n        ];\n\n        // eslint-disable-next-line max-len\n        return `https://my.izettle.com/apps/api-keys?name=Shopware%20integration&scopes=${scopes.join('%20')}&utm_source=local_partnership&utm_medium=ecommerce&utm_campaign=shopware`;\n    }\n}\n\nexport default SwagPayPalPosSettingApiService;\n","const ApiService = Shopware.Classes.ApiService;\n\nclass SwagPayPalPosApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'paypal/pos') {\n        super(httpClient, loginService, apiEndpoint);\n        this.basicConfig = {\n            timeout: 300000,\n        };\n    }\n\n    startCompleteSync(salesChannelId) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(\n            `_action/${this.getApiBasePath()}/sync/${salesChannelId}`,\n            null,\n            {\n                ...this.basicConfig,\n                headers,\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    startProductSync(salesChannelId) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(\n            `_action/${this.getApiBasePath()}/sync/${salesChannelId}/products`,\n            null,\n            {\n                ...this.basicConfig,\n                headers,\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    startInventorySync(salesChannelId) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(\n            `_action/${this.getApiBasePath()}/sync/${salesChannelId}/inventory`,\n            null,\n            {\n                ...this.basicConfig,\n                headers,\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    startImageSync(salesChannelId) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(\n            `_action/${this.getApiBasePath()}/sync/${salesChannelId}/images`,\n            null,\n            {\n                ...this.basicConfig,\n                headers,\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    startLogCleanup(salesChannelId) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(\n            `_action/${this.getApiBasePath()}/log/cleanup/${salesChannelId}`,\n            null,\n            {\n                ...this.basicConfig,\n                headers,\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    abortSync(runId) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(\n            `_action/${this.getApiBasePath()}/sync/abort/${runId}`,\n            null,\n            {\n                ...this.basicConfig,\n                headers,\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    resetSync(salesChannelId) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(\n            `_action/${this.getApiBasePath()}/sync/reset/${salesChannelId}`,\n            null,\n            {\n                ...this.basicConfig,\n                headers,\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getProductLog(salesChannelId, page = 1, limit = 10) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(\n            `${this.getApiBasePath()}/product-log/${salesChannelId}`,\n            {\n                ...this.basicConfig,\n                headers,\n                params: { page, limit },\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default SwagPayPalPosApiService;\n","const ApiService = Shopware.Classes.ApiService;\n\nclass SwagPayPalPosWebhookRegisterService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'paypal/pos') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    registerWebhook(salesChannelId) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .post(`_action/${this.getApiBasePath()}/webhook/registration/${salesChannelId}`, {}, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    unregisterWebhook(salesChannelId) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .delete(`_action/${this.getApiBasePath()}/webhook/registration/${salesChannelId}`, {}, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default SwagPayPalPosWebhookRegisterService;\n","const ApiService = Shopware.Classes.ApiService;\n\nclass SwagPayPalPaymentService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'paypal') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    getPaymentDetails(orderId, payPalPaymentId) {\n        const apiRoute = `${this.getApiBasePath()}/payment-details/${orderId}/${payPalPaymentId}`;\n        return this.httpClient.get(\n            apiRoute,\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    capturePayment(orderId, resourceType, resourceId, captureAmount, currency, isFinalCapture) {\n        const apiRoute = `_action/${this.getApiBasePath()}/capture-payment/${resourceType}/${resourceId}/${orderId}`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n                captureAmount: captureAmount,\n                currency: currency,\n                captureIsFinal: isFinalCapture,\n            },\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    refundPayment(orderId, resourceType, resourceId, refundAmount, currency, description, reason, invoiceNumber) {\n        const apiRoute = `_action/${this.getApiBasePath()}/refund-payment/${resourceType}/${resourceId}/${orderId}`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n                refundAmount: refundAmount,\n                currency: currency,\n                description: description,\n                reason: reason,\n                refundInvoiceNumber: invoiceNumber,\n            },\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    voidPayment(orderId, resourceType, resourceId) {\n        const apiRoute = `_action/${this.getApiBasePath()}/void-payment/${resourceType}/${resourceId}/${orderId}`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {},\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default SwagPayPalPaymentService;\n","const ApiService = Shopware.Classes.ApiService;\n\nclass SwagPayPalOrderService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'paypal-v2') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    /**\n     * @param {String} orderTransactionId\n     * @param {String} paypalOrderId\n     */\n    getOrderDetails(orderTransactionId, paypalOrderId) {\n        const apiRoute = `${this.getApiBasePath()}/order/${orderTransactionId}/${paypalOrderId}`;\n\n        return this.httpClient.get(\n            apiRoute,\n            this.getDefaultOptions(),\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    /**\n     * @param {String} orderTransactionId\n     * @param {String} captureId\n     * @param {String} paypalOrderId\n     * @param {String} currency\n     * @param {String|Number} amount\n     * @param {String} invoiceNumber\n     * @param {String} noteToPayer\n     * @param {String} partnerAttributionId\n     */\n    refundCapture(\n        orderTransactionId,\n        captureId,\n        paypalOrderId,\n        currency,\n        amount,\n        invoiceNumber,\n        noteToPayer,\n        partnerAttributionId,\n    ) {\n        const params = `/${orderTransactionId}/${captureId}/${paypalOrderId}`;\n        const apiRoute = `${this.getApiBasePath('', '_action')}/refund-capture${params}`;\n\n        return this.doPostRequest(apiRoute, partnerAttributionId, {\n            currency,\n            amount,\n            invoiceNumber,\n            noteToPayer,\n        });\n    }\n\n    /**\n     * @param {String} orderTransactionId\n     * @param {String} authorizationId\n     * @param {String} currency\n     * @param {String|Number} amount\n     * @param {String} invoiceNumber\n     * @param {String} noteToPayer\n     * @param {String} partnerAttributionId\n     * @param {Boolean} isFinal\n     */\n    captureAuthorization(\n        orderTransactionId,\n        authorizationId,\n        currency,\n        amount,\n        invoiceNumber,\n        noteToPayer,\n        partnerAttributionId,\n        isFinal,\n    ) {\n        const params = `/${orderTransactionId}/${authorizationId}`;\n        const apiRoute = `${this.getApiBasePath('', '_action')}/capture-authorization${params}`;\n\n        return this.doPostRequest(apiRoute, partnerAttributionId, {\n            currency,\n            amount,\n            invoiceNumber,\n            noteToPayer,\n            isFinal,\n        });\n    }\n\n    /**\n     * @param {String} orderTransactionId\n     * @param {String} authorizationId\n     * @param {String} partnerAttributionId\n     */\n    voidAuthorization(orderTransactionId, authorizationId, partnerAttributionId) {\n        const params = `/${orderTransactionId}/${authorizationId}`;\n        const apiRoute = `${this.getApiBasePath('', '_action')}/void-authorization${params}`;\n\n        return this.doPostRequest(apiRoute, partnerAttributionId);\n    }\n\n    /**\n     * @param {String} apiRoute\n     * @param {String} partnerAttributionId\n     * @param {Object} requestParameters\n     */\n    doPostRequest(apiRoute, partnerAttributionId, requestParameters = {}) {\n        const params = { partnerAttributionId, ...requestParameters };\n        return this.httpClient.post(\n            apiRoute,\n            params,\n            this.getDefaultOptions(),\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getDefaultOptions() {\n        return {\n            headers: this.getBasicHeaders(),\n            version: Shopware.Context.api.apiVersion,\n        };\n    }\n}\n\nexport default SwagPayPalOrderService;\n","const ApiService = Shopware.Classes.ApiService;\n\nclass SwagPaypalPaymentMethodService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'paypal') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    /**\n     * Sets the default payment method to PayPal for the given Sales Channel id.\n     *\n     * @param {String|null} salesChannelId\n     *\n     * @returns {Promise}\n     */\n    setDefaultPaymentForSalesChannel(salesChannelId = null) {\n        const apiRoute = `_action/${this.getApiBasePath()}/saleschannel-default`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n                salesChannelId,\n            },\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default SwagPaypalPaymentMethodService;\n","const ApiService = Shopware.Classes.ApiService;\n\nclass SwagPayPalDisputeApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'paypal/dispute') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    /**\n     * Get a list of all disputes.\n     * Provide a sales channel ID if you have different merchant accounts for your sales channels.\n     * Disputes could also be filtered by their state.\n     *\n     * @param {String|null} salesChannelId\n     * @param {String|null} disputeStateFilter\n     *\n     * @returns {Promise}\n     */\n    list(salesChannelId = null, disputeStateFilter = null) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(\n            this.getApiBasePath(),\n            {\n                params: { salesChannelId, disputeStateFilter },\n                headers,\n                version: Shopware.Context.api.apiVersion,\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    /**\n     * Get the details of a dispute\n     *\n     * @param {String} disputeId\n     * @param {String|null} salesChannelId\n     *\n     * @returns {Promise}\n     */\n    detail(disputeId, salesChannelId) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(\n            `${this.getApiBasePath()}/${disputeId}`,\n            {\n                params: { salesChannelId },\n                headers,\n                version: Shopware.Context.api.apiVersion,\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default SwagPayPalDisputeApiService;\n","import SwagPayPalApiCredentialsService\n    from '../core/service/api/swag-paypal-api-credentials.service';\nimport SwagPayPalPosSettingApiService\n    from '../core/service/api/swag-paypal-pos-setting.api.service';\nimport SwagPayPalPosApiService\n    from '../core/service/api/swag-paypal-pos.api.service';\nimport SwagPayPalPosWebhookRegisterService\n    from '../core/service/api/swag-paypal-pos-webhook-register.service';\nimport SwagPayPalPaymentService\n    from '../core/service/api/swag-paypal-payment.service';\nimport SwagPayPalOrderService\n    from '../core/service/api/swag-paypal-order.service';\nimport SwagPaypalPaymentMethodService\n    from '../core/service/api/swag-paypal-payment-method.service';\nimport SwagPayPalDisputeApiService from '../core/service/api/swag-paypal-dispute.api.service';\n\nconst { Application } = Shopware;\n\nconst initContainer = Application.getContainer('init');\n\nApplication.addServiceProvider(\n    'SwagPayPalApiCredentialsService',\n    (container) => new SwagPayPalApiCredentialsService(initContainer.httpClient, container.loginService),\n);\n\nApplication.addServiceProvider(\n    'SwagPayPalPosSettingApiService',\n    (container) => new SwagPayPalPosSettingApiService(initContainer.httpClient, container.loginService),\n);\n\nApplication.addServiceProvider(\n    'SwagPayPalPosApiService',\n    (container) => new SwagPayPalPosApiService(initContainer.httpClient, container.loginService),\n);\n\nApplication.addServiceProvider(\n    'SwagPayPalPosWebhookRegisterService',\n    (container) => new SwagPayPalPosWebhookRegisterService(initContainer.httpClient, container.loginService),\n);\n\nApplication.addServiceProvider(\n    'SwagPayPalPaymentService',\n    (container) => new SwagPayPalPaymentService(initContainer.httpClient, container.loginService),\n);\n\nApplication.addServiceProvider(\n    'SwagPayPalOrderService',\n    (container) => new SwagPayPalOrderService(initContainer.httpClient, container.loginService),\n);\n\nApplication.addServiceProvider(\n    'SwagPaypalPaymentMethodService',\n    (container) => new SwagPaypalPaymentMethodService(initContainer.httpClient, container.loginService),\n);\n\nApplication.addServiceProvider(\n    'SwagPayPalDisputeApiService',\n    (container) => new SwagPayPalDisputeApiService(initContainer.httpClient, container.loginService),\n);\n","import deDeSnippets from '../module/extension/sw-first-run-wizard/snippets/de-DE.json';\nimport enGBSnippets from '../module/extension/sw-first-run-wizard/snippets/en-GB.json';\n\nShopware.Locale.extend('de-DE', deDeSnippets);\nShopware.Locale.extend('en-GB', enGBSnippets);\n","export default (() => {\n    const context = require.context('./svg', false, /svg$/);\n\n    return context.keys().reduce((accumulator, item) => {\n        const componentName = item.split('.')[1].split('/')[1];\n        const component = {\n            name: componentName,\n            functional: true,\n            render(createElement, elementContext) {\n                const data = elementContext.data;\n\n                return createElement('span', {\n                    class: [data.staticClass, data.class],\n                    style: data.style,\n                    attrs: data.attrs,\n                    on: data.on,\n                    domProps: {\n                        innerHTML: context(item),\n                    },\n                });\n            },\n        };\n\n        accumulator.push(component);\n        return accumulator;\n    }, []);\n})();\n","import iconComponents from '../app/assets/icons/icons';\n\nconst { Component } = Shopware;\n\nexport default (() => {\n    return iconComponents.map((component) => {\n        return Component.register(component.name, component);\n    });\n})();\n","import template from './swag-paypal-pos-status.html.twig';\nimport './swag-paypal-pos-status.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-pos-status', {\n    template,\n\n    props: {\n        title: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        status: {\n            type: String,\n            required: true,\n        },\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        disabledText: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        icon: {\n            type: String,\n            required: true,\n        },\n        iconAnimated: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        subIcon: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        showSubStatus: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        isLoading: {\n            type: Boolean,\n            required: true,\n        },\n        variant: {\n            type: String,\n            default: 'info',\n            validValues: ['info', 'warning', 'error', 'success'],\n            validator(value) {\n                return ['info', 'warning', 'error', 'success'].includes(value);\n            },\n        },\n        subVariant: {\n            type: String,\n            default: 'info',\n            validValues: ['info', 'warning', 'error', 'success'],\n            validator(value) {\n                return ['info', 'warning', 'error', 'success'].includes(value);\n            },\n        },\n    },\n\n    computed: {\n        statusClasses() {\n            return {\n                'swag-paypal-pos-status': true,\n                [`swag-paypal-pos-status--${this.variant}`]: true,\n                'swag-paypal-pos-status--disabled': this.disabled,\n            };\n        },\n\n        iconClasses() {\n            return {\n                'swag-paypal-pos-status__icon': true,\n                'swag-paypal-pos-status__icon-animated': this.iconAnimated,\n            };\n        },\n\n        subIconClasses() {\n            return [\n                'swag-paypal-pos-status__subicon',\n                `swag-paypal-pos-status--${this.subVariant}`,\n            ];\n        },\n\n        showSubIcon() {\n            return this.subIcon !== null && this.subIcon !== undefined && this.subIcon !== this.icon;\n        },\n    },\n});\n","import template from './swag-paypal-pos-account.html.twig';\nimport './swag-paypal-pos-account.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-pos-account', {\n    template,\n\n    inject: [\n        'SwagPayPalPosSettingApiService',\n        'repositoryFactory',\n    ],\n\n    props: {\n        salesChannel: {\n            type: Object,\n            require: false,\n            default: null,\n        },\n        lastRun: {\n            type: Object,\n            require: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            isError: false,\n            merchantInfo: null,\n        };\n    },\n\n    computed: {\n        accountName() {\n            if (this.isError) {\n                return this.$tc('swag-paypal-pos.account.errorName');\n            }\n\n            if (!this.merchantInfo) {\n                return this.$tc('swag-paypal-pos.account.loadingName');\n            }\n\n            return this.merchantInfo.name;\n        },\n\n        accountEmail() {\n            if (this.isError) {\n                return this.$tc('swag-paypal-pos.account.errorEmail');\n            }\n\n            if (!this.merchantInfo) {\n                return this.$tc('swag-paypal-pos.account.loadingEmail');\n            }\n\n            return this.merchantInfo.contactEmail;\n        },\n\n        connectionStatusText() {\n            if (this.isError) {\n                return this.$tc('swag-paypal-pos.account.noConnectionStatus');\n            }\n\n            return this.$tc('swag-paypal-pos.account.connectedStatus');\n        },\n\n        connectionStatusVariant() {\n            if (this.isError) {\n                return 'danger';\n            }\n\n            return 'success';\n        },\n\n        runRepository() {\n            return this.repositoryFactory.create('swag_paypal_pos_sales_channel_run');\n        },\n    },\n\n    watch: {\n        salesChannel() {\n            this.loadMerchantData();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.loadMerchantData();\n        },\n\n        loadMerchantData() {\n            this.isError = false;\n            this.isLoading = true;\n\n            if (this.salesChannel === null) {\n                return Promise.resolve();\n            }\n\n            return this.SwagPayPalPosSettingApiService.fetchInformation(this.salesChannel)\n                .then(({ merchantInformation }) => {\n                    this.merchantInfo = merchantInformation;\n                    this.isError = false;\n                }).catch(() => {\n                    this.merchantInfo = null;\n                    this.isError = true;\n                }).finally(() => {\n                    this.isLoading = false;\n                });\n        },\n    },\n});\n","import template from './swag-paypal-pos-status-view.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-pos-status-view', {\n    template,\n\n    props: {\n        lastFinishedRun: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        lastCompleteRun: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        isLoading: {\n            type: Boolean,\n            default: false,\n        },\n        isSyncing: {\n            type: Boolean,\n            default: false,\n        },\n        salesChannel: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        syncErrors: {\n            type: Array,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            statusErrorLevel: null,\n            statusCompleteErrorLevel: null,\n            iconConfig: {\n                syncing: 'default-arrow-360-full',\n                warning: 'default-badge-warning',\n                error: 'default-basic-x-line',\n                success: 'default-basic-checkmark-line',\n                noRunYet: 'default-action-more-horizontal',\n            },\n        };\n    },\n\n    computed: {\n        status() {\n            if (this.isSyncing) {\n                return 'syncing';\n            }\n            if (this.noRunYet) {\n                return 'noRunYet';\n            }\n            return this.statusErrorLevel;\n        },\n\n        statusVariant() {\n            if (this.isSyncing || this.noRunYet) {\n                return 'info';\n            }\n            return this.statusErrorLevel;\n        },\n\n        statusIcon() {\n            return this.iconConfig[this.status] || 'default-badge-info';\n        },\n\n        statusIconComplete() {\n            return this.iconConfig[this.statusCompleteErrorLevel];\n        },\n\n        noRunYet() {\n            return this.salesChannel === null\n                || this.salesChannel.id === null\n                || this.lastFinishedRun === null;\n        },\n\n        incompleteLastRun() {\n            return this.salesChannel !== null && this.salesChannel.id !== null\n                && this.lastFinishedRun !== null && this.lastCompleteRun !== null\n                && this.lastFinishedRun.id !== this.lastCompleteRun.id;\n        },\n\n        statusTitle() {\n            let title = this.$tc(`swag-paypal-pos.detail.overview.status.message.${this.status}`);\n            if (this.incompleteLastRun) {\n                const task = this.$tc(`swag-paypal-pos.detail.overview.status.task.${this.lastFinishedRun.task}`);\n                if (!this.isSyncing) {\n                    title += ` (${task})`;\n                }\n            }\n\n            if (this.lastFinishedRun && this.lastFinishedRun.status === 'cancelled' && !this.isSyncing) {\n                title = this.$tc('swag-paypal-pos.detail.overview.status.message.aborted');\n            }\n\n            return title;\n        },\n\n        disabled() {\n            return this.salesChannel !== null && this.salesChannel.id !== null && this.salesChannel.active === false;\n        },\n    },\n\n    watch: {\n        lastFinishedRun: {\n            handler() {\n                this.statusErrorLevel = this.getHighestLevel(this.lastFinishedRun);\n            },\n            immediate: true,\n        },\n        lastCompleteRun: {\n            handler() {\n                this.statusCompleteErrorLevel = this.getHighestLevel(this.lastCompleteRun);\n            },\n            immediate: true,\n        },\n    },\n\n    methods: {\n        getHighestLevel(run) {\n            if (run === null) {\n                return null;\n            }\n\n            if (run.status === 'cancelled') {\n                return 'info';\n            }\n\n            const level = Math.max(...run.logs.map((log) => { return log.level; }));\n            if (level >= 400) {\n                return 'error';\n            }\n\n            if (level >= 300) {\n                return 'warning';\n            }\n\n            return 'success';\n        },\n    },\n});\n","import template from './swag-paypal-pos-boolean-radio.html.twig';\nimport './swag-paypal-pos-boolean-radio.scss';\n\nconst { Component } = Shopware;\nconst utils = Shopware.Utils;\n\nComponent.register('swag-paypal-pos-boolean-radio', {\n    template,\n\n    model: {\n        prop: 'value',\n        event: 'change',\n    },\n\n    props: {\n        value: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        optionTrue: {\n            type: Object,\n            required: true,\n            validator(value) {\n                return value.hasOwnProperty('name');\n            },\n        },\n\n        optionFalse: {\n            type: Object,\n            required: true,\n            validator(value) {\n                return value.hasOwnProperty('name');\n            },\n        },\n    },\n\n    data() {\n        return {\n            inputId: utils.createId(),\n        };\n    },\n\n    computed: {\n        options() {\n            return [\n                {\n                    value: true,\n                    ...this.optionTrue,\n                },\n                {\n                    value: false,\n                    ...this.optionFalse,\n                },\n            ];\n        },\n\n        castedValue: {\n            get() {\n                return this.value;\n            },\n\n            set(val) {\n                this.$emit('change', val);\n            },\n        },\n\n        name() {\n            return `swag-paypal-pos-boolean-radio-${this.inputId}`;\n        },\n    },\n});\n","import template from './swag-paypal-pos-detail-logs.html.twig';\nimport './swag-paypal-pos-detail-logs.scss';\n\nconst { Component, Context } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.register('swag-paypal-pos-detail-logs', {\n    template,\n\n    inject: [\n        'SwagPayPalPosApiService',\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        'notification',\n        'swag-paypal-pos-log-label',\n        'listing',\n    ],\n\n    props: {\n        runId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            logs: [],\n            limit: 10,\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            loadingLogs: false,\n            isLoading: false,\n            disableRouteParams: true,\n        };\n    },\n\n    computed: {\n        logRepository() {\n            return this.repositoryFactory.create('swag_paypal_pos_sales_channel_run_log');\n        },\n\n        columns() {\n            return [{\n                property: 'date',\n                dataIndex: 'createdAt',\n                label: 'swag-paypal-pos.detail.syncedProducts.columns.date',\n                width: '140px',\n                sortable: true,\n            }, {\n                property: 'state',\n                dataIndex: 'level',\n                label: 'swag-paypal-pos.detail.syncedProducts.columns.state',\n                width: '120px',\n                sortable: true,\n            }, {\n                property: 'message',\n                dataIndex: 'message',\n                label: 'swag-paypal-pos.detail.logs.columnLastSync',\n                sortable: true,\n            }];\n        },\n    },\n\n    methods: {\n        getListCriteria() {\n            const params = this.getMainListingParams();\n            const criteria = new Criteria(this.page, this.limit);\n            criteria.addFilter(Criteria.equals('runId', this.runId));\n            criteria.addAssociation('posSalesChannelRun');\n\n            criteria.addSorting(Criteria.sort(params.sortBy, params.sortDirection, params.naturalSorting));\n            criteria.addSorting(Criteria.sort('level', 'DESC'));\n            criteria.addSorting(Criteria.sort('createdAt', 'DESC'));\n\n            return criteria;\n        },\n\n        getList() {\n            this.loadingLogs = true;\n            return this.logRepository.search(this.getListCriteria(), Context.api).then((result) => {\n                this.logs = result;\n                this.total = result.total;\n                this.page = result.criteria.page;\n                this.limit = result.criteria.limit;\n                this.loadingLogs = false;\n            });\n        },\n\n        getLabelVariantForItem(item) {\n            if (item.posSalesChannelRun && item.posSalesChannelRun.status === 'cancelled') {\n                return 'info';\n            }\n\n            return this.getLabelVariant(item.level);\n        },\n\n        getLabelForItem(item) {\n            if (item.posSalesChannelRun && item.posSalesChannelRun.status === 'cancelled') {\n                return 'swag-paypal-pos.detail.logs.states.aborted';\n            }\n\n            return this.getLabel(item.level);\n        },\n    },\n});\n","import template from './swag-paypal-pos-getting-started.html.twig';\nimport './swag-paypal-pos-getting-started.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-pos-getting-started', {\n    template,\n});\n","import template from './swag-paypal-pos-continue-setup.html.twig';\nimport './swag-paypal-pos-continue-setup.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-pos-continue-setup', {\n    template,\n\n    methods: {\n        onContinueSetup() {\n            this.$router.push(\n                {\n                    name: 'swag.paypal.pos.wizard.customization',\n                    params: { id: this.$route.params.id },\n                },\n            );\n        },\n    },\n});\n","import { PAYPAL_POS_SALES_CHANNEL_TYPE_ID } from '../../../../constant/swag-paypal.constant';\n\nconst { Component } = Shopware;\n\nComponent.override('sw-sales-channel-menu', {\n    computed: {\n        buildMenuTree() {\n            const menuItems = this.$super('buildMenuTree');\n\n            const posIds = [];\n            this.salesChannels.forEach((salesChannel) => {\n                if (salesChannel.typeId === PAYPAL_POS_SALES_CHANNEL_TYPE_ID) {\n                    posIds.push(salesChannel.id);\n                }\n            });\n\n            menuItems.forEach((menuItem) => {\n                if (posIds.includes(menuItem.id)) {\n                    menuItem.path = 'swag.paypal.pos.detail';\n                }\n            });\n\n            return menuItems;\n        },\n    },\n});\n","import { PAYPAL_POS_SALES_CHANNEL_TYPE_ID } from '../../../../constant/swag-paypal.constant';\n\nconst { Component } = Shopware;\n\nComponent.override('sw-sales-channel-modal', {\n\n    methods: {\n        onAddChannel(salesChannelTypeId) {\n            if (this.isPayPalPosSalesChannel(salesChannelTypeId)) {\n                this.onCloseModal();\n                this.$router.push({ name: 'swag.paypal.pos.wizard' });\n\n                return;\n            }\n\n            this.$super('onAddChannel', salesChannelTypeId);\n        },\n\n        isPayPalPosSalesChannel(salesChannelTypeId) {\n            return salesChannelTypeId === PAYPAL_POS_SALES_CHANNEL_TYPE_ID;\n        },\n    },\n});\n","import template from './swag-paypal-pos.html.twig';\nimport './swag-paypal-pos.scss';\nimport { PAYPAL_POS_SALES_CHANNEL_EXTENSION } from '../../../../constant/swag-paypal.constant';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.register('swag-paypal-pos', {\n    template,\n\n    inject: [\n        'salesChannelService',\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        'placeholder',\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            previousApiKey: null,\n            salesChannel: {},\n            lastRun: null,\n            lastCompleteRun: null,\n            cloneSalesChannelId: null,\n            buttonConfig: [],\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.title,\n        };\n    },\n\n    computed: {\n        title() {\n            return [\n                this.$tc('global.sw-admin-menu.textShopwareAdmin'),\n                this.$tc('sw-sales-channel.general.titleMenuItems'),\n                this.$tc('swag-paypal-pos.general.moduleTitle'),\n            ].reverse().join(' | ');\n        },\n\n        paypalPosSalesChannelRepository() {\n            return this.repositoryFactory.create('swag_paypal_pos_sales_channel');\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        runRepository() {\n            return this.repositoryFactory.create('swag_paypal_pos_sales_channel_run');\n        },\n\n        salesChannelCriteria() {\n            const criteria = new Criteria();\n\n            criteria.addAssociation(PAYPAL_POS_SALES_CHANNEL_EXTENSION);\n            criteria.addAssociation('countries');\n            criteria.addAssociation('currencies');\n            criteria.addAssociation('domains');\n            criteria.addAssociation('languages');\n\n            return criteria;\n        },\n    },\n\n    watch: {\n        '$route.params.id'() {\n            this.loadSalesChannel();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.loadSalesChannel();\n        },\n\n        loadSalesChannel() {\n            if (!this.$route.params.id) {\n                return Promise.resolve();\n            }\n\n            if (this.salesChannel) {\n                this.salesChannel = null;\n            }\n\n            this.isLoading = true;\n            return this.salesChannelRepository\n                .get(this.$route.params.id, Shopware.Context.api, this.salesChannelCriteria)\n                .then((entity) => {\n                    this.salesChannel = entity;\n                    this.previousApiKey = entity.extensions.paypalPosSalesChannel.apiKey;\n                    this.updateRun();\n                    this.isLoading = false;\n                });\n        },\n\n        updateCloneSalesChannel(cloneSalesChannelId) {\n            this.cloneSalesChannelId = cloneSalesChannelId;\n        },\n\n        updateButtons(buttonConfig) {\n            this.buttonConfig = buttonConfig;\n        },\n\n        onButtonClick(action) {\n            if (typeof action === 'string') {\n                this.redirect(action);\n                return;\n            }\n\n            if (typeof action !== 'function') {\n                return;\n            }\n\n            action.call();\n        },\n\n        updateRun() {\n            setTimeout(this.updateRun, 20000);\n            return this.loadLastRun();\n        },\n\n        loadLastRun(needComplete = false) {\n            const criteria = new Criteria(1, 1);\n            criteria.addFilter(Criteria.equals('salesChannelId', this.salesChannel.id));\n            criteria.addFilter(Criteria.not('AND', [Criteria.equals('status', 'in_progress')]));\n            criteria.addSorting(Criteria.sort('createdAt', 'DESC'));\n\n            if (needComplete) {\n                criteria.addFilter(Criteria.equals('task', 'complete'));\n            } else {\n                criteria.addAssociation('logs');\n            }\n\n            return this.runRepository.search(criteria, Shopware.Context.api).then((result) => {\n                if (needComplete) {\n                    this.lastCompleteRun = result.first();\n                    this.$forceUpdate();\n                    return;\n                }\n\n                this.lastRun = result.first();\n                if (this.lastRun !== null && this.lastRun.task !== 'complete') {\n                    this.loadLastRun(true);\n                } else {\n                    this.lastCompleteRun = this.lastRun;\n                }\n                this.$forceUpdate();\n            });\n        },\n    },\n});\n","import template from './swag-paypal-pos-detail-synced-products.html.twig';\nimport './swag-paypal-pos-detail-synced-products.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-pos-detail-synced-products', {\n    template,\n\n    inject: [\n        'SwagPayPalPosApiService',\n    ],\n\n    mixins: [\n        'swag-paypal-pos-log-label',\n        'listing',\n    ],\n\n    props: {\n        salesChannel: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            products: [],\n            limit: 10,\n            isLoading: false,\n            actions: [\n                {\n                    label: 'swag-paypal-pos.detail.syncedProducts.actions.productDetails',\n                    callback: this.onProductDetails,\n                },\n            ],\n            columns: [\n                {\n                    property: 'name',\n                    label: 'swag-paypal-pos.detail.syncedProducts.columns.name',\n                    sortable: false,\n                },\n                {\n                    property: 'state',\n                    label: 'swag-paypal-pos.detail.syncedProducts.columns.state',\n                    sortable: false,\n                },\n                {\n                    property: 'date',\n                    label: 'swag-paypal-pos.detail.syncedProducts.columns.date',\n                    sortable: false,\n                },\n            ],\n        };\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.$emit('buttons-update', []);\n            this.getList();\n        },\n\n        getList() {\n            if (this.salesChannel === null || this.salesChannel.id === null) {\n                return Promise.resolve();\n            }\n\n            this.isLoading = true;\n            const params = this.getMainListingParams();\n\n            return this.SwagPayPalPosApiService.getProductLog(\n                this.salesChannel.id,\n                params.page,\n                params.limit,\n            ).then((result) => {\n                this.products = Object.values(result.elements);\n                this.total = result.total;\n                this.isLoading = false;\n            });\n        },\n\n        onProductDetails(item) {\n            this.$router.push(\n                {\n                    name: 'sw.product.detail.base',\n                    params: {\n                        id: item.id,\n                    },\n                },\n            );\n        },\n\n        hasSync(item) {\n            return item.extensions.paypalPosLog.length || item.extensions.paypalPosSync.length;\n        },\n\n        getSyncDate(item) {\n            if (!this.hasSync(item)) {\n                return null;\n            }\n\n            if (item.extensions.paypalPosLog[0]) {\n                return item.extensions.paypalPosLog[0].posSalesChannelRun.updatedAt\n                    || item.extensions.paypalPosLog[0].createdAt;\n            }\n\n            return item.extensions.paypalPosSync[0].updatedAt\n                || item.extensions.paypalPosSync[0].createdAt;\n        },\n\n        getLevel(item) {\n            return item.extensions.paypalPosLog[0] ? item.extensions.paypalPosLog[0].level : 200;\n        },\n    },\n});\n","import template from './swag-paypal-pos-detail-overview.html.twig';\nimport './swag-paypal-pos-detail-overview.scss';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.register('swag-paypal-pos-detail-overview', {\n    template,\n\n    inject: [\n        'SwagPayPalPosApiService',\n        'salesChannelService',\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        'placeholder',\n    ],\n\n    props: {\n        salesChannel: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        lastRun: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        lastCompleteRun: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            isSyncing: false,\n            syncErrors: null,\n            syncingRunId: null,\n            statusErrorLevel: null,\n            isLoading: false,\n        };\n    },\n\n    computed: {\n        runRepository() {\n            return this.repositoryFactory.create('swag_paypal_pos_sales_channel_run');\n        },\n    },\n\n    watch: {\n        'salesChannel.id'() {\n            this.checkForSync();\n        },\n        lastRun() {\n            this.$forceUpdate();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.checkForSync();\n        },\n\n        mountedComponent() {\n            this.updateButtons();\n        },\n\n        forceUpdate() {\n            this.$forceUpdate();\n        },\n\n        startSync(callable) {\n            this.syncErrors = null;\n            this.isSyncing = true;\n            this.updateButtons(true);\n            callable(this.salesChannel.id).then((response) => {\n                this.syncingRunId = response.runId;\n                this.updateSync();\n            }).catch((errorResponse) => {\n                this.syncErrors = errorResponse.response.data.errors;\n                this.$emit('run-update');\n                this.isSyncing = false;\n                this.updateButtons();\n            });\n        },\n\n        updateSync() {\n            if (this.syncingRunId === null) {\n                return;\n            }\n\n            this.runRepository.get(this.syncingRunId, Shopware.Context.api).then((entity) => {\n                if (entity !== null && entity.status === 'in_progress') {\n                    setTimeout(this.updateSync, 1500);\n                    return;\n                }\n\n                this.syncingRunId = null;\n                this.$emit('run-update');\n                this.isSyncing = false;\n                this.updateButtons();\n            });\n        },\n\n        onStartSync() {\n            this.startSync(this.SwagPayPalPosApiService.startCompleteSync.bind(this.SwagPayPalPosApiService));\n        },\n\n        onStartProductSync() {\n            this.startSync(this.SwagPayPalPosApiService.startProductSync.bind(this.SwagPayPalPosApiService));\n        },\n\n        onStartImageSync() {\n            this.startSync(this.SwagPayPalPosApiService.startImageSync.bind(this.SwagPayPalPosApiService));\n        },\n\n        onStartInventorySync() {\n            this.startSync(this.SwagPayPalPosApiService.startInventorySync.bind(this.SwagPayPalPosApiService));\n        },\n\n        onSyncAbort() {\n            if (this.syncingRunId !== null) {\n                this.SwagPayPalPosApiService.abortSync(this.syncingRunId).then(() => {\n                    this.updateSync();\n                });\n            }\n        },\n\n        checkForSync() {\n            if (this.salesChannel === null || this.salesChannel.id === null) {\n                return;\n            }\n\n            const criteria = new Criteria(1, 1);\n            criteria.addFilter(Criteria.equals('salesChannelId', this.salesChannel.id));\n            criteria.addFilter(Criteria.equals('status', 'in_progress'));\n            criteria.addSorting(Criteria.sort('createdAt', 'DESC'));\n\n            this.runRepository.search(criteria, Shopware.Context.api).then((result) => {\n                if (result.first() === null) {\n                    return;\n                }\n                this.isSyncing = true;\n                this.syncingRunId = result.first().id;\n                this.updateSync();\n            });\n        },\n\n        updateButtons(syncing = false) {\n            const buttonConfig = [\n                {\n                    key: 'sync',\n                    label: this.$tc('swag-paypal-pos.detail.overview.buttonSync'),\n                    variant: 'primary',\n                    action: this.onStartSync,\n                    disabled: !(this.salesChannel && this.salesChannel.active),\n                    isLoading: this.isSyncing,\n                },\n            ];\n\n            if (syncing) {\n                buttonConfig.unshift(\n                    {\n                        key: 'abortSync',\n                        label: this.$tc('swag-paypal-pos.detail.overview.buttonSyncAbort'),\n                        action: this.onSyncAbort,\n                        disabled: !(this.salesChannel && this.salesChannel.active),\n                    },\n                );\n            }\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n    },\n});\n","import template from './swag-paypal-pos-detail-settings.html.twig';\nimport './swag-paypal-pos-detail-settings.scss';\n\nconst { Component, Context, State } = Shopware;\nconst { mapPropertyErrors } = Component.getComponentHelper();\nconst { ShopwareError } = Shopware.Classes;\n\n\nComponent.register('swag-paypal-pos-detail-settings', {\n    template,\n\n    inject: [\n        'SwagPayPalPosApiService',\n        'SwagPayPalPosSettingApiService',\n        'SwagPayPalPosWebhookRegisterService',\n        'salesChannelService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        'swag-paypal-pos-catch-error',\n        'placeholder',\n        'notification',\n    ],\n\n    props: {\n        salesChannel: {\n            type: Object,\n            required: true,\n        },\n        cloneSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            showDeleteModal: false,\n            showResetModal: false,\n            isSaveSuccessful: false,\n            isTestingCredentials: false,\n            isTestCredentialsSuccessful: false,\n            apiKeyUrl: this.SwagPayPalPosSettingApiService.generateApiUrl(),\n            previousApiKey: this.salesChannel.extensions.paypalPosSalesChannel.apiKey,\n        };\n    },\n\n    computed: {\n        ...mapPropertyErrors('salesChannel', ['name']),\n        ...mapPropertyErrors('swagPaypalPosSalesChannel', ['mediaDomain']),\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        optionSyncPrices() {\n            return {\n                name: this.$tc('swag-paypal-pos.wizard.syncPrices.optionTrueLabel'),\n                description: this.$tc('swag-paypal-pos.wizard.syncPrices.optionTrueDescription'),\n            };\n        },\n\n        optionNotSyncPrices() {\n            return {\n                name: this.$tc('swag-paypal-pos.wizard.syncPrices.optionFalseLabel'),\n                description: this.$tc('swag-paypal-pos.wizard.syncPrices.optionFalseDescription'),\n            };\n        },\n\n        optionsReplace() {\n            return [\n                {\n                    value: 2,\n                    name: this.$tc('swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyLabel'),\n                    description: this.$tc('swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyDescription'),\n                }, {\n                    value: 1,\n                    name: this.$tc('swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeLabel'),\n                    description: this.$tc('swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeDescription'),\n                }, {\n                    value: 0,\n                    name: this.$tc('swag-paypal-pos.wizard.syncLibrary.optionReplaceNotLabel'),\n                    description: this.$tc('swag-paypal-pos.wizard.syncLibrary.optionReplaceNotDescription'),\n                },\n            ];\n        },\n\n        swagPaypalPosSalesChannel() {\n            return this.salesChannel.extensions.paypalPosSalesChannel;\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.updateButtons();\n        },\n\n        forceUpdate() {\n            this.$forceUpdate();\n        },\n\n        onSave() {\n            this.isLoading = true;\n            this.isSaveSuccessful = false;\n            this.updateButtons();\n\n            if (this.swagPaypalPosSalesChannel.apiKey === this.previousApiKey) {\n                return this.save();\n            }\n\n            return this.SwagPayPalPosSettingApiService\n                .validateApiCredentials(this.swagPaypalPosSalesChannel.apiKey, this.salesChannel.id)\n                .then(() => {\n                    return this.SwagPayPalPosSettingApiService.fetchInformation(this.salesChannel, true);\n                })\n                .then(this.save)\n                .catch((errorResponse) => {\n                    this.catchAuthenticationError((errorResponse));\n                    this.isLoading = false;\n                    this.updateButtons();\n                    throw errorResponse;\n                });\n        },\n\n        save() {\n            this.SwagPayPalPosWebhookRegisterService.registerWebhook(this.salesChannel.id)\n                .catch(this.catchError.bind(this, 'swag-paypal-pos.messageWebhookRegisterError'));\n\n            return this.salesChannelRepository\n                .save(this.salesChannel, Context.api)\n                .then(() => {\n                    this.isLoading = false;\n                    this.isSaveSuccessful = true;\n                    this.updateButtons();\n\n                    this.$emit('load-sales-channel');\n                    this.$root.$emit('sales-channel-change');\n\n                    if (this.cloneSalesChannelId !== null) {\n                        this.SwagPayPalPosSettingApiService.cloneProductVisibility(\n                            this.cloneSalesChannelId,\n                            this.salesChannel.id,\n                        ).catch(this.catchError.bind(this, 'swag-paypal-pos.messageCloneError'));\n                    }\n                }).catch(() => {\n                    this.isLoading = false;\n                    this.updateButtons();\n\n                    this.createNotificationError({\n                        message: this.$tc('sw-sales-channel.detail.messageSaveError', 0, {\n                            name: this.salesChannel.name || this.placeholder(this.salesChannel, 'name'),\n                        }),\n                    });\n                }).finally(() => {\n                    if (this.swagPaypalPosSalesChannel.mediaDomain === null) {\n                        const expression =\n                            `swag_paypal_pos_sales_channel.${this.swagPaypalPosSalesChannel.id}.mediaDomain`;\n                        const error = new ShopwareError({ code: 'INVALID_URL' });\n                        State.commit('error/addApiError', { expression, error });\n                    }\n                });\n        },\n\n        testCredentials() {\n            const apiKey = this.swagPaypalPosSalesChannel.apiKey;\n\n            this.isTestingCredentials = true;\n            this.isTestCredentialsSuccessful = false;\n\n            this.SwagPayPalPosSettingApiService.validateApiCredentials(apiKey).then((response) => {\n                const credentialsValid = response.credentialsValid;\n                this.isTestingCredentials = false;\n                this.isTestCredentialsSuccessful = credentialsValid;\n            }).catch((errorResponse) => {\n                this.catchAuthenticationError(errorResponse);\n                this.isTestingCredentials = false;\n            });\n        },\n\n        catchAuthenticationError(errorResponse) {\n            this.catchError('swag-paypal-pos.authentication.messageTestError', errorResponse);\n\n            this.isTestingCredentials = false;\n            this.isTestCredentialsSuccessful = false;\n        },\n\n        updateButtons() {\n            const buttonConfig = [\n                {\n                    key: 'save',\n                    label: this.$tc('global.default.save'),\n                    variant: 'primary',\n                    action: this.onSave,\n                    disabled: false,\n                    isLoading: this.isLoading,\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        onConfirmDelete() {\n            this.showDeleteModal = false;\n\n            this.$nextTick(() => {\n                this.deleteSalesChannel(this.salesChannel.id);\n                this.$router.push({ name: 'sw.dashboard.index' });\n            });\n        },\n\n        deleteSalesChannel(salesChannelId) {\n            return this.SwagPayPalPosWebhookRegisterService.unregisterWebhook(salesChannelId).finally(() => {\n                return this.salesChannelRepository.delete(salesChannelId, Shopware.Context.api).then(() => {\n                    this.$root.$emit('sales-channel-change');\n                });\n            });\n        },\n\n        onConfirmReset() {\n            this.showResetModal = false;\n\n            this.$nextTick(() => {\n                this.SwagPayPalPosApiService.resetSync(this.salesChannel.id).then(() => {\n                    this.$router.push({ name: 'swag.paypal.pos.detail.overview', params: { id: this.salesChannel.id } });\n                });\n            });\n        },\n\n        changeLanguage() {\n            this.$nextTick(() => {\n                this.salesChannel.languages.length = 0;\n                this.salesChannel.languages.push({\n                    id: this.salesChannel.languageId,\n                });\n                this.$forceUpdate();\n            });\n        },\n    },\n});\n","import template from './swag-paypal-pos-detail-runs.html.twig';\nimport './swag-paypal-pos-detail-runs.scss';\n\nconst { Component, Context } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.register('swag-paypal-pos-detail-runs', {\n    template,\n\n    inject: [\n        'SwagPayPalPosApiService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        'swag-paypal-pos-catch-error',\n        'notification',\n        'listing',\n    ],\n\n    props: {\n        salesChannel: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            runs: [],\n            limit: 10,\n            sortBy: 'finishedAt',\n            sortDirection: 'DESC',\n            isLoading: false,\n            isCleaningLog: false,\n            showModal: false,\n            currentRunId: '',\n        };\n    },\n\n    computed: {\n        runRepository() {\n            return this.repositoryFactory.create('swag_paypal_pos_sales_channel_run');\n        },\n\n        columns() {\n            return [{\n                property: 'task',\n                dataIndex: 'task',\n                label: 'swag-paypal-pos.detail.runs.columns.task',\n                sortable: true,\n            }, {\n                property: 'state',\n                dataIndex: 'logs.level',\n                label: 'swag-paypal-pos.detail.runs.columns.state',\n                sortable: true,\n            }, {\n                property: 'date',\n                dataIndex: 'finishedAt',\n                label: 'swag-paypal-pos.detail.runs.columns.date',\n                sortable: true,\n            }];\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.$emit('buttons-update', []);\n        },\n\n        getListCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n            criteria.addFilter(Criteria.equals('salesChannelId', this.salesChannel.id));\n            criteria.addFilter(Criteria.not('AND', [Criteria.equals('status', 'in_progress')]));\n\n            criteria.addAssociation('logs');\n            criteria.getAssociation('logs').limit = 1;\n            criteria.getAssociation('logs').addSorting(Criteria.sort('level', 'DESC'));\n\n            const params = this.getMainListingParams();\n            criteria.addSorting(Criteria.sort(params.sortBy, params.sortDirection, params.naturalSorting));\n            criteria.addSorting(Criteria.sort('finishedAt', 'DESC'));\n\n            return criteria;\n        },\n\n        getList() {\n            if (this.salesChannel === null || this.salesChannel.id === null) {\n                return Promise.resolve();\n            }\n\n            this.isLoading = true;\n            return this.runRepository.search(this.getListCriteria(), Context.api).then((result) => {\n                this.runs = result;\n                this.total = result.total;\n                this.page = result.criteria.page;\n                this.limit = result.criteria.limit;\n                this.isLoading = false;\n            });\n        },\n\n        onShowModal(id) {\n            this.currentRunId = id;\n            this.showModal = true;\n        },\n\n        onCloseModal() {\n            this.showModal = false;\n            this.currentRunId = '';\n        },\n\n        onClearLogs() {\n            this.isLoading = true;\n\n            return this.SwagPayPalPosApiService.startLogCleanup(this.salesChannel.id).then(() => {\n                this.$emit('run-update');\n                return this.getList();\n            }).catch((errorResponse) => {\n                this.catchError(null, errorResponse);\n                this.getList();\n            });\n        },\n\n        getLabelVariant(item) {\n            if (item.status === 'cancelled') {\n                return 'info';\n            }\n\n            if (item.status === 'failed') {\n                return 'danger';\n            }\n\n            if (item.logs.length <= 0) {\n                return 'success';\n            }\n\n            if (item.logs[0].level >= 400) {\n                return 'danger';\n            }\n\n            if (item.logs[0].level >= 300) {\n                return 'warning';\n            }\n\n            if (item.logs[0].level > 200) {\n                return 'info';\n            }\n\n            return 'success';\n        },\n\n        getLabel(item) {\n            if (item.status === 'cancelled') {\n                return 'swag-paypal-pos.detail.runs.states.aborted';\n            }\n\n            if (item.status === 'failed') {\n                return 'swag-paypal-pos.detail.runs.states.failed';\n            }\n\n            if (item.logs.length <= 0) {\n                return 'swag-paypal-pos.detail.runs.states.successful';\n            }\n\n            if (item.logs[0].level > 200) {\n                return 'swag-paypal-pos.detail.runs.states.withWarnings';\n            }\n\n            return 'swag-paypal-pos.detail.runs.states.successful';\n        },\n    },\n});\n","import template from './swag-paypal-pos-wizard.html.twig';\nimport './swag-paypal-pos-wizard.scss';\nimport {\n    PAYPAL_POS_SALES_CHANNEL_EXTENSION,\n    PAYPAL_POS_SALES_CHANNEL_TYPE_ID,\n} from '../../../../../constant/swag-paypal.constant';\n\nconst { Component, Context } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.extend('swag-paypal-pos-wizard', 'sw-first-run-wizard-modal', {\n    template,\n\n    inject: [\n        'SwagPayPalPosApiService',\n        'SwagPayPalPosSettingApiService',\n        'SwagPayPalPosWebhookRegisterService',\n        'salesChannelService',\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        'swag-paypal-pos-catch-error',\n        'notification',\n    ],\n\n    data() {\n        return {\n            showModal: true,\n            isLoading: false,\n            salesChannel: {},\n            cloneSalesChannelId: null,\n            stepperPages: [\n                'connection',\n                'connectionSuccess',\n                'connectionDisconnect',\n                'customization',\n                'productSelection',\n                'syncLibrary',\n                'syncPrices',\n                'finish',\n            ],\n            stepper: {},\n            currentStep: {},\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.wizardTitle,\n        };\n    },\n\n    computed: {\n        displayStepperPages() {\n            return this.stepperPages.filter((item) => {\n                return item !== 'connectionDisconnect';\n            });\n        },\n\n        stepInitialItemVariants() {\n            const maxNavigationIndex = this.stepperPages.length;\n            const { navigationIndex } = this.currentStep;\n            const navigationSteps = [];\n\n            for (let i = 1; i <= maxNavigationIndex; i += 1) {\n                if (i < navigationIndex) {\n                    navigationSteps.push('success');\n                } else if (i === navigationIndex) {\n                    navigationSteps.push('info');\n                } else {\n                    navigationSteps.push('disabled');\n                }\n            }\n            return navigationSteps;\n        },\n\n        paypalPosSalesChannelRepository() {\n            return this.repositoryFactory.create('swag_paypal_pos_sales_channel');\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        salesChannelCriteria() {\n            return (new Criteria())\n                .addAssociation(PAYPAL_POS_SALES_CHANNEL_EXTENSION)\n                .addAssociation('countries')\n                .addAssociation('currencies')\n                .addAssociation('domains')\n                .addAssociation('languages');\n        },\n\n        wizardTitle() {\n            const params = [\n                this.$tc('global.sw-admin-menu.textShopwareAdmin'),\n                this.$tc('swag-paypal-pos.general.moduleTitle'),\n                this.title,\n            ];\n\n            return params.reverse().join(' | ');\n        },\n    },\n\n    watch: {\n        '$route'(to) {\n            const toName = to.name.replace('swag.paypal.pos.wizard.', '');\n\n            this.currentStep = this.stepper[toName];\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.generateStepper();\n\n            const salesChannelId = this.$route.params.id;\n            if (salesChannelId) {\n                this.loadSalesChannel();\n                return;\n            }\n\n            this.createNewSalesChannel();\n        },\n\n        mountedComponent() {\n            const step = this.$route.name.replace('swag.paypal.pos.wizard.', '');\n            this.currentStep = this.stepper[step];\n        },\n\n        generateStepper() {\n            let index = 1;\n            this.stepper = this.stepperPages.reduce((accumulator, pageName) => {\n                if (pageName === 'connectionDisconnect') {\n                    index -= 1;\n                }\n\n                accumulator[pageName] = {\n                    name: `swag.paypal.pos.wizard.${pageName}`,\n                    variant: 'large',\n                    navigationIndex: index,\n                };\n\n                if (index === 1) {\n                    this.currentStep = accumulator[pageName];\n                }\n                index += 1;\n\n                return accumulator;\n            }, {});\n        },\n\n        onCloseModal() {\n            if (!this.salesChannel._isNew && (this.$route.params.id || this.salesChannel.id)) {\n                this.routeToDetailOverview();\n\n                return;\n            }\n\n            this.routeToDashboard();\n        },\n\n        onFinishWizard() {\n            this.routeToDetailOverview(true);\n        },\n\n        routeToDashboard() {\n            this.showModal = false;\n\n            this.$nextTick(() => {\n                this.$router.push({ name: 'sw.dashboard.index' });\n            });\n        },\n\n        routeToDetailOverview(finished = false) {\n            this.showModal = false;\n\n            this.save(finished).then(() => {\n                if (finished) {\n                    this.SwagPayPalPosApiService.startCompleteSync(this.salesChannel.id);\n                }\n\n                this.$router.push({\n                    name: 'swag.paypal.pos.detail.overview',\n                    params: { id: this.salesChannel.id },\n                });\n            });\n        },\n\n        save(activateSalesChannel = false, silentWebhook = false) {\n            if (activateSalesChannel) {\n                this.salesChannel.active = true;\n            }\n\n            return this.salesChannelRepository.save(this.salesChannel, Context.api).then(async () => {\n                this.isLoading = false;\n                this.isSaveSuccessful = true;\n                this.isNewEntity = false;\n\n                this.$root.$emit('sales-channel-change');\n                await this.loadSalesChannel();\n\n                this.cloneProductVisibility();\n                this.registerWebhook(silentWebhook);\n            }).catch(() => {\n                this.isLoading = false;\n\n                this.createNotificationError({\n                    message: this.$tc('sw-sales-channel.detail.messageSaveError', 0, {\n                        name: this.salesChannel.name || this.placeholder(this.salesChannel, 'name'),\n                    }),\n                });\n            });\n        },\n\n        registerWebhook(silent = false) {\n            const webhookPromise = this.SwagPayPalPosWebhookRegisterService.registerWebhook(this.salesChannel.id);\n\n            if (!silent) {\n                return webhookPromise.catch(this.catchError.bind(this, 'swag-paypal-pos.messageWebhookRegisterError'));\n            }\n\n            return webhookPromise;\n        },\n\n        cloneProductVisibility() {\n            if (this.cloneSalesChannelId === null) {\n                return;\n            }\n\n            this.SwagPayPalPosSettingApiService.cloneProductVisibility(\n                this.cloneSalesChannelId,\n                this.salesChannel.id,\n            ).catch((errorResponse) => {\n                if (errorResponse.response.data && errorResponse.response.data.errors) {\n                    this.createNotificationError({\n                        message: this.$tc('swag-paypal-pos.messageCloneError'),\n                    });\n                }\n            });\n        },\n\n        createNewSalesChannel() {\n            if (Context.api.languageId !== Context.api.systemLanguageId) {\n                Context.api.languageId = Context.api.systemLanguageId;\n            }\n\n            this.previousApiKey = null;\n            this.salesChannel = this.salesChannelRepository.create(Context.api);\n            this.salesChannel.typeId = PAYPAL_POS_SALES_CHANNEL_TYPE_ID;\n            this.salesChannel.name = this.$tc('swag-paypal-pos.wizard.salesChannelPrototypeName');\n            this.salesChannel.active = false;\n\n            this.salesChannel.extensions.paypalPosSalesChannel\n                = this.paypalPosSalesChannelRepository.create(Context.api);\n\n            Object.assign(\n                this.salesChannel.extensions.paypalPosSalesChannel,\n                {\n                    mediaDomain: '',\n                    apiKey: '',\n                    imageDomain: '',\n                    productStreamId: null,\n                    syncPrices: true,\n                    replace: 0,\n                },\n            );\n\n            this.salesChannelService.generateKey().then((response) => {\n                this.salesChannel.accessKey = response.accessKey;\n            }).catch(() => {\n                this.createNotificationError({\n                    message: this.$tc('sw-sales-channel.detail.messageAPIError'),\n                });\n            });\n        },\n\n        loadSalesChannel() {\n            const salesChannelId = this.$route.params.id || this.salesChannel.id;\n            if (!salesChannelId) {\n                return new Promise((resolve) => { resolve(); });\n            }\n\n            this.isLoading = true;\n            return this.salesChannelRepository.get(salesChannelId, Shopware.Context.api, this.salesChannelCriteria)\n                .then((entity) => {\n                    this.salesChannel = entity;\n                    this.previousApiKey = entity.extensions.paypalPosSalesChannel.apiKey;\n                    this.isLoading = false;\n                });\n        },\n\n        updateCloneSalesChannel(cloneSalesChannelId) {\n            this.cloneSalesChannelId = cloneSalesChannelId;\n        },\n\n        toggleLoading(state) {\n            this.isLoading = state;\n        },\n    },\n});\n","import template from './swag-paypal-pos-wizard-connection.html.twig';\nimport './swag-paypal-pos-wizard-connection.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-pos-wizard-connection', {\n    template,\n\n    inject: [\n        'SwagPayPalPosSettingApiService',\n    ],\n\n    mixins: [\n        'notification',\n        'swag-paypal-pos-catch-error',\n    ],\n\n    props: {\n        salesChannel: {\n            type: Object,\n            required: true,\n        },\n        cloneSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            isConnecting: false,\n            apiKeyUrl: this.SwagPayPalPosSettingApiService.generateApiUrl(),\n        };\n    },\n\n    watch: {\n        'salesChannel.extensions.paypalPosSalesChannel.apiKey'(key) {\n            if (!key) {\n                return;\n            }\n\n            this.updateButtons();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.updateButtons();\n            this.setTitle();\n        },\n\n        setTitle() {\n            this.$emit('frw-set-title', this.$tc('swag-paypal-pos.wizard.connection.modalTitle'));\n        },\n\n        updateButtons() {\n            const buttonConfig = [\n                {\n                    key: 'next',\n                    label: this.$tc('sw-first-run-wizard.general.buttonNext'),\n                    position: 'right',\n                    variant: 'primary',\n                    action: this.routeToConnectionSuccess,\n                    disabled: this.isLoading || !(this.salesChannel.extensions.paypalPosSalesChannel.apiKey),\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        routeToConnectionSuccess() {\n            this.toggleLoadingState(true);\n            const apiKey = this.salesChannel.extensions.paypalPosSalesChannel.apiKey;\n\n            this.SwagPayPalPosSettingApiService.validateApiCredentials(apiKey).then((response) => {\n                if (response.credentialsValid === true) {\n                    this.toggleLoadingState(false);\n                    this.$router.push({ name: 'swag.paypal.pos.wizard.connectionSuccess' });\n                }\n            }).catch(\n                this.catchError.bind(this, 'swag-paypal-pos.authentication.messageTestError'),\n            ).finally(() => {\n                this.toggleLoadingState(false);\n            });\n        },\n\n        forceUpdate() {\n            this.$forceUpdate();\n            this.updateButtons();\n        },\n\n        toggleLoadingState(state) {\n            this.isConnecting = state;\n            this.$emit('toggle-loading', state);\n        },\n    },\n});\n","import template from './swag-paypal-pos-wizard-connection-success.html.twig';\nimport './swag-paypal-pos-wizard-connection-success.scss';\n\nconst { Component, Context } = Shopware;\n\nComponent.register('swag-paypal-pos-wizard-connection-success', {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'SwagPayPalPosSettingApiService',\n    ],\n\n    mixin: [\n        'placeholder',\n    ],\n\n    props: {\n        salesChannel: {\n            type: Object,\n            required: true,\n        },\n        cloneSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        saveSalesChannel: {\n            type: Function,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            posData: null,\n            isFetchingInformation: true,\n        };\n    },\n\n    computed: {\n        posUser() {\n            if (this.isFetchingInformation) {\n                const firstName = this.$tc('swag-paypal-pos.wizard.connectionSuccess.fakeFirstName');\n                const lastName = this.$tc('swag-paypal-pos.wizard.connectionSuccess.fakeLastName');\n                const mail = this.$tc('swag-paypal-pos.wizard.connectionSuccess.fakeMail');\n\n                return {\n                    firstName,\n                    lastName,\n                    fullName: `${firstName} ${lastName}`,\n                    mail,\n                };\n            }\n            const parts = this.posData.merchantInformation.name.split(' ');\n\n            return {\n                firstName: parts[0],\n                lastName: parts[parts.length - 1],\n                fullName: this.posData.merchantInformation.name,\n                mail: this.posData.merchantInformation.contactEmail,\n            };\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isFetchingInformation = true;\n            this.updateButtons();\n            this.setTitle();\n\n            return this.SwagPayPalPosSettingApiService.fetchInformation(this.salesChannel, true).then((response) => {\n                this.posData = response;\n\n                if (this.salesChannel.languageId === null) {\n                    this.salesChannel.languageId = Context.api.systemLanguageId;\n                    this.salesChannel.languages.push({\n                        id: Context.api.systemLanguageId,\n                    });\n                }\n\n                return this.saveSalesChannel(false, true);\n            }).finally(() => {\n                this.isFetchingInformation = false;\n                this.updateButtons();\n            });\n        },\n\n        setTitle() {\n            this.$emit('frw-set-title', this.$tc('swag-paypal-pos.wizard.connectionSuccess.modalTitle'));\n        },\n\n        updateButtons() {\n            const buttonConfig = [\n                {\n                    key: 'next',\n                    label: this.$tc('sw-first-run-wizard.general.buttonNext'),\n                    position: 'right',\n                    variant: 'primary',\n                    action: this.routeToCustomization,\n                    disabled: this.isFetchingInformation,\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        routeToCustomization() {\n            this.$router.push({\n                name: 'swag.paypal.pos.wizard.customization',\n                params: { id: this.salesChannel.id },\n            });\n        },\n\n        onDisconnect() {\n            this.$router.push({\n                name: 'swag.paypal.pos.wizard.connectionDisconnect',\n                params: { id: this.salesChannel.id },\n            });\n        },\n\n        forceUpdate() {\n            this.$forceUpdate();\n            this.updateButtons();\n        },\n    },\n});\n","import template from './swag-paypal-pos-wizard-connection-disconnect.html.twig';\nimport './swag-paypal-pos-wizard-connection-disconnect.scss';\n\nconst { Component, Context } = Shopware;\n\nComponent.register('swag-paypal-pos-wizard-connection-disconnect', {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'SwagPayPalPosSettingApiService',\n    ],\n\n    mixin: [\n        'placeholder',\n        'notification',\n    ],\n\n    props: {\n        salesChannel: {\n            type: Object,\n            required: true,\n        },\n        cloneSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        saveSalesChannel: {\n            type: Function,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            posData: null,\n            isFetchingInformation: true,\n        };\n    },\n\n    computed: {\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        posUser() {\n            if (this.isFetchingInformation) {\n                const firstName = this.$tc('swag-paypal-pos.wizard.connectionSuccess.fakeFirstName');\n                const lastName = this.$tc('swag-paypal-pos.wizard.connectionSuccess.fakeLastName');\n                const mail = this.$tc('swag-paypal-pos.wizard.connectionSuccess.fakeMail');\n\n                return {\n                    firstName,\n                    lastName,\n                    fullName: `${firstName} ${lastName}`,\n                    mail,\n                };\n            }\n            const parts = this.posData.merchantInformation.name.split(' ');\n\n            return {\n                firstName: parts[0],\n                lastName: parts[parts.length - 1],\n                fullName: this.posData.merchantInformation.name,\n                mail: this.posData.merchantInformation.contactEmail,\n            };\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isFetchingInformation = true;\n            this.updateButtons();\n            this.setTitle();\n\n            this.SwagPayPalPosSettingApiService.fetchInformation(this.salesChannel, true).then((response) => {\n                this.posData = response;\n            }).finally(() => {\n                this.isFetchingInformation = false;\n                this.updateButtons();\n            });\n        },\n\n        setTitle() {\n            this.$emit('frw-set-title', this.$tc('swag-paypal-pos.wizard.connectionDisconnect.modalTitle'));\n        },\n\n        updateButtons() {\n            const buttonConfig = [\n                {\n                    key: 'cancel',\n                    label: this.$tc('global.default.cancel'),\n                    position: 'right',\n                    action: this.routeBackToConnectionSuccess,\n                    disabled: false,\n                },\n                {\n                    key: 'next',\n                    label: this.$tc('swag-paypal-pos.wizard.connectionDisconnect.disconnectButton'),\n                    position: 'right',\n                    variant: 'danger',\n                    action: this.onDisconnect,\n                    disabled: this.isFetchingInformation,\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        routeBackToConnectionSuccess() {\n            this.$router.push({\n                name: 'swag.paypal.pos.wizard.connectionSuccess',\n                params: { id: this.salesChannel.id },\n            });\n        },\n\n        onDisconnect() {\n            // ToDo PPI-22 - The module should go into a disconnected state instead of deleting the whole saleschannel.\n            this.salesChannelRepository.delete(this.salesChannel.id, Context.api).then(() => {\n                // Forces the sw-admin-menu component to refresh the SalesChannel list\n                this.$root.$emit('sales-channel-change');\n\n                this.$emit('recreate-sales-channel');\n                this.forceUpdate();\n\n                this.$router.push({ name: 'swag.paypal.pos.wizard.connection' });\n            }).catch(() => {\n                this.createNotificationError({\n                    message: this.$tc('swag-paypal-pos.wizard.connectionDisconnect.disconnectErrorMessage'),\n                });\n            });\n        },\n\n        forceUpdate() {\n            this.$forceUpdate();\n            this.updateButtons();\n        },\n    },\n});\n","import template from './swag-paypal-pos-wizard-customization.html.twig';\nimport './swag-paypal-pos-wizard-customization.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-pos-wizard-customization', {\n    template,\n\n    props: {\n        salesChannel: {\n            type: Object,\n            required: true,\n        },\n        cloneSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        saveSalesChannel: {\n            type: Function,\n            required: true,\n        },\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    watch: {\n        'isLoading'(loading) {\n            if (loading) {\n                return;\n            }\n\n            this.updateButtons();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.updateButtons();\n            this.setTitle();\n            this.changeLanguage();\n        },\n\n        setTitle() {\n            this.$emit('frw-set-title', this.$tc('swag-paypal-pos.wizard.customization.modalTitle'));\n        },\n\n        updateButtons() {\n            const buttonConfig = [\n                {\n                    key: 'back',\n                    label: this.$tc('sw-first-run-wizard.general.buttonBack'),\n                    position: 'left',\n                    action: this.routeBackToConnectionSuccess,\n                    disabled: false,\n                },\n                {\n                    key: 'next',\n                    label: this.$tc('sw-first-run-wizard.general.buttonNext'),\n                    position: 'right',\n                    variant: 'primary',\n                    action: this.routeToProductSelection,\n                    disabled: this.nextButtonDisabled(),\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        nextButtonDisabled() {\n            return this.isLoading\n                || !(this.salesChannel.name)\n                || !(this.salesChannel.languageId)\n                || !(this.salesChannel.extensions.paypalPosSalesChannel.mediaDomain);\n        },\n\n        routeBackToConnectionSuccess() {\n            this.$router.push({\n                name: 'swag.paypal.pos.wizard.connectionSuccess',\n                params: { id: this.salesChannel.id },\n            });\n        },\n\n        routeToProductSelection() {\n            this.$router.push({\n                name: 'swag.paypal.pos.wizard.productSelection',\n                params: { id: this.salesChannel.id },\n            });\n        },\n\n        forceUpdate() {\n            this.$forceUpdate();\n            this.$nextTick().then(() => {\n                this.updateButtons();\n            });\n        },\n\n        changeLanguage() {\n            this.salesChannel.languages.length = 0;\n            this.salesChannel.languages.push({\n                id: this.salesChannel.languageId,\n            });\n            this.$forceUpdate();\n        },\n\n        toggleLoadingState(state) {\n            this.isConnecting = state;\n            this.$emit('toggle-loading', state);\n        },\n    },\n});\n","import template from './swag-paypal-pos-wizard-product-selection.html.twig';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.register('swag-paypal-pos-wizard-product-selection', {\n    template,\n\n    props: {\n        salesChannel: {\n            type: Object,\n            required: true,\n        },\n        cloneSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        saveSalesChannel: {\n            type: Function,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            manualSalesChannel: false,\n            hasClone: false,\n        };\n    },\n\n    computed: {\n        localCloneSalesChannelId: {\n            get() {\n                this.updateButtons();\n                return this.cloneSalesChannelId;\n            },\n            set(cloneSalesChannelId) {\n                this.$emit('update-clone-sales-channel', cloneSalesChannelId);\n            },\n        },\n\n        salesChannelCriteria() {\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.not('and', [\n                Criteria.equals('id', this.salesChannel.id),\n            ]));\n\n            return criteria;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.updateButtons();\n            this.setTitle();\n        },\n\n        setTitle() {\n            this.$emit('frw-set-title', this.$tc('swag-paypal-pos.wizard.productSelection.modalTitle'));\n        },\n\n        updateButtons() {\n            const buttonConfig = [\n                {\n                    key: 'back',\n                    label: this.$tc('sw-first-run-wizard.general.buttonBack'),\n                    position: 'left',\n                    action: this.routeBackToCustomization,\n                    disabled: false,\n                },\n                {\n                    key: 'next',\n                    label: this.$tc('sw-first-run-wizard.general.buttonNext'),\n                    position: 'right',\n                    variant: 'primary',\n                    action: this.routeToSyncLibrary,\n                    disabled: false,\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        routeBackToCustomization() {\n            this.$router.push({\n                name: 'swag.paypal.pos.wizard.customization',\n                params: { id: this.salesChannel.id },\n            });\n        },\n\n        routeToSyncLibrary() {\n            this.$router.push({\n                name: 'swag.paypal.pos.wizard.syncLibrary',\n                params: { id: this.salesChannel.id },\n            });\n        },\n\n        updateClone() {\n            this.$emit('update-clone-sales-channel', null);\n            this.forceUpdate();\n        },\n\n        forceUpdate() {\n            this.$forceUpdate();\n            this.updateButtons();\n        },\n\n        toggleLoadingState(state) {\n            this.isConnecting = state;\n            this.$emit('toggle-loading', state);\n        },\n    },\n});\n","import template from './swag-paypal-pos-wizard-sync-prices.html.twig';\nimport './swag-paypal-pos-wizard-sync-prices.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-pos-wizard-sync-prices', {\n    template,\n\n    props: {\n        salesChannel: {\n            type: Object,\n            required: true,\n        },\n        cloneSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        saveSalesChannel: {\n            type: Function,\n            required: true,\n        },\n    },\n\n    computed: {\n        optionTrue() {\n            return {\n                name: this.$tc('swag-paypal-pos.wizard.syncPrices.optionTrueLabel'),\n                description: this.$tc('swag-paypal-pos.wizard.syncPrices.optionTrueDescription'),\n            };\n        },\n\n        optionFalse() {\n            return {\n                name: this.$tc('swag-paypal-pos.wizard.syncPrices.optionFalseLabel'),\n                description: this.$tc('swag-paypal-pos.wizard.syncPrices.optionFalseDescription'),\n            };\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.updateButtons();\n            this.setTitle();\n        },\n\n        setTitle() {\n            this.$emit('frw-set-title', this.$tc('swag-paypal-pos.wizard.syncPrices.modalTitle'));\n        },\n\n        updateButtons() {\n            const buttonConfig = [\n                {\n                    key: 'back',\n                    label: this.$tc('sw-first-run-wizard.general.buttonBack'),\n                    position: 'left',\n                    action: this.routeBackToSyncLibrary,\n                    disabled: false,\n                },\n                {\n                    key: 'next',\n                    label: this.$tc('sw-first-run-wizard.general.buttonNext'),\n                    position: 'right',\n                    variant: 'primary',\n                    action: this.routeToFinish,\n                    disabled: false,\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        routeBackToSyncLibrary() {\n            this.$router.push({\n                name: 'swag.paypal.pos.wizard.syncLibrary',\n                params: { id: this.salesChannel.id },\n            });\n        },\n\n        routeToFinish() {\n            this.$router.push({\n                name: 'swag.paypal.pos.wizard.finish',\n                params: { id: this.salesChannel.id },\n            });\n        },\n\n        forceUpdate() {\n            this.$forceUpdate();\n        },\n\n        toggleLoadingState(state) {\n            this.isConnecting = state;\n            this.$emit('toggle-loading', state);\n        },\n    },\n});\n","import template from './swag-paypal-pos-wizard-sync-library.html.twig';\nimport './swag-paypal-pos-wizard-sync-library.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-pos-wizard-sync-library', {\n    template,\n\n    inject: [\n        'SwagPayPalPosSettingApiService',\n    ],\n\n    props: {\n        salesChannel: {\n            type: Object,\n            required: true,\n        },\n        cloneSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        saveSalesChannel: {\n            type: Function,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            shopwareProductsCount: 0,\n            posProductsCount: 0,\n        };\n    },\n\n    computed: {\n        options() {\n            return [\n                {\n                    value: 2,\n                    name: this.$tc('swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyLabel'),\n                    description: this.$tc('swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyDescription'),\n                }, {\n                    value: 1,\n                    name: this.$tc('swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeLabel'),\n                    description: this.$tc('swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeDescription'),\n                }, {\n                    value: 0,\n                    name: this.$tc('swag-paypal-pos.wizard.syncLibrary.optionReplaceNotLabel'),\n                    description: this.$tc('swag-paypal-pos.wizard.syncLibrary.optionReplaceNotDescription'),\n                },\n            ];\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.updateButtons();\n            this.setTitle();\n            this.fetchProductCounts();\n        },\n\n        setTitle() {\n            this.$emit('frw-set-title', this.$tc('swag-paypal-pos.wizard.syncLibrary.modalTitle'));\n        },\n\n        updateButtons() {\n            const buttonConfig = [\n                {\n                    key: 'back',\n                    label: this.$tc('sw-first-run-wizard.general.buttonBack'),\n                    position: 'left',\n                    action: this.routeBackToProductSelection,\n                    disabled: false,\n                },\n                {\n                    key: 'next',\n                    label: this.$tc('sw-first-run-wizard.general.buttonNext'),\n                    position: 'right',\n                    variant: 'primary',\n                    action: this.routeToSyncPrices,\n                    disabled: false,\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        routeBackToProductSelection() {\n            this.$router.push({\n                name: 'swag.paypal.pos.wizard.productSelection',\n                params: { id: this.salesChannel.id },\n            });\n        },\n\n        routeToSyncPrices() {\n            this.$router.push({\n                name: 'swag.paypal.pos.wizard.syncPrices',\n                params: { id: this.salesChannel.id },\n            });\n        },\n\n        forceUpdate() {\n            this.$forceUpdate();\n        },\n\n        toggleLoadingState(state) {\n            this.isConnecting = state;\n            this.$emit('toggle-loading', state);\n        },\n\n        fetchProductCounts() {\n            this.toggleLoadingState(true);\n            this.SwagPayPalPosSettingApiService.getProductCount(\n                this.salesChannel.id,\n                this.cloneSalesChannelId,\n            ).then((response) => {\n                this.shopwareProductsCount = response.localCount;\n                this.posProductsCount = response.remoteCount;\n            }).finally(() => {\n                this.toggleLoadingState(false);\n            });\n        },\n    },\n});\n","import template from './swag-paypal-pos-wizard-finish.html.twig';\nimport './swag-paypal-pos-wizard-finish.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('swag-paypal-pos-wizard-finish', {\n    template,\n\n    inject: [\n        'SwagPayPalPosApiService',\n    ],\n\n    props: {\n        salesChannel: {\n            type: Object,\n            required: true,\n        },\n        cloneSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.updateButtons();\n            this.setTitle();\n        },\n\n        setTitle() {\n            this.$emit('frw-set-title', this.$tc('swag-paypal-pos.wizard.finish.modalTitle'));\n        },\n\n        updateButtons() {\n            const buttonConfig = [\n                {\n                    key: 'back',\n                    label: this.$tc('sw-first-run-wizard.general.buttonBack'),\n                    position: 'left',\n                    action: this.routeBackToSyncPrices,\n                    disabled: false,\n                },\n                {\n                    key: 'finish',\n                    label: this.$tc('sw-first-run-wizard.general.buttonFinish'),\n                    position: 'right',\n                    variant: 'primary',\n                    action: this.onFinish,\n                    disabled: false,\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        routeBackToSyncPrices() {\n            this.$router.push({\n                name: 'swag.paypal.pos.wizard.syncPrices',\n                params: { id: this.salesChannel.id },\n            });\n        },\n\n        onFinish() {\n            this.$emit('frw-finish');\n        },\n    },\n});\n","import './component';\nimport './extension';\nimport './page';\n\nconst { Module } = Shopware;\n\nModule.register('swag-paypal-pos', {\n    type: 'plugin',\n    name: 'SwagPayPalPos',\n    title: 'swag-paypal.general.mainMenuItemGeneral',\n    description: 'swag-paypal.general.descriptionTextModule',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#9AA8B5',\n    icon: 'default-action-settings',\n\n    routes: {\n        detail: {\n            component: 'swag-paypal-pos',\n            path: ':id/detail',\n            redirect: {\n                name: 'swag.paypal.pos.detail.overview',\n            },\n            meta: {\n                privilege: 'sales_channel.viewer',\n            },\n            children: {\n                overview: {\n                    component: 'swag-paypal-pos-detail-overview',\n                    path: 'overview',\n                    meta: {\n                        privilege: 'sales_channel.viewer',\n                    },\n                },\n                syncedProducts: {\n                    component: 'swag-paypal-pos-detail-synced-products',\n                    path: 'synced-products',\n                    meta: {\n                        privilege: 'sales_channel.viewer',\n                    },\n                },\n                settings: {\n                    component: 'swag-paypal-pos-detail-settings',\n                    path: 'settings',\n                    meta: {\n                        privilege: 'sales_channel.viewer',\n                    },\n                },\n                runs: {\n                    component: 'swag-paypal-pos-detail-runs',\n                    path: 'runs',\n                    meta: {\n                        privilege: 'sales_channel.viewer',\n                    },\n                },\n            },\n        },\n        wizard: {\n            component: 'swag-paypal-pos-wizard',\n            path: ':id?/wizard',\n            redirect: {\n                name: 'swag.paypal.pos.wizard.connection',\n            },\n            meta: {\n                privilege: 'sales_channel.creator',\n            },\n            children: {\n                connection: {\n                    component: 'swag-paypal-pos-wizard-connection',\n                    path: 'connection',\n                    meta: {\n                        privilege: 'sales_channel.creator',\n                    },\n                },\n                connectionSuccess: {\n                    component: 'swag-paypal-pos-wizard-connection-success',\n                    path: 'connection-success',\n                    meta: {\n                        privilege: 'sales_channel.creator',\n                    },\n                },\n                connectionDisconnect: {\n                    component: 'swag-paypal-pos-wizard-connection-disconnect',\n                    path: 'connection-disconnect',\n                    meta: {\n                        privilege: 'sales_channel.creator',\n                    },\n                },\n                customization: {\n                    component: 'swag-paypal-pos-wizard-customization',\n                    path: 'customization',\n                    meta: {\n                        privilege: 'sales_channel.creator',\n                    },\n                },\n                productSelection: {\n                    component: 'swag-paypal-pos-wizard-product-selection',\n                    path: 'product-selection',\n                    meta: {\n                        privilege: 'sales_channel.creator',\n                    },\n                },\n                syncPrices: {\n                    component: 'swag-paypal-pos-wizard-sync-prices',\n                    path: 'sync-prices',\n                    meta: {\n                        privilege: 'sales_channel.creator',\n                    },\n                },\n                syncLibrary: {\n                    component: 'swag-paypal-pos-wizard-sync-library',\n                    path: 'sync-library',\n                    meta: {\n                        privilege: 'sales_channel.creator',\n                    },\n                },\n                finish: {\n                    component: 'swag-paypal-pos-wizard-finish',\n                    path: 'finish',\n                    meta: {\n                        privilege: 'sales_channel.creator',\n                    },\n                },\n            },\n        },\n    },\n});\n","import template from './swag-paypal-disputes-detail.html.twig';\nimport './swag-paypal-disputes-detail.scss';\n\nconst { Context, Component, Filter, Utils } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { capitalizeString } = Shopware.Utils.string;\n\nComponent.register('swag-paypal-disputes-detail', {\n    template,\n\n    inject: [\n        'SwagPayPalDisputeApiService',\n        'systemConfigApiService',\n        'repositoryFactory',\n    ],\n\n    mixins: ['notification'],\n\n    props: {\n        disputeId: {\n            type: String,\n            required: true,\n        },\n\n        salesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            dispute: null,\n            resolutionCenterUrl: 'https://www.paypal.com/resolutioncenter',\n            orderModuleLink: null,\n        };\n    },\n\n    computed: {\n        orderTransactionRepository() {\n            return this.repositoryFactory.create('order_transaction');\n        },\n\n        orderTransactionCriteria() {\n            return new Criteria(1, 1);\n        },\n\n        dateFilter() {\n            return Filter.getByName('date');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = true;\n\n            this.systemConfigApiService.getValues('SwagPayPal.settings').then((response) => {\n                if (response['SwagPayPal.settings.sandbox']) {\n                    this.resolutionCenterUrl = 'https://www.sandbox.paypal.com/resolutioncenter';\n                }\n\n                this.getDetail();\n            });\n        },\n\n        getDetail() {\n            this.SwagPayPalDisputeApiService.detail(this.disputeId, this.salesChannelId).then((dispute) => {\n                this.dispute = dispute;\n                this.setLinkToOrderModule(dispute);\n                this.isLoading = false;\n            }).catch(this.handleError);\n        },\n\n        handleError(errorResponse) {\n            const errorDetail = errorResponse.response.data.errors[0].detail;\n            this.createNotificationError({\n                message: `${this.$tc('swag-paypal-disputes.list.errorTitle')}: ${errorDetail}`,\n                autoClose: false,\n            });\n            this.isLoading = false;\n        },\n\n        getExternalDetailPageLink() {\n            return `${this.resolutionCenterUrl}/${this.dispute.dispute_id}`;\n        },\n\n        setLinkToOrderModule(dispute) {\n            if (!dispute.disputed_transactions) {\n                return;\n            }\n\n            const disputedTransaction = dispute.disputed_transactions[0];\n            if (!disputedTransaction) {\n                return;\n            }\n\n            this.orderTransactionRepository.get(disputedTransaction.custom, Context.api, this.orderTransactionCriteria)\n                .then((orderTransaction) => {\n                    if (orderTransaction === null) {\n                        return;\n                    }\n\n                    this.orderModuleLink = { name: 'sw.order.detail.base', params: { id: orderTransaction.orderId } };\n                });\n        },\n\n        formatTechnicalText(technicalText) {\n            return capitalizeString(technicalText).replace(/_/g, ' ');\n        },\n\n        getInquiryClass(stage) {\n            if (stage === 'INQUIRY') {\n                return 'swag-paypal-disputes-detail__stage-inquiry';\n            }\n\n            return 'swag-paypal-disputes-detail__stage-other';\n        },\n\n        getDueDate(sellerResponseDueDate, buyerResponseDueDate) {\n            if (sellerResponseDueDate !== null) {\n                return `${this.$tc('swag-paypal-disputes.common.response_due_date.seller')}: ${\n                    this.formatDate(sellerResponseDueDate)}`;\n            }\n\n            if (buyerResponseDueDate !== null) {\n                return `${this.$tc('swag-paypal-disputes.common.response_due_date.buyer')}: ${\n                    this.formatDate(buyerResponseDueDate)}`;\n            }\n\n            return '';\n        },\n\n        copyToClipboard() {\n            if (this.dispute === null) {\n                return;\n            }\n\n            try {\n                Utils.dom.copyToClipboard(JSON.stringify(this.dispute));\n                this.createNotificationInfo({\n                    message: this.$tc('global.sw-field.notification.notificationCopySuccessMessage'),\n                });\n            } catch (err) {\n                this.createNotificationError({\n                    message: this.$tc('global.sw-field.notification.notificationCopyFailureMessage'),\n                });\n            }\n        },\n\n        formatDate(dateTime) {\n            return this.dateFilter(dateTime, {\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            });\n        },\n    },\n});\n","export const DISPUTE_STATE_REQUIRED_ACTION = 'REQUIRED_ACTION';\nexport const DISPUTE_STATE_REQUIRED_OTHER_PARTY_ACTION = 'REQUIRED_OTHER_PARTY_ACTION';\nexport const DISPUTE_STATE_UNDER_PAYPAL_REVIEW = 'UNDER_PAYPAL_REVIEW';\nexport const DISPUTE_STATE_RESOLVED = 'RESOLVED';\nexport const DISPUTE_STATE_OPEN_INQUIRIES = 'OPEN_INQUIRIES';\nexport const DISPUTE_STATE_APPEALABLE = 'APPEALABLE';\n\nexport default {\n    DISPUTE_STATE_REQUIRED_ACTION,\n    DISPUTE_STATE_REQUIRED_OTHER_PARTY_ACTION,\n    DISPUTE_STATE_UNDER_PAYPAL_REVIEW,\n    DISPUTE_STATE_RESOLVED,\n    DISPUTE_STATE_OPEN_INQUIRIES,\n    DISPUTE_STATE_APPEALABLE,\n};\n","import template from './swag-paypal-disputes-list.html.twig';\nimport {\n    DISPUTE_STATE_REQUIRED_ACTION,\n    DISPUTE_STATE_REQUIRED_OTHER_PARTY_ACTION,\n    DISPUTE_STATE_UNDER_PAYPAL_REVIEW,\n    DISPUTE_STATE_RESOLVED,\n    DISPUTE_STATE_OPEN_INQUIRIES,\n    DISPUTE_STATE_APPEALABLE,\n} from './swag-paypal-disputes-consts';\nimport './swag-paypal-disputes-list.scss';\n\nconst { Component, Filter } = Shopware;\nconst { debounce } = Shopware.Utils;\nconst { capitalizeString } = Shopware.Utils.string;\n\nComponent.register('swag-paypal-disputes-list', {\n    template,\n\n    inject: [\n        'SwagPayPalDisputeApiService',\n        'systemConfigApiService',\n    ],\n\n    mixins: ['notification'],\n\n    data() {\n        return {\n            isLoading: false,\n            disputes: [],\n            disputeStates: [\n                {\n                    value: DISPUTE_STATE_REQUIRED_ACTION,\n                    label: this.formatTechnicalText(DISPUTE_STATE_REQUIRED_ACTION),\n                },\n                {\n                    value: DISPUTE_STATE_REQUIRED_OTHER_PARTY_ACTION,\n                    label: this.formatTechnicalText(DISPUTE_STATE_REQUIRED_OTHER_PARTY_ACTION),\n                },\n                {\n                    value: DISPUTE_STATE_UNDER_PAYPAL_REVIEW,\n                    label: this.formatTechnicalText(DISPUTE_STATE_UNDER_PAYPAL_REVIEW),\n                },\n                {\n                    value: DISPUTE_STATE_RESOLVED,\n                    label: this.formatTechnicalText(DISPUTE_STATE_RESOLVED),\n                },\n                {\n                    value: DISPUTE_STATE_OPEN_INQUIRIES,\n                    label: this.formatTechnicalText(DISPUTE_STATE_OPEN_INQUIRIES),\n                },\n                {\n                    value: DISPUTE_STATE_APPEALABLE,\n                    label: this.formatTechnicalText(DISPUTE_STATE_APPEALABLE),\n                },\n            ],\n            disputeStateFilter: [],\n            salesChannelId: null,\n            total: 0,\n            limit: 10,\n            page: 1,\n            resolutionCenterUrl: 'https://www.paypal.com/resolutioncenter',\n        };\n    },\n\n    computed: {\n        dateFilter() {\n            return Filter.getByName('date');\n        },\n\n        disputesColumns() {\n            return [\n                {\n                    property: 'dispute_id',\n                    label: this.$tc('swag-paypal-disputes.common.dispute_id'),\n                },\n                {\n                    property: 'update_time',\n                    label: this.$tc('swag-paypal-disputes.common.update_time'),\n                },\n                {\n                    property: 'response_due_date',\n                    label: this.$tc('swag-paypal-disputes.common.response_due_date.label'),\n                },\n                {\n                    property: 'status',\n                    label: this.$tc('swag-paypal-disputes.common.status'),\n                },\n                {\n                    property: 'dispute_life_cycle_stage',\n                    label: this.$tc('swag-paypal-disputes.common.dispute_life_cycle_stage'),\n                },\n                {\n                    property: 'dispute_amount',\n                    label: this.$tc('swag-paypal-disputes.common.dispute_amount'),\n                },\n            ];\n        },\n\n        visibleDisputes() {\n            return this.disputes.slice((this.page - 1) * this.limit, (this.page - 1) * this.limit + this.limit);\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = true;\n\n            this.systemConfigApiService.getValues('SwagPayPal.settings').then((response) => {\n                if (response['SwagPayPal.settings.sandbox']) {\n                    this.resolutionCenterUrl = 'https://www.sandbox.paypal.com/resolutioncenter';\n                }\n\n                this.getList();\n            });\n        },\n\n        getList() {\n            this.isLoading = true;\n            this.disputes = [];\n            let disputeStateFilter = null;\n            if (this.disputeStateFilter.length > 0) {\n                disputeStateFilter = this.disputeStateFilter.join(',');\n            }\n\n            this.SwagPayPalDisputeApiService.list(this.salesChannelId, disputeStateFilter).then((disputeList) => {\n                if (disputeList.items !== null) {\n                    this.disputes = this.sortDisputes(disputeList.items);\n                }\n                this.total = this.disputes.length;\n                this.isLoading = false;\n            }).catch(this.handleError);\n        },\n\n        sortDisputes(disputes) {\n            // sort resolved disputes as last\n            disputes.sort((a, b) => {\n                if (a.status === 'RESOLVED') {\n                    return 1;\n                }\n\n                if (b.status === 'RESOLVED') {\n                    return -1;\n                }\n\n                return 0;\n            });\n\n            return disputes;\n        },\n\n        debouncedGetList: debounce(function updateList() {\n            this.getList();\n        }, 850),\n\n        handleError(errorResponse) {\n            const errorDetail = errorResponse.response.data.errors[0].detail;\n            this.createNotificationError({\n                message: `${this.$tc('swag-paypal-disputes.list.errorTitle')}: ${errorDetail}`,\n                autoClose: false,\n            });\n            this.isLoading = false;\n        },\n\n        formatUpdateDate(dateTime) {\n            return this.formatDate(dateTime, {});\n        },\n\n        formatUpdateTime(dateTime) {\n            return this.formatDate(dateTime, {\n                day: undefined,\n                month: undefined,\n                year: undefined,\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            });\n        },\n\n        formatTechnicalText(technicalText) {\n            return capitalizeString(technicalText).replace(/_/g, ' ');\n        },\n\n        onPageChange({ page, limit }) {\n            this.page = page;\n            this.limit = limit;\n            this.$emit('page-change');\n        },\n\n        onRefresh() {\n            this.getList();\n        },\n\n        onChangeDisputeStateFilter(value) {\n            this.disputeStateFilter = value;\n            this.debouncedGetList();\n        },\n\n        onSalesChannelChanged(value) {\n            this.salesChannelId = value;\n            this.getList();\n        },\n\n        getExternalDetailPageLink(dispute) {\n            return `${this.resolutionCenterUrl}/${dispute.dispute_id}`;\n        },\n\n        formatDate(dateTime, options = { hour: '2-digit', minute: '2-digit', second: '2-digit' }) {\n            return this.dateFilter(dateTime, options);\n        },\n    },\n});\n","import './acl';\nimport './page/swag-paypal-disputes-detail';\nimport './page/swag-paypal-disputes-list';\n\nconst { Module } = Shopware;\n\nModule.register('swag-paypal-disputes', {\n    type: 'plugin',\n    name: 'paypal-disputes',\n    title: 'swag-paypal-disputes.general.mainMenuItemGeneral',\n    description: 'swag-paypal-disputes.general.descriptionTextModule',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#F88962',\n    icon: 'default-communication-speech-bubbles',\n    favicon: 'icon-module-customers.png',\n\n    routes: {\n        index: {\n            component: 'swag-paypal-disputes-list',\n            path: 'index',\n            meta: {\n                privilege: 'swag_paypal_disputes.viewer',\n            },\n        },\n\n        detail: {\n            component: 'swag-paypal-disputes-detail',\n            path: 'detail/:disputeId/:salesChannelId?',\n            props: {\n                default(route) {\n                    return {\n                        disputeId: route.params.disputeId,\n                        salesChannelId: route.params.salesChannelId,\n                    };\n                },\n            },\n            meta: {\n                privilege: 'swag_paypal_disputes.viewer',\n                parentPath: 'swag.paypal.disputes.index',\n            },\n        },\n    },\n\n    navigation: [{\n        id: 'swag-paypal-disputes',\n        path: 'swag.paypal.disputes.index',\n        label: 'swag-paypal-disputes.general.mainMenuItemGeneral',\n        parent: 'sw-customer',\n        privilege: 'swag_paypal_disputes.viewer',\n    }],\n});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-payment-actions-v2.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"9472c7f4\", content, true, {});","module.exports = \"{% block swag_paypal_payment_actions %}\\n    <div>\\n        <div class=\\\"swag-paypal-payment-actions__button-container\\\">\\n            <div class=\\\"swag-paypal-payment-actions__authorize-button-group\\\">\\n\\n                {% block swag_paypal_payment_actions_void %}\\n                    <sw-button v-if=\\\"showVoidButton\\\"\\n                               size=\\\"small\\\"\\n                               :disabled=\\\"!acl.can('order.editor')\\\"\\n                               @click=\\\"spawnModal('void')\\\">\\n                        {{ $tc('swag-paypal-payment.buttons.label.void') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block swag_paypal_payment_actions_capture %}\\n                    <sw-button v-if=\\\"captureableAmount > 0\\\"\\n                               size=\\\"small\\\"\\n                               :disabled=\\\"!acl.can('order.editor')\\\"\\n                               @click=\\\"spawnModal('capture')\\\">\\n                        {{ $tc('swag-paypal-payment.buttons.label.capture') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </div>\\n\\n            {% block swag_paypal_payment_actions_refund %}\\n                <sw-button variant=\\\"primary\\\"\\n                           size=\\\"small\\\"\\n                           :disabled=\\\"refundableAmount <= 0 || !acl.can('order.editor')\\\"\\n                           @click=\\\"spawnModal('refund')\\\">\\n                    {{ $tc('swag-paypal-payment.buttons.label.refund') }}\\n                </sw-button>\\n            {% endblock %}\\n\\n        </div>\\n\\n        {% block swag_paypal_payment_actions_modal %}\\n                {% block swag_paypal_payment_actions_modal_capture %}\\n                    <swag-paypal-payment-action-capture v-if=\\\"modalType === 'capture'\\\"\\n                                                        :orderId=\\\"orderId\\\"\\n                                                        :paymentResource=\\\"paymentResource\\\"\\n                                                        :maxCaptureValue=\\\"captureableAmount\\\"\\n                                                        @modal-close=\\\"closeModal\\\">\\n                    </swag-paypal-payment-action-capture>\\n                {% endblock %}\\n\\n                {% block swag_paypal_payment_actions_modal_refund %}\\n                    <swag-paypal-payment-action-refund v-if=\\\"modalType === 'refund'\\\"\\n                                                       :orderId=\\\"orderId\\\"\\n                                                       :paymentResource=\\\"paymentResource\\\"\\n                                                       @modal-close=\\\"closeModal\\\">\\n                    </swag-paypal-payment-action-refund>\\n                {% endblock %}\\n\\n                {% block swag_paypal_payment_actions_modal_void %}\\n                    <swag-paypal-payment-action-void v-if=\\\"modalType === 'void'\\\"\\n                                                     :orderId=\\\"orderId\\\"\\n                                                     :paymentResource=\\\"paymentResource\\\"\\n                                                     @modal-close=\\\"closeModal\\\">\\n                    </swag-paypal-payment-action-void>\\n                {% endblock %}\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","const { Mixin } = Shopware;\nconst { debug } = Shopware.Utils;\n\nMixin.register('swag-paypal-credentials-loader', {\n\n    inject: ['SwagPayPalApiCredentialsService'],\n\n    data() {\n        return {\n            isGetCredentialsSuccessful: false,\n            lastOnboardingSandbox: false,\n            nonceLive: `${Shopware.Utils.createId()}${Shopware.Utils.createId()}`,\n            nonceSandbox: `${Shopware.Utils.createId()}${Shopware.Utils.createId()}`,\n            payPalPartnerIdLive: 'DYKPBPEAW5JNA',\n            payPalPartnerClientIdLive: 'AR1aQ13lHxH1c6b3CDd8wSY6SWad2Lt5fv5WkNIZg-qChBoGNfHr2kT180otUmvE_xXtwkgahXUBBurW',\n            payPalPartnerIdSandbox: '45KXQA7PULGAG',\n            payPalPartnerClientIdSandbox: 'AQ9g8qMYHpE8s028VCq_GO3Roy9pjeqGDjKTkR_sxzX0FtncBb3QUWbFtoQMtdpe2lG9NpnDT419dK8s',\n\n            requestParams: {\n                channelId: 'partner',\n                product: 'ppcp',\n                secondaryProducts: 'payment_methods',\n                capabilities: 'PAY_UPON_INVOICE',\n                integrationType: 'FO',\n                features: [\n                    'PAYMENT',\n                    'REFUND',\n                    'READ_SELLER_DISPUTE',\n                    'UPDATE_SELLER_DISPUTE',\n                    'ADVANCED_TRANSACTIONS_SEARCH',\n                    'ACCESS_MERCHANT_INFORMATION',\n                    'TRACKING_SHIPMENT_READWRITE',\n                ],\n                displayMode: 'minibrowser',\n                partnerLogoUrl: 'https://assets.shopware.com/media/logos/shopware_logo_blue.svg',\n            },\n        };\n    },\n\n    computed: {\n        onboardingUrlLive() {\n            const params = this.createRequestParameter({\n                partnerId: this.payPalPartnerIdLive,\n                partnerClientId: this.payPalPartnerClientIdLive,\n                returnToPartnerUrl: this.returnUrl(),\n                sellerNonce: this.nonceLive,\n            });\n\n            return `https://www.paypal.com/bizsignup/partner/entry?${params.toString()}`;\n        },\n        onboardingUrlSandbox() {\n            const params = this.createRequestParameter({\n                partnerId: this.payPalPartnerIdSandbox,\n                partnerClientId: this.payPalPartnerClientIdSandbox,\n                returnToPartnerUrl: this.returnUrl(),\n                sellerNonce: this.nonceSandbox,\n            });\n\n            return `https://www.sandbox.paypal.com/bizsignup/partner/entry?${params.toString()}`;\n        },\n    },\n\n    created() {\n        this.$root.$on('paypal-onboarding-finish', this.getPayPalCredentials);\n        window.onboardingCallbackLive = function onboardingCallback(authCode, sharedId) {\n            Shopware.Application.getApplicationRoot().$emit(\n                'paypal-onboarding-finish',\n                { authCode, sharedId, sandbox: false },\n            );\n        };\n        window.onboardingCallbackSandbox = function onboardingCallbackSandbox(authCode, sharedId) {\n            Shopware.Application.getApplicationRoot().$emit(\n                'paypal-onboarding-finish',\n                { authCode, sharedId, sandbox: true },\n            );\n        };\n    },\n\n    mounted() {\n        this.createScript();\n    },\n\n    destroyed() {\n        this.$root.$off('paypal-onboarding-finish');\n    },\n\n    methods: {\n        returnUrl() {\n            return `${window.location.origin}${window.location.pathname}#${this.$route.path}`;\n        },\n\n        createRequestParameter(config = {}) {\n            const params = { ...this.requestParams, ...config };\n            return Object.keys(params).reduce((accumulator, key) => {\n                let value = params[key];\n\n                if (Array.isArray(value)) {\n                    value = value.join(',');\n                }\n                accumulator.append(key, value);\n\n                return accumulator;\n            }, new URLSearchParams());\n        },\n\n        createScript() {\n            const id = 'paypal-js';\n            if (!document.getElementById(id)) {\n                const payPalScriptUrl = 'https://www.paypal.com/webapps/merchantboarding/js/lib/lightbox/partner.js';\n                const payPalScript = document.createElement('script');\n                payPalScript.id = id;\n                payPalScript.type = 'text/javascript';\n                payPalScript.src = payPalScriptUrl;\n                payPalScript.async = true;\n                payPalScript.addEventListener('load', this.renderPayPalButton.bind(this), false);\n\n                document.head.appendChild(payPalScript);\n            } else if (window.PAYPAL) {\n                this.renderPayPalButton();\n            }\n        },\n\n        renderPayPalButton() {\n            // The original render function inside the partner.js is overwritten here.\n            // The function gets overwritten again, as soon as PayPals signup.js is loaded.\n            // A loop is created and the render() function is executed until the real render() function is available.\n            // PayPal does originally nearly the same, but only once and not in a loop.\n            // If the signup.js is loaded to slow the button is not rendered.\n            window.PAYPAL.apps.Signup.render = function proxyPPrender() {\n                if (window.PAYPAL.apps.Signup.timeout) {\n                    clearTimeout(window.PAYPAL.apps.Signup.timeout);\n                }\n\n                window.PAYPAL.apps.Signup.timeout = setTimeout(window.PAYPAL.apps.Signup.render, 300);\n            };\n\n            window.PAYPAL.apps.Signup.render();\n        },\n\n        getPayPalCredentials({ authCode, sharedId, sandbox }) {\n            if (this.isLoading) {\n                return Promise.resolve(false);\n            }\n\n            this.isGetCredentialsSuccessful = null;\n            this.lastOnboardingSandbox = sandbox;\n\n            this.$emit('on-change-loading', true);\n\n            return this.SwagPayPalApiCredentialsService.getApiCredentials(\n                authCode,\n                sharedId,\n                sandbox ? this.nonceSandbox : this.nonceLive,\n                sandbox,\n            ).then((response) => {\n                this.isGetCredentialsSuccessful = true;\n                this.onPayPalCredentialsLoadSuccess(response.client_id, response.client_secret, response.payer_id, sandbox);\n            }).catch(() => {\n                this.isGetCredentialsSuccessful = false;\n                this.onPayPalCredentialsLoadFailed(sandbox);\n            }).finally(() => {\n                this.$emit('on-change-loading', false);\n            });\n        },\n\n        /**\n         *\n         * @param clientId string\n         * @param clientSecret string\n         * @param merchantPayerId string\n         * @param sandbox bool\n         */\n        onPayPalCredentialsLoadSuccess() {\n            // needs to be implemented by using component\n            debug.warn(\n                'swag-paypal-credentials-loader Mixin',\n                'When using the paypal-credentials-loader mixin ' +\n                'you have to implement your custom \"onPayPalCredentialsLoadSuccess()\" method.',\n            );\n        },\n\n        /**\n         *\n         * @param sandbox bool\n         */\n        onPayPalCredentialsLoadFailed() {\n            // needs to be implemented by using component\n            debug.warn(\n                'swag-paypal-credentials-loader Mixin',\n                'When using the paypal-credentials-loader mixin ' +\n                'you have to implement your custom \"onPayPalCredentialsLoadFailed()\" method.',\n            );\n        },\n    },\n});\n","module.exports = \"{% block sw_sales_channel_grid_columns_icon %}\\n    <sw-grid-column\\n            v-if=\\\"isPayPalPosSalesChannel(item.id)\\\"\\n            class=\\\"sw-sales-channel-modal-grid__icon-column\\\"\\n            flex=\\\"85px\\\"\\n            dataIndex=\\\"icon\\\">\\n        <span class=\\\"sw-sales-channel-modal-grid__icon\\\" @click=\\\"onOpenDetail(item.id)\\\">\\n             <img class=\\\"swag-paypal-pos-modal-grid__icon\\\"\\n                  :src=\\\"'swagpaypal/static/img/paypal-pos-logo.svg' | asset\\\">\\n        </span>\\n    </sw-grid-column>\\n\\n    <template v-else>\\n        {% parent %}\\n    </template>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-payment-actions.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"9592110a\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-wizard-connection.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"77dff2c2\", content, true, {});","module.exports = \"<svg width=\\\"39px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 39 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><title>Page 1</title><desc>Created with Sketch.</desc><defs></defs><g id=\\\"SPB_&amp;_AltPay_NewAssets\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" transform=\\\"translate(-100.000000, -159.000000)\\\"><g id=\\\"Page-1\\\" transform=\\\"translate(100.000000, 159.000000)\\\"><path d=\\\"M34.4245605,4.17798726 L32.618293,4.17798726 L24.2707261,4.17798726 L22.4644586,4.17798726 L21.2481019,5.54751592 L17.3009427,9.99133758 L17.3009427,9.99149045 L16.084586,11.3608662 L14.2781656,11.3608662 L6.08896815,11.3608662 L4.28254777,11.3608662 L5.48010191,9.97406369 L6.04692994,9.31765605 L7.24448408,7.9308535 L5.43806369,7.9308535 L3.11036943,7.9308535 L1.80642038,7.9308535 C0.812942675,7.9308535 0,8.76443312 0,9.78313376 L0,9.78328662 L0,13.3603567 L0,13.691465 C0,14.7103185 0.812942675,15.5438981 1.80642038,15.5438981 L2.31393631,15.5438981 L21.2669045,15.5438981 L22.6257325,15.5438981 C23.6192102,15.5438981 24.9763567,14.9247898 25.6416306,14.1681019 L28.790828,10.5861401 L34.4245605,4.17798726 Z\\\" id=\\\"Fill-1\\\" fill=\\\"#005596\\\"></path><path d=\\\"M36.827572,1.52866242e-05 C37.8210497,1.52866242e-05 38.6339924,0.833594904 38.6339924,1.85244841 L38.6339924,5.76062675 C38.6339924,6.77932739 37.8210497,7.61305987 36.827572,7.61305987 L35.8475465,7.61305987 L33.2136611,7.61305987 L31.4072408,7.61305987 L32.616107,6.23665223 L32.6162599,6.23665223 L33.2156484,5.55425732 L34.4245146,4.17800255 L22.4645656,4.17800255 L16.084693,11.366079 L4.20943185,11.366079 L12.7257631,1.7365758 L13.0480051,1.37214268 C13.715572,0.617442038 15.0745529,1.52866242e-05 16.0680306,1.52866242e-05 L16.4874955,1.52866242e-05 L36.827572,1.52866242e-05 Z\\\" id=\\\"Fill-3\\\" fill=\\\"#FFDD00\\\"></path><path d=\\\"M4.07102675,22.1877707 C4.07102675,21.9326369 4.01079745,21.7117452 3.89064459,21.5252484 C3.77033885,21.3387516 3.61212229,21.1964331 3.41584204,21.098293 C3.61212229,21.0001529 3.7642242,20.8552357 3.87230064,20.6638471 C3.9802242,20.4724586 4.03418599,20.2566115 4.03418599,20.0161529 L4.03418599,19.8836178 C4.03418599,19.5890446 3.97777834,19.3436943 3.86496306,19.147414 C3.7519949,18.9511338 3.59362548,18.7939873 3.39000764,18.6762803 C3.18638981,18.5584204 2.94210955,18.4738854 2.65762548,18.4222166 C2.37283567,18.3707006 2.05640255,18.3450191 1.70786752,18.3450191 C1.59016051,18.3450191 1.46740892,18.347465 1.33991847,18.3523567 C1.21212229,18.3572484 1.08830064,18.3633631 0.968147771,18.3707006 C0.847842038,18.3780382 0.737319745,18.3867516 0.636886624,18.396535 C0.536147771,18.4064713 0.453905732,18.4162548 0.39016051,18.4258854 C0.247842038,18.4506497 0.147256051,18.4946752 0.0884025478,18.5584204 C0.0295490446,18.6223185 4.58598726e-05,18.7377325 4.58598726e-05,18.9045096 L4.58598726e-05,23.3804331 C4.58598726e-05,23.5472102 0.0306191083,23.6626242 0.0920713376,23.7263694 C0.153370701,23.7902675 0.257625478,23.834293 0.404988535,23.8589045 C0.478517197,23.8735796 0.566873885,23.8858089 0.669905732,23.8957452 C0.77293758,23.9055287 0.884529936,23.9140892 1.00483567,23.9214268 C1.1251414,23.9287643 1.24896306,23.934879 1.37660637,23.9399236 C1.50424968,23.9446624 1.62929427,23.9472611 1.75204586,23.9472611 C2.07107771,23.9472611 2.37161274,23.9226497 2.65395669,23.8735796 C2.9359949,23.8246624 3.18134522,23.7373758 3.39000764,23.6121783 C3.59867006,23.4871338 3.7642242,23.317758 3.8869758,23.1043567 C4.00957452,22.8908025 4.07102675,22.6220637 4.07102675,22.2981401 L4.07102675,22.1877707 Z M2.81951083,20.0750064 C2.81951083,20.1535796 2.80728153,20.2284841 2.78267006,20.2995669 C2.7580586,20.3706497 2.71770191,20.431949 2.66129427,20.4836178 C2.60473376,20.5351338 2.52875924,20.5768662 2.43306497,20.6086624 C2.3373707,20.6406115 2.21584204,20.6565096 2.06863185,20.6565096 L1.2442242,20.6565096 L1.2442242,19.3829809 C1.2686828,19.3829809 1.3067465,19.381758 1.35826242,19.3793121 C1.40977834,19.3768662 1.46374013,19.3756433 1.52014777,19.3756433 L1.68218599,19.3756433 L1.80356178,19.3756433 C2.18144713,19.3756433 2.44529427,19.4234904 2.59495032,19.5191847 C2.74460637,19.614879 2.81951083,19.7633121 2.81951083,19.9644841 L2.81951083,20.0750064 Z M2.84901401,22.2687898 C2.84901401,22.4748535 2.77655541,22.6344459 2.63179108,22.7472611 C2.48702675,22.8602293 2.22562548,22.9166369 1.84774013,22.9166369 L1.72636433,22.9166369 C1.66980382,22.9166369 1.61095032,22.915414 1.54965096,22.9129682 C1.48819873,22.9105223 1.42934522,22.9091465 1.37293758,22.9091465 L1.2442242,22.9091465 L1.2442242,21.532586 L2.06863185,21.532586 C2.36305223,21.532586 2.56667006,21.597707 2.67963822,21.7276433 C2.7924535,21.8577325 2.84901401,22.0110573 2.84901401,22.1877707 L2.84901401,22.2687898 Z M8.10516688,21.1056306 C8.10516688,20.8358217 8.06465732,20.6062166 7.98363822,20.4172739 C7.90277197,20.2284841 7.78858089,20.0737834 7.6413707,19.9534777 C7.49416051,19.8333248 7.31377834,19.7449682 7.1002242,19.6885605 C6.88682293,19.6321529 6.64758726,19.6038726 6.3825172,19.6038726 C6.13701401,19.6038726 5.89777834,19.6211465 5.66481019,19.6553885 C5.43153631,19.6897834 5.24626242,19.7241783 5.10898854,19.7584204 C5.01574013,19.7830318 4.96911592,19.8369936 4.96911592,19.9203057 L4.96911592,20.5166369 C4.96911592,20.5658599 4.98134522,20.6002548 5.00595669,20.6196688 C5.03041529,20.6393885 5.06221146,20.649172 5.10165096,20.649172 L5.13833885,20.649172 C5.19734522,20.6442803 5.27087389,20.6381656 5.35923057,20.630828 C5.44758726,20.6234904 5.54695032,20.6173758 5.65747261,20.6123312 C5.76784204,20.6075924 5.88310318,20.6039236 6.00340892,20.6013248 C6.12356178,20.598879 6.24264459,20.5976561 6.36050446,20.5976561 C6.53217325,20.5976561 6.66715414,20.6296051 6.76529427,20.6933503 C6.86343439,20.7572484 6.91250446,20.8946752 6.91250446,21.1056306 L6.91250446,21.3707006 L6.51505223,21.3707006 C5.88188025,21.3707006 5.42175287,21.4700637 5.13467006,21.6687898 C4.84758726,21.8675159 4.70404586,22.182879 4.70404586,22.6147261 L4.70404586,22.6810701 C4.70404586,22.9215287 4.73966369,23.1227006 4.8107465,23.284586 C4.8818293,23.4466242 4.9764535,23.5767134 5.09416051,23.6748535 C5.21202038,23.7729936 5.34562548,23.8430064 5.49543439,23.884586 C5.64509045,23.9263185 5.80101401,23.9472611 5.96289936,23.9472611 C6.18379108,23.9472611 6.37395669,23.917758 6.53339618,23.8589045 C6.69283567,23.800051 6.84371465,23.7190318 6.98618599,23.616 L6.98618599,23.733707 C6.98618599,23.7729936 7.00086115,23.8073885 7.03036433,23.8367389 C7.05986752,23.866242 7.09410955,23.8809172 7.13339618,23.8809172 L7.95795669,23.8809172 C7.99709045,23.8809172 8.03148535,23.866242 8.06098854,23.8367389 C8.09049172,23.8073885 8.10516688,23.7729936 8.10516688,23.733707 L8.10516688,21.1056306 Z M6.93467006,22.8871338 C6.84631338,22.9313121 6.75168917,22.9693758 6.65125605,23.001172 C6.5505172,23.0332739 6.44381656,23.0490191 6.33100127,23.0490191 C6.17385478,23.0490191 6.0573707,23.0270064 5.98124331,22.982828 C5.90511592,22.9386497 5.8672051,22.8380637 5.8672051,22.6810701 L5.8672051,22.6147261 C5.8672051,22.5263694 5.87698854,22.447949 5.89670828,22.3791592 C5.91627516,22.3105223 5.95067006,22.2539618 5.99974013,22.2097834 C6.04865732,22.165758 6.11500127,22.132586 6.19846624,22.1104204 C6.28193121,22.0884076 6.38740892,22.0774013 6.51505223,22.0774013 L6.93467006,22.0774013 L6.93467006,22.8871338 Z M12.6104408,23.7263694 L12.6104408,21.2748535 C12.6104408,21.0443312 12.5920968,20.8271083 12.5552561,20.6234904 C12.5184153,20.4198726 12.4522242,20.2431592 12.3565299,20.0933503 C12.2608357,19.9436943 12.1283006,19.8246115 11.9589248,19.7364076 C11.7897019,19.648051 11.572479,19.6038726 11.3074089,19.6038726 C11.071842,19.6038726 10.8631796,19.6323057 10.6817274,19.689172 C10.5001223,19.7460382 10.3087338,19.8461656 10.1075618,19.9895541 L10.1075618,19.8111592 C10.1075618,19.7717197 10.0927338,19.7370191 10.0633834,19.7073631 C10.0338803,19.677707 9.99948535,19.6627261 9.96019873,19.6627261 L9.13579108,19.6627261 C9.09635159,19.6627261 9.06210955,19.6774013 9.03275924,19.7069045 C9.00325605,19.7364076 8.98858089,19.7708025 8.98858089,19.8099363 L8.98858089,23.7263694 C8.98858089,23.7656561 9.00432611,23.8012739 9.03642803,23.8330701 C9.0682242,23.8650191 9.10384204,23.8809172 9.14312866,23.8809172 L10.0338803,23.8809172 C10.0731669,23.8809172 10.1075618,23.8650191 10.1369121,23.8332229 C10.1664153,23.8014268 10.1810904,23.7659618 10.1810904,23.7266752 L10.1810904,20.8326115 C10.3087338,20.7641274 10.4288866,20.7078726 10.5418548,20.6638471 C10.6546701,20.6196688 10.7650395,20.5976561 10.8731159,20.5976561 C10.9859312,20.5976561 11.0779567,20.6086624 11.1491924,20.630828 C11.2202752,20.6528408 11.2754599,20.6907516 11.3147465,20.7447134 C11.3540331,20.7985223 11.3810904,20.8694522 11.3957656,20.9575032 C11.4104408,21.045707 11.4179312,21.1534777 11.4179312,21.2808153 L11.4179312,23.7266752 C11.4179312,23.7659618 11.4326064,23.8014268 11.4621096,23.8332229 C11.4914599,23.8650191 11.5257019,23.8809172 11.5651414,23.8809172 L12.455893,23.8809172 C12.4950268,23.8809172 12.5306446,23.8650191 12.5625936,23.8330701 C12.5945427,23.8012739 12.6104408,23.7656561 12.6104408,23.7263694 Z M16.2324535,23.6675159 L16.2324535,23.0123312 C16.2324535,22.9730446 16.2188484,22.9423185 16.1919439,22.9203057 C16.1648866,22.8981401 16.1317146,22.8871338 16.0925809,22.8871338 L16.0777529,22.8871338 C15.9403261,22.9018089 15.8091669,22.9141911 15.6839694,22.9239745 C15.558772,22.933758 15.3906191,22.9386497 15.1796637,22.9386497 C15.0961987,22.9386497 15.0177783,22.9251975 14.9440968,22.8981401 C14.8704153,22.8712357 14.8066701,22.8246115 14.7527083,22.7582675 C14.6985936,22.6920764 14.6557911,22.6037197 14.623842,22.4933503 C14.591893,22.382828 14.5759949,22.2466242 14.5759949,22.0847389 L14.5759949,21.4663949 C14.5759949,21.3043567 14.591893,21.1681529 14.623842,21.0577834 C14.6557911,20.9472611 14.6985936,20.8590573 14.7527083,20.7927134 C14.8066701,20.7265223 14.8704153,20.6798981 14.9440968,20.6528408 C15.0177783,20.6259363 15.0961987,20.6123312 15.1796637,20.6123312 C15.3906191,20.6123312 15.558772,20.6173758 15.6839694,20.6271592 C15.8091669,20.6369427 15.9403261,20.649172 16.0777529,20.6638471 L16.0925809,20.6638471 C16.1317146,20.6638471 16.1648866,20.6528408 16.1919439,20.630828 C16.2188484,20.6086624 16.2324535,20.5780892 16.2324535,20.5388025 L16.2324535,19.8836178 C16.2324535,19.8296561 16.2200713,19.7915924 16.1956127,19.7694268 C16.1710013,19.747414 16.1317146,19.7289172 16.0777529,19.714242 C15.974721,19.6897834 15.8409631,19.6653248 15.6766318,19.6405605 C15.5121478,19.6161019 15.3195363,19.6038726 15.0986446,19.6038726 C14.5784408,19.6038726 14.1624917,19.7633121 13.8509503,20.0823439 C13.5392561,20.4013758 13.3834854,20.8627261 13.3834854,21.4663949 L13.3834854,22.0847389 C13.3834854,22.6884076 13.5392561,23.149758 13.8509503,23.4686369 C14.1624917,23.7878217 14.5784408,23.9472611 15.0986446,23.9472611 C15.3195363,23.9472611 15.5121478,23.934879 15.6766318,23.9104204 C15.8409631,23.8858089 15.974721,23.8613503 16.0777529,23.8367389 C16.1317146,23.8220637 16.1710013,23.8037197 16.1956127,23.7815541 C16.2200713,23.7595414 16.2324535,23.7214777 16.2324535,23.6675159 Z M20.3182624,21.5179108 C20.3182624,21.2233376 20.2776,20.9584204 20.196428,20.7228535 C20.1152561,20.4872866 19.9972433,20.2873376 19.8423898,20.1228535 C19.6875363,19.9585223 19.4956892,19.830879 19.2671541,19.7400764 C19.0384662,19.6492739 18.7740076,19.6038726 18.4740841,19.6038726 C18.1741605,19.6038726 17.9098548,19.6492739 17.6811669,19.7400764 C17.452479,19.830879 17.2594089,19.9585223 17.1021096,20.1228535 C16.9446573,20.2873376 16.8254217,20.4872866 16.7444025,20.7228535 C16.6630777,20.9584204 16.6225682,21.2233376 16.6225682,21.5179108 L16.6225682,22.0332229 C16.6225682,22.3276433 16.6630777,22.5927134 16.7444025,22.8282803 C16.8254217,23.0638471 16.9446573,23.2637962 17.1021096,23.4282803 C17.2594089,23.5927643 17.452479,23.7202548 17.6811669,23.8110573 C17.9098548,23.901707 18.1741605,23.9472611 18.4740841,23.9472611 C18.7740076,23.9472611 19.0384662,23.901707 19.2671541,23.8110573 C19.4956892,23.7202548 19.6875363,23.5927643 19.8423898,23.4282803 C19.9972433,23.2637962 20.1152561,23.0638471 20.196428,22.8282803 C20.2776,22.5927134 20.3182624,22.3276433 20.3182624,22.0332229 L20.3182624,21.5179108 Z M19.1256,22.0332229 C19.1256,22.6368917 18.9083771,22.9386497 18.4740841,22.9386497 C18.259307,22.9386497 18.095893,22.8626752 17.9836892,22.7104204 C17.8713325,22.5583185 17.8152306,22.332535 17.8152306,22.0332229 L17.8152306,21.5179108 C17.8152306,21.2185987 17.8713325,20.9940382 17.9836892,20.8442293 C18.095893,20.6945732 18.259307,20.6196688 18.4740841,20.6196688 C18.9083771,20.6196688 19.1256,20.9191338 19.1256,21.5179108 L19.1256,22.0332229 Z M24.6983389,23.7263694 L24.6983389,21.2748535 C24.6983389,21.0443312 24.679842,20.8271083 24.6431541,20.6234904 C24.6063134,20.4198726 24.5399694,20.2431592 24.4442752,20.0933503 C24.3485809,19.9436943 24.2160459,19.8246115 24.0468229,19.7364076 C23.8774471,19.648051 23.6603771,19.6038726 23.395307,19.6038726 C23.1597401,19.6038726 22.9510777,19.6323057 22.7694726,19.689172 C22.5878675,19.7460382 22.396479,19.8461656 22.195307,19.9895541 L22.195307,19.8111592 C22.195307,19.7717197 22.1806318,19.7370191 22.1511287,19.7073631 C22.1217783,19.677707 22.0873834,19.6627261 22.0480968,19.6627261 L21.2235363,19.6627261 C21.1842497,19.6627261 21.1500076,19.6774013 21.1205045,19.7069045 C21.0911541,19.7364076 21.0763261,19.7708025 21.0763261,19.8099363 L21.0763261,23.7263694 C21.0763261,23.7656561 21.0922242,23.8012739 21.1241732,23.8330701 C21.1561223,23.8650191 21.1915873,23.8809172 21.2310268,23.8809172 L22.1217783,23.8809172 C22.1609121,23.8809172 22.195307,23.8650191 22.2248102,23.8332229 C22.2541605,23.8014268 22.2689885,23.7659618 22.2689885,23.7266752 L22.2689885,20.8326115 C22.396479,20.7641274 22.5167847,20.7078726 22.6296,20.6638471 C22.7425682,20.6196688 22.8529376,20.5976561 22.961014,20.5976561 C23.0738293,20.5976561 23.1658548,20.6086624 23.2369376,20.630828 C23.3080204,20.6528408 23.363358,20.6907516 23.4026446,20.7447134 C23.4419312,20.7985223 23.4688357,20.8694522 23.4836637,20.9575032 C23.4983389,21.045707 23.5056764,21.1534777 23.5056764,21.2808153 L23.5056764,23.7266752 C23.5056764,23.7659618 23.5205045,23.8014268 23.5498548,23.8332229 C23.579358,23.8650191 23.6136,23.8809172 23.6528866,23.8809172 L24.5436382,23.8809172 C24.5829248,23.8809172 24.6185427,23.8650191 24.6504917,23.8330701 C24.6822879,23.8012739 24.6983389,23.7656561 24.6983389,23.7263694 Z M27.9080713,23.742879 L27.9080713,23.1731465 C27.9080713,23.0904459 27.8565554,23.0490191 27.7535236,23.0490191 L27.3927592,23.0490191 C27.2797911,23.0490191 27.2111541,23.0282293 27.1866955,22.9864968 C27.1620841,22.9449172 27.1498548,22.850293 27.1498548,22.7030828 L27.1498548,20.5608153 L27.7535236,20.5608153 C27.7926573,20.5608153 27.8270522,20.5459873 27.8565554,20.5163312 C27.8860586,20.4866752 27.9007338,20.4519745 27.9007338,20.4123822 L27.9007338,19.8111592 C27.9007338,19.7717197 27.8860586,19.7368662 27.8565554,19.7072102 C27.8270522,19.6775541 27.7926573,19.6627261 27.7535236,19.6627261 L27.1498548,19.6627261 L27.1498548,18.8823439 C27.1498548,18.8432102 27.1376255,18.8124841 27.1133197,18.7903185 C27.0888611,18.7683057 27.057065,18.7572994 27.0180841,18.7572994 L26.9962242,18.7572994 L26.1036382,18.9118471 C26.0645045,18.9217834 26.0302624,18.9389045 26.001065,18.9633631 C25.9718675,18.9879745 25.9571924,19.0197707 25.9571924,19.0590573 L25.9571924,19.6627261 L25.3683516,19.6627261 C25.3289121,19.6627261 25.2934471,19.6787771 25.2614981,19.7105732 C25.229549,19.7425223 25.213651,19.7781401 25.213651,19.8172739 L25.213651,20.3032357 C25.213651,20.3425223 25.229549,20.3756943 25.2614981,20.4025987 C25.2934471,20.4296561 25.3289121,20.448 25.3683516,20.4577834 L25.9571924,20.5534777 L25.9571924,22.6884076 C25.9571924,22.948586 25.9840968,23.1607643 26.0376,23.3250955 C26.0912561,23.4895796 26.1693707,23.6184459 26.2717911,23.7116943 C26.3742115,23.8049427 26.5023134,23.867465 26.6559439,23.899414 C26.8095745,23.9312102 26.9864408,23.9472611 27.1866955,23.9472611 C27.2944662,23.9472611 27.3903134,23.9422166 27.4737783,23.932586 C27.5570904,23.9228025 27.6552306,23.9082803 27.7681987,23.8887134 C27.8614471,23.8743439 27.9080713,23.8255796 27.9080713,23.742879 Z M31.8391796,21.1056306 C31.8391796,20.8358217 31.7986701,20.6062166 31.717651,20.4172739 C31.6366318,20.2284841 31.5225936,20.0737834 31.3753834,19.9534777 C31.2281732,19.8333248 31.0477911,19.7449682 30.8342369,19.6885605 C30.6208357,19.6321529 30.3816,19.6038726 30.1165299,19.6038726 C29.8710268,19.6038726 29.6317911,19.6211465 29.3988229,19.6553885 C29.165549,19.6897834 28.9802752,19.7241783 28.8430013,19.7584204 C28.7496,19.7830318 28.7031287,19.8369936 28.7031287,19.9203057 L28.7031287,20.5166369 C28.7031287,20.5658599 28.7152051,20.6002548 28.7398166,20.6196688 C28.764428,20.6393885 28.7962242,20.649172 28.8355108,20.649172 L28.8723516,20.649172 C28.931358,20.6442803 29.0048866,20.6381656 29.0932433,20.630828 C29.1816,20.6234904 29.2809631,20.6173758 29.3913325,20.6123312 C29.5018548,20.6075924 29.6171159,20.6039236 29.7374217,20.6013248 C29.8575745,20.598879 29.9766573,20.5976561 30.0943643,20.5976561 C30.266186,20.5976561 30.4011669,20.6296051 30.499307,20.6933503 C30.5974471,20.7572484 30.6465172,20.8946752 30.6465172,21.1056306 L30.6465172,21.3707006 L30.249065,21.3707006 C29.615893,21.3707006 29.1557656,21.4700637 28.8686828,21.6687898 C28.5816,21.8675159 28.4380586,22.182879 28.4380586,22.6147261 L28.4380586,22.6810701 C28.4380586,22.9215287 28.4735236,23.1227006 28.5447592,23.284586 C28.615842,23.4466242 28.7104662,23.5767134 28.8281732,23.6748535 C28.9460331,23.7729936 29.0796382,23.8430064 29.2294471,23.884586 C29.3791032,23.9263185 29.5348739,23.9472611 29.6969121,23.9472611 C29.9178038,23.9472611 30.1078166,23.917758 30.2674089,23.8589045 C30.4268484,23.800051 30.5777274,23.7190318 30.7201987,23.616 L30.7201987,23.733707 C30.7201987,23.7729936 30.7348739,23.8073885 30.7643771,23.8367389 C30.7937274,23.866242 30.8281223,23.8809172 30.8674089,23.8809172 L31.6919694,23.8809172 C31.7311032,23.8809172 31.7654981,23.866242 31.7950013,23.8367389 C31.8243516,23.8073885 31.8391796,23.7729936 31.8391796,23.733707 L31.8391796,21.1056306 Z M30.6686828,22.8871338 C30.5803261,22.9313121 30.4857019,22.9693758 30.3852688,23.001172 C30.2845299,23.0332739 30.1778293,23.0490191 30.065014,23.0490191 C29.9078675,23.0490191 29.7913834,23.0270064 29.7152561,22.982828 C29.6391287,22.9386497 29.6012178,22.8380637 29.6012178,22.6810701 L29.6012178,22.6147261 C29.6012178,22.5263694 29.6110013,22.447949 29.630721,22.3791592 C29.650135,22.3105223 29.6845299,22.2539618 29.7337529,22.2097834 C29.7826701,22.165758 29.849014,22.132586 29.932479,22.1104204 C30.0159439,22.0884076 30.1214217,22.0774013 30.249065,22.0774013 L30.6686828,22.0774013 L30.6686828,22.8871338 Z M35.4610395,23.6675159 L35.4610395,23.0123312 C35.4610395,22.9730446 35.4474344,22.9423185 35.4205299,22.9203057 C35.3934726,22.8981401 35.3604535,22.8871338 35.3211669,22.8871338 L35.3064917,22.8871338 C35.169065,22.9018089 35.0377529,22.9141911 34.9125554,22.9239745 C34.7875108,22.933758 34.619358,22.9386497 34.4084025,22.9386497 C34.3247847,22.9386497 34.2463643,22.9251975 34.1728357,22.8981401 C34.0991541,22.8712357 34.0352561,22.8246115 33.9812943,22.7582675 C33.9273325,22.6920764 33.8843771,22.6037197 33.8525809,22.4933503 C33.820479,22.382828 33.8047338,22.2466242 33.8047338,22.0847389 L33.8047338,21.4663949 C33.8047338,21.3043567 33.820479,21.1681529 33.8525809,21.0577834 C33.8843771,20.9472611 33.9273325,20.8590573 33.9812943,20.7927134 C34.0352561,20.7265223 34.0991541,20.6798981 34.1728357,20.6528408 C34.2463643,20.6259363 34.3247847,20.6123312 34.4084025,20.6123312 C34.619358,20.6123312 34.7875108,20.6173758 34.9125554,20.6271592 C35.0377529,20.6369427 35.169065,20.649172 35.3064917,20.6638471 L35.3211669,20.6638471 C35.3604535,20.6638471 35.3934726,20.6528408 35.4205299,20.630828 C35.4474344,20.6086624 35.4610395,20.5780892 35.4610395,20.5388025 L35.4610395,19.8836178 C35.4610395,19.8296561 35.4488102,19.7915924 35.4241987,19.7694268 C35.3995873,19.747414 35.3604535,19.7289172 35.3064917,19.714242 C35.2034599,19.6897834 35.069549,19.6653248 34.9052178,19.6405605 C34.7407338,19.6161019 34.5482752,19.6038726 34.3273834,19.6038726 C33.8070268,19.6038726 33.3912306,19.7633121 33.0795363,20.0823439 C32.767842,20.4013758 32.6120713,20.8627261 32.6120713,21.4663949 L32.6120713,22.0847389 C32.6120713,22.6884076 32.767842,23.149758 33.0795363,23.4686369 C33.3912306,23.7878217 33.8070268,23.9472611 34.3273834,23.9472611 C34.5482752,23.9472611 34.7407338,23.934879 34.9052178,23.9104204 C35.069549,23.8858089 35.2034599,23.8613503 35.3064917,23.8367389 C35.3604535,23.8220637 35.3995873,23.8037197 35.4241987,23.7815541 C35.4488102,23.7595414 35.4610395,23.7214777 35.4610395,23.6675159 Z M38.6339312,23.742879 L38.6339312,23.1731465 C38.6339312,23.0904459 38.5824153,23.0490191 38.4793834,23.0490191 L38.1186191,23.0490191 C38.005651,23.0490191 37.937014,23.0282293 37.9125554,22.9864968 C37.8879439,22.9449172 37.8757146,22.850293 37.8757146,22.7030828 L37.8757146,20.5608153 L38.4793834,20.5608153 C38.5185172,20.5608153 38.5529121,20.5459873 38.5824153,20.5163312 C38.6117656,20.4866752 38.6265936,20.4519745 38.6265936,20.4123822 L38.6265936,19.8111592 C38.6265936,19.7717197 38.6117656,19.7368662 38.5824153,19.7072102 C38.5529121,19.6775541 38.5185172,19.6627261 38.4793834,19.6627261 L37.8757146,19.6627261 L37.8757146,18.8823439 C37.8757146,18.8432102 37.8634854,18.8124841 37.8390268,18.7903185 C37.814721,18.7683057 37.7829248,18.7572994 37.7439439,18.7572994 L37.7219312,18.7572994 L36.8293452,18.9118471 C36.7902115,18.9217834 36.7561223,18.9389045 36.7269248,18.9633631 C36.6977274,18.9879745 36.6830522,19.0197707 36.6830522,19.0590573 L36.6830522,19.6627261 L36.0942115,19.6627261 C36.054772,19.6627261 36.019307,19.6787771 35.987358,19.7105732 C35.9554089,19.7425223 35.9395108,19.7781401 35.9395108,19.8172739 L35.9395108,20.3032357 C35.9395108,20.3425223 35.9554089,20.3756943 35.987358,20.4025987 C36.019307,20.4296561 36.054772,20.448 36.0942115,20.4577834 L36.6830522,20.5534777 L36.6830522,22.6884076 C36.6830522,22.948586 36.7099567,23.1607643 36.7634599,23.3250955 C36.8171159,23.4895796 36.8952306,23.6184459 36.997651,23.7116943 C37.1000713,23.8049427 37.2280204,23.867465 37.3818038,23.899414 C37.5354344,23.9312102 37.7123006,23.9472611 37.9125554,23.9472611 C38.0203261,23.9472611 38.1160204,23.9422166 38.1996382,23.932586 C38.2829503,23.9228025 38.3810904,23.9082803 38.4940586,23.8887134 C38.5871541,23.8743439 38.6339312,23.8255796 38.6339312,23.742879 Z\\\" id=\\\"Fill-5\\\" fill=\\\"#005596\\\"></path></g></g></svg>\"","module.exports = \"<svg width=\\\"61px\\\" height=\\\"21px\\\" viewBox=\\\"0 0 61 21\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><title>logo P24</title><desc>Created with Sketch.</desc><defs><polygon id=\\\"path-1\\\" points=\\\"0.0298111346 0.0177431925 7.39245963 0.0177431925 7.39245963 9.07005775 0.0298111346 9.07005775\\\"></polygon></defs><g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><g id=\\\"SPB_&amp;_AltPay_NewAssets\\\" transform=\\\"translate(-99.000000, -159.000000)\\\"><g id=\\\"logo-P24\\\" transform=\\\"translate(99.000000, 159.000000)\\\"><polygon id=\\\"Fill-1\\\" fill=\\\"#D03238\\\" points=\\\"12.7765868 12.1072822 17.8130945 12.1002493 17.6289678 13.2702352 13.4176179 17.375423 16.9512079 17.368193 16.7459003 18.631808 11.541715 18.6327282 11.7592227 17.3296108 15.7961995 13.3826296 12.5756892 13.3824324\\\"></polygon><path d=\\\"M6.21202433,11.7030305 C6.21070454,11.7180164 6.0904428,12.4456878 5.92791562,13.3063263 C5.8656924,13.6356878 5.61931034,13.8124953 5.33504069,13.8738192 C4.86574306,13.975007 4.36068237,13.956439 4.36068237,13.956439 L2.13880164,13.9506549 L2.62664069,10.9444014 L4.6399304,10.9501197 C4.6399304,10.9501197 4.77619055,10.9472277 4.9664333,10.9502183 C5.18265335,10.953669 5.46866127,10.9647113 5.70368026,10.9963263 C5.90496417,11.0233732 6.0689077,11.0655376 6.11960691,11.130838 C6.18646549,11.2170399 6.21408449,11.3270681 6.22338739,11.4276315 C6.23658528,11.5705892 6.21273251,11.6943545 6.21202433,11.7030305 M7.27065599,10.1062418 C7.16027657,9.98727465 7.00454148,9.89551878 6.82855889,9.82473005 C6.64607393,9.75134507 6.44182855,9.70050469 6.24379583,9.66534038 C5.9915552,9.62051408 5.74942222,9.60112441 5.57530665,9.59280986 C5.41512934,9.58515258 5.3125077,9.58692723 5.3125077,9.58692723 L3.11087446,9.58659859 L1.47253356,9.58636854 L3.21899736e-06,18.6323404 L1.37100639,18.6337864 L1.91292459,15.2806549 L4.57110823,15.2923873 C4.57110823,15.2923873 5.60608026,15.3338944 6.34091298,14.9370305 C7.07568132,14.5398052 7.27020533,13.6368052 7.27020533,13.6368052 C7.27020533,13.6368052 7.35103435,13.3017911 7.4170238,12.8927019 C7.48954781,12.4434859 7.56381008,11.9040915 7.60237367,11.6168615 C7.61930559,11.4908286 7.62934887,11.4133357 7.62934887,11.4133357 C7.62934887,11.4133357 7.64718211,11.3201995 7.64885599,11.1758286 C7.65120586,10.9737817 7.62191298,10.6714014 7.46788396,10.3833169 C7.41692723,10.2880117 7.35232195,10.194284 7.27065599,10.1062418\\\" id=\\\"Fill-2\\\" fill=\\\"#D03238\\\"></path><polygon id=\\\"Fill-4\\\" fill=\\\"#D03238\\\" points=\\\"24.6387659 9.58491596 25.957396 9.58383146 24.4799084 18.6343385 23.1579306 18.6321695\\\"></polygon><polygon id=\\\"Fill-6\\\" fill=\\\"#D03238\\\" points=\\\"31.6836961 12.1058427 32.9486012 12.1047582 33.3952692 16.6967911 35.34096 12.0964765 36.9020128 12.1007817 37.3633595 16.7157207 39.3092434 12.1051197 40.6214998 12.1038709 37.8326249 18.6287582 36.274598 18.6289225 35.8258054 14.059993 33.8571632 18.6290211 32.3255964 18.6334249\\\"></polygon><path d=\\\"M21.9154587,14.5398183 L18.970044,14.5365648 L19.0872155,14.0592502 C19.0872155,14.0592502 19.1895152,13.6860484 19.3937606,13.526593 C19.5981991,13.3673019 19.8593242,13.3402221 20.1052878,13.3159028 C20.3514123,13.2914521 21.0026798,13.2446211 21.5343294,13.3564568 C21.7108593,13.3934615 21.8786978,13.4948136 21.9223474,13.6449028 C22.0255163,13.9991751 21.9154587,14.5398183 21.9154587,14.5398183 M22.2018529,12.1608371 C21.8322477,12.0378277 21.1903152,12.0134756 20.6485901,12.0203441 C20.1234751,12.0270155 19.8826619,12.0520906 19.6867215,12.095208 C19.6867215,12.095208 18.7525685,12.2319216 18.2224962,12.9024427 C17.6924239,13.572931 17.5342746,15.0402033 17.5342746,15.0402033 C17.5342746,15.0402033 17.2195854,16.6616399 17.3116487,17.2018887 C17.4035189,17.7421376 17.5685569,18.242884 18.1682561,18.4779592 C18.7680841,18.7129685 19.2767822,18.7025178 19.2767822,18.7025178 C19.2767822,18.7025178 20.3455859,18.7882268 21.1509147,18.5937385 C21.9562756,18.3996775 22.3808614,17.8207808 22.3808614,17.8207808 C22.3808614,17.8207808 22.5697199,17.57187 22.7059801,17.274485 C22.842369,16.9771329 22.8823168,16.7707479 22.8883041,16.7453113 L22.9727706,16.3950155 L21.6036023,16.396823 C21.6036023,16.396823 21.528149,17.3193113 20.7899363,17.4044615 C20.0519168,17.4894146 19.655787,17.4573066 19.5130244,17.4518183 C19.3723542,17.4465601 18.5793864,17.4799169 18.6436698,16.8049263 C18.6439917,16.795823 18.6445711,16.7824803 18.6454725,16.7635178 C18.6822334,15.9936493 18.7659917,15.7941329 18.7659917,15.7941329 L23.0639326,15.7817761 L23.2473189,14.6980249 C23.4560065,13.4650718 23.3028144,12.5274005 22.2018529,12.1608371\\\" id=\\\"Fill-8\\\" fill=\\\"#D03238\\\"></path><path d=\\\"M18.6561379,16.7743578 C18.651567,16.7982611 18.6478667,16.8217106 18.6446018,16.8449331 C18.6380719,16.9631638 18.6576615,16.7678525 18.6561379,16.7743578\\\" id=\\\"Fill-10\\\" fill=\\\"#D03238\\\"></path><path d=\\\"M26.7636688,16.7758934 C26.7590979,16.7997986 26.7553976,16.8233256 26.7521327,16.84655 C26.7456028,16.9646386 26.7651925,16.7692363 26.7636688,16.7758934\\\" id=\\\"Fill-12\\\" fill=\\\"#D03238\\\"></path><path d=\\\"M30.0115107,14.5380108 L27.0662891,14.5349545 L27.1834284,14.0574427 C27.1834284,14.0574427 27.2857281,13.6841423 27.4899735,13.5249498 C27.6942511,13.3656587 27.9553761,13.3384146 28.2015007,13.3140624 C28.4476252,13.2899075 29.0987318,13.2428136 29.6305746,13.3548465 C29.8069112,13.3917197 29.974782,13.493039 30.0185603,13.6432925 C30.1217614,13.9975648 30.0115107,14.5380108 30.0115107,14.5380108 M30.3095899,12.162316 C29.9397593,12.0392737 29.2978912,12.0149216 28.7561339,12.0218559 C28.2310189,12.0284615 27.9901735,12.0535366 27.7942331,12.096654 C27.7942331,12.096654 26.8600801,12.2335648 26.3300078,12.9038887 C25.7999355,13.5745742 25.6418184,15.0416493 25.6418184,15.0416493 C25.6418184,15.0416493 25.3271614,16.6632502 25.4191925,17.2034991 C25.5112558,17.7437808 25.6761007,18.2442315 26.2759608,18.4795695 C26.8756601,18.7146117 27.384326,18.704161 27.384326,18.704161 C27.384326,18.704161 28.4532907,18.7896399 29.2584585,18.5953817 C30.0637872,18.4010906 30.488373,17.8222268 30.488373,17.8222268 C30.488373,17.8222268 30.6772637,17.5732831 30.8134917,17.2759967 C30.9499128,16.9787432 30.9898284,16.7721939 30.9960089,16.7467573 L31.0804754,16.3964615 L29.7111461,16.398269 C29.7111461,16.398269 29.6356928,17.3208559 28.8974801,17.4058089 C28.1594606,17.4908606 27.7633308,17.4589498 27.6207292,17.4535272 C27.4800912,17.4482033 26.6869624,17.4814286 26.7511814,16.8064709 C26.7515355,16.7973347 26.7521149,16.783992 26.7530163,16.7649638 C26.789745,15.9950953 26.8735033,15.7955789 26.8735033,15.7955789 L31.1714764,15.7833207 L31.3548627,14.6996352 C31.5637112,13.4666822 31.4103582,12.5290108 30.3095899,12.162316\\\" id=\\\"Fill-14\\\" fill=\\\"#D03238\\\"></path><path d=\\\"M42.1422604,12.1064737 L42.9880842,16.8768258 L45.3813121,12.1015113 L46.7273359,12.1132437 L43.2792425,18.9339714 C43.2792425,18.9339714 42.6553686,20.1681732 42.268252,20.4813329 C41.8812963,20.7948211 41.6448609,20.9349854 41.3282404,20.9669291 C41.0118129,20.9990371 40.8847591,21.0215817 40.5810467,20.9669291 L40.260177,20.9093845 L40.4608815,19.691516 C40.4608815,19.691516 40.9939475,19.7938869 41.3114694,19.6659808 C41.6289591,19.5378117 41.8857063,18.9857319 41.8857063,18.9857319 L42.0457871,18.709577 L40.7996166,12.1046005 L42.1422604,12.1064737 Z\\\" id=\\\"Fill-16\\\" fill=\\\"#D03238\\\"></path><path d=\\\"M47.2130407,12.7548808 L48.6007827,12.7568526 L48.6834465,12.2072047 C48.6834465,12.2072047 48.8318745,11.2156366 49.1624334,11.0240732 C49.2683062,10.9627164 49.4381083,10.9042845 49.6345637,10.8694488 C49.9971194,10.8052657 50.4598824,10.7977728 50.834284,10.8115756 C51.4118687,10.8328385 51.6277991,10.8380638 52.214912,10.9061906 C52.8022502,10.9744488 52.6524059,11.5531484 52.6524059,11.5531484 L52.5375521,12.4161202 C52.5375521,12.4161202 52.4873679,12.8026977 52.3518803,13.0442141 C52.2320692,13.2577962 51.9051801,13.4014113 51.7159674,13.4645427 C51.2588698,13.6167681 49.6946302,14.0226695 49.6946302,14.0226695 L48.4638144,14.3849606 C48.4638144,14.3849606 47.7084766,14.6085333 47.284245,15.0865709 C46.8602064,15.5647728 46.693398,16.108538 46.635456,16.3924817 C46.5774819,16.6762282 46.2525563,18.6309042 46.2525563,18.6309042 L52.8900645,18.6337962 L53.111274,17.2790826 L47.8615078,17.2852282 L47.9560175,16.7332469 C47.9560175,16.7332469 48.0169853,16.1641108 48.2426049,15.9784958 C48.3138091,15.9197023 48.3493468,15.8419465 48.7684281,15.6894254 C49.0184476,15.5983268 49.8748618,15.3654535 49.8748618,15.3654535 L51.8557363,14.8138338 C51.8557363,14.8138338 52.9363537,14.5297258 53.3620017,13.9279559 C53.7876175,13.3263502 53.9514323,12.1729606 53.9514323,12.1729606 C53.9514323,12.1729606 54.065932,11.0532892 53.9786328,10.7022376 C53.8915268,10.3512188 53.5662471,9.92964131 53.1716946,9.74997465 C52.7769811,9.57030798 52.3633399,9.46514366 51.1680618,9.4818385 C49.9729125,9.49869765 49.3827737,9.55568357 48.7777954,9.78280563 C48.172817,10.0097305 47.8233304,10.4240779 47.6007046,11.0080028 C47.3550951,11.5594582 47.2130407,12.7548808 47.2130407,12.7548808\\\" id=\\\"Fill-18\\\" fill=\\\"#B3B1B1\\\"></path><g id=\\\"Group-22\\\" transform=\\\"translate(53.596306, 9.563380)\\\"><mask id=\\\"mask-2\\\" fill=\\\"white\\\"><use xlink:href=\\\"#path-1\\\"></use></mask><g id=\\\"Clip-21\\\"></g><path d=\\\"M4.74087815,5.71061643 L1.83911298,5.70611408 L5.37112565,1.86475728 L4.74087815,5.71061643 Z M6.11217103,5.70953192 L7.0417209,0.0187619718 L5.39481747,0.0177431925 L0.262898734,5.64449437 L0.0298111346,7.0693723 L4.51789821,7.06884648 L4.18946391,9.06825023 L5.56619689,9.07005775 L5.89131562,7.0690108 L7.1627552,7.07170563 L7.39246285,5.70772441 L6.11217103,5.70953192 Z\\\" id=\\\"Fill-20\\\" fill=\\\"#B3B1B1\\\" mask=\\\"url(#mask-2)\\\"></path></g><path d=\\\"M10.1801468,10.3279446 L14.4058534,10.3279446 C14.4058534,10.3279446 15.3537515,9.5459493 16.0255241,9.04447981 C16.6972966,8.54291174 17.9201615,7.75092582 17.9201615,7.75092582 L15.533275,6.61071455 C15.533275,6.61071455 13.5162191,7.88619343 12.6598048,8.48799624 C11.8270502,9.04250798 10.1801468,10.3279446 10.1801468,10.3279446\\\" id=\\\"Fill-23\\\" fill=\\\"#B3B1B1\\\"></path><path d=\\\"M19.2644213,6.94459155 L17.304245,5.5972723 C17.304245,5.5972723 19.0783632,4.56853521 21.4362788,3.60848357 C23.7941944,2.64830047 25.0516957,2.24893897 25.0516957,2.24893897 L25.4497569,4.15740845 C25.4497569,4.15740845 23.1796556,4.93237089 21.8786978,5.55993897 C20.5351527,6.14494836 19.2644213,6.94459155 19.2644213,6.94459155\\\" id=\\\"Fill-25\\\" fill=\\\"#B3B1B1\\\"></path><path d=\\\"M26.8996706,3.73855211 L26.5597444,1.78282441 C26.5597444,1.78282441 28.9793038,1.12600751 31.1963882,0.704791549 C33.4132795,0.283575587 36.3541233,0.0845521127 36.3541233,0.0845521127 L35.3810848,3.10559437 C35.3810848,3.10559437 32.794717,2.74517653 30.3682368,3.08160376 C28.476432,3.31158498 26.8996706,3.73855211 26.8996706,3.73855211\\\" id=\\\"Fill-27\\\" fill=\\\"#B3B1B1\\\"></path><path d=\\\"M36.9163341,3.36064413 L38.5531621,0.00399624413 C38.5531621,0.00399624413 42.1364212,-0.0670882629 45.2260148,0.419789671 C48.3157694,0.906831925 51.1418882,1.65708075 51.0804053,1.68991174 L43.2442713,5.87400563 C43.2442713,5.87400563 41.4141103,4.69028263 39.1401462,3.96402441 C37.8524185,3.58053615 36.9163341,3.36064413 36.9163341,3.36064413\\\" id=\\\"Fill-29\\\" fill=\\\"#B3B1B1\\\"></path><path d=\\\"M44.6489516,6.78693709 L46.3720165,8.1199277 L60.5253041,8.1199277 C60.5253041,8.1199277 60.4964941,7.65207793 60.1194529,6.98950986 C59.8834039,6.57424225 59.4563395,6.1353784 59.008255,5.67916244 C58.8455347,5.51339718 58.1924967,4.99404977 57.7055268,4.67162254 C56.4558155,3.84480094 55.7580656,3.52506854 54.462226,2.92211549 L44.6489516,6.78693709 Z\\\" id=\\\"Fill-31\\\" fill=\\\"#B3B1B1\\\"></path><path d=\\\"M11.0960899,12.100246 C10.5648266,12.100246 10.0630493,12.3141897 9.63424665,12.5539315 L9.70944243,12.100246 L8.30161393,12.100246 L7.17428887,18.5982507 L8.58314744,18.5982507 L9.2077295,14.9983117 C9.33784137,14.2677812 9.87029573,13.36603 10.9151823,13.36603 L11.6435448,13.3630723 L11.8625976,12.100246 L11.0960899,12.100246 Z\\\" id=\\\"Fill-33\\\" fill=\\\"#D03238\\\"></path></g></g></g></svg>\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-order-detail.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0ff9d06a\", content, true, {});","module.exports = \"{% block swag_paypal_disputes_detail %}\\n    <sw-page class=\\\"swag-paypal-disputes-detail\\\">\\n\\n        {% block swag_paypal_disputes_detail_smart_bar_header %}\\n            <template #smart-bar-header>\\n\\n                {% block swag_paypal_disputes_detail_smart_bar_header_title %}\\n                    <h2>\\n\\n                        {% block swag_paypal_disputes_detail_smart_bar_header_title %}\\n                            {{ $tc('swag-paypal-disputes.detail.title') }}\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_disputes_detail_smart_bar_header_dispute_id %}\\n                            {{ disputeId }}\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_disputes_detail_smart_bar_header_title_addition %}\\n                            {{ $tc('swag-paypal-disputes.detail.titleAddition') }}\\n                        {% endblock %}\\n\\n                    </h2>\\n                {% endblock %}\\n\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_paypal_disputes_detail_content %}\\n            <template #content>\\n                <sw-card-view>\\n\\n                    {% block swag_paypal_disputes_detail_content_details %}\\n                        <sw-card :isLoading=\\\"isLoading\\\"\\n                                 :title=\\\"$tc('swag-paypal-disputes.detail.mainFieldsCardTitle')\\\">\\n\\n                            {% block swag_paypal_disputes_detail_content_details_fields %}\\n                                <template v-if=\\\"dispute\\\">\\n\\n                                    {% block swag_paypal_disputes_detail_content_details_fields_external_link %}\\n                                        <div class=\\\"swag-paypal-disputes-detail__links\\\">\\n                                            <sw-external-link :href=\\\"getExternalDetailPageLink()\\\">\\n                                                {{ $tc('swag-paypal-disputes.detail.externalLinkText') }}\\n                                            </sw-external-link>\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {% block swag_paypal_disputes_detail_content_details_fields_order_module_link %}\\n                                        <div class=\\\"swag-paypal-disputes-detail__links\\\">\\n                                            <router-link v-if=\\\"orderModuleLink\\\"\\n                                                         :to=\\\"orderModuleLink\\\"\\n                                                         target=\\\"_blank\\\"\\n                                                         rel=\\\"noopener\\\">\\n                                                {{ $tc('swag-paypal-disputes.detail.orderModuleLinkText') }}\\n                                                <sw-icon name=\\\"default-action-external\\\" size=\\\"12px\\\"></sw-icon>\\n                                            </router-link>\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {% block swag_paypal_disputes_detail_content_details_fields_separator %}\\n                                        <hr class=\\\"swag-paypal-disputes-detail__separator\\\"/>\\n                                    {% endblock %}\\n\\n                                    {% block swag_paypal_disputes_detail_content_details_fields_id %}\\n                                        <sw-text-field :value=\\\"dispute.dispute_id\\\"\\n                                                       :label=\\\"$tc('swag-paypal-disputes.common.dispute_id')\\\"\\n                                                       disabled>\\n                                        </sw-text-field>\\n                                    {% endblock %}\\n\\n                                    {% block swag_paypal_disputes_detail_content_details_fields_update_time %}\\n                                        <sw-text-field :value=\\\"formatDate(dispute.update_time)\\\"\\n                                                       :label=\\\"$tc('swag-paypal-disputes.common.update_time')\\\"\\n                                                       disabled>\\n                                        </sw-text-field>\\n                                    {% endblock %}\\n\\n                                    {% block swag_paypal_disputes_detail_content_details_fields_due_date %}\\n                                        <sw-text-field v-if=\\\"dispute.seller_response_due_date || dispute.buyer_response_due_date\\\"\\n                                                       :value=\\\"getDueDate(dispute.seller_response_due_date, dispute.buyer_response_due_date)\\\"\\n                                                       :label=\\\"$tc('swag-paypal-disputes.common.response_due_date.label')\\\"\\n                                                       disabled>\\n                                        </sw-text-field>\\n                                    {% endblock %}\\n\\n                                    {% block swag_paypal_disputes_detail_content_details_fields_status %}\\n                                        <sw-text-field :value=\\\"`${formatTechnicalText(dispute.status)} (${formatTechnicalText(dispute.reason)})`\\\"\\n                                                       :label=\\\"$tc('swag-paypal-disputes.common.status')\\\"\\n                                                       disabled>\\n                                        </sw-text-field>\\n                                    {% endblock %}\\n\\n                                    {% block swag_paypal_disputes_detail_content_details_fields_dispute_life_cycle_stage %}\\n                                        <sw-text-field :value=\\\"formatTechnicalText(dispute.dispute_life_cycle_stage)\\\"\\n                                                       :label=\\\"$tc('swag-paypal-disputes.common.dispute_life_cycle_stage')\\\"\\n                                                       :class=\\\"getInquiryClass(dispute.dispute_life_cycle_stage)\\\"\\n                                                       disabled>\\n                                        </sw-text-field>\\n                                    {% endblock %}\\n\\n                                    {% block swag_paypal_disputes_detail_content_details_fields_dispute_amount %}\\n                                        <sw-text-field :value=\\\"`${dispute.dispute_amount.value} ${dispute.dispute_amount.currency_code}`\\\"\\n                                                       :label=\\\"$tc('swag-paypal-disputes.common.dispute_amount')\\\"\\n                                                       disabled>\\n                                        </sw-text-field>\\n                                    {% endblock %}\\n\\n                                </template>\\n                            {% endblock %}\\n\\n                        </sw-card>\\n                    {% endblock %}\\n\\n                    {% block swag_paypal_disputes_detail_content_raw_data %}\\n                        <sw-card :isLoading=\\\"isLoading\\\"\\n                                 :title=\\\"$tc('swag-paypal-disputes.detail.rawDataCardTitle')\\\">\\n\\n                            {% block swag_paypal_disputes_detail_content_raw_data_content %}\\n                                <template v-if=\\\"dispute\\\">\\n\\n                                    {% block swag_paypal_disputes_detail_content_raw_data_text %}\\n                                        <sw-textarea-field :value=\\\"JSON.stringify(dispute, null, 2)\\\"\\n                                                           disabled>\\n                                        </sw-textarea-field>\\n                                    {% endblock %}\\n\\n                                    {% block swag_paypal_disputes_detail_content_raw_data_copy_button %}\\n                                        <sw-button @click=\\\"copyToClipboard\\\">\\n                                            {{ $tc('swag-paypal-disputes.detail.copyButtonLabel') }}\\n                                        </sw-button>\\n                                    {% endblock %}\\n\\n                                </template>\\n                            {% endblock %}\\n\\n                        </sw-card>\\n                    {% endblock %}\\n\\n                </sw-card-view>\\n            </template>\\n        {% endblock %}\\n\\n    </sw-page>\\n{% endblock %}\\n\";","module.exports = \"<svg width=\\\"34\\\" height=\\\"24\\\" viewBox=\\\"0 0 34 24\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"0.5\\\" y=\\\"0.5\\\" width=\\\"33\\\" height=\\\"23\\\" rx=\\\"3.5\\\" fill=\\\"white\\\" stroke=\\\"#D1D9E0\\\"></rect><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M19.342 12.488H20.4552C20.8082 12.4749 21.0228 12.4469 21.1001 12.4031C21.2056 12.3432 21.2765 12.2235 21.3117 12.0438C21.3342 11.9242 21.3455 11.7464 21.3455 11.5102C21.3455 11.2209 21.3231 11.0064 21.2781 10.8663C21.2139 10.6701 21.0601 10.5506 20.8165 10.5072C20.7683 10.5006 20.653 10.4971 20.4703 10.4971H19.342V12.488ZM17.5564 15.8414V9H20.8831C21.3394 9 21.6876 9.03843 21.9268 9.1152C22.474 9.29199 22.8411 9.65395 23.0291 10.201C23.1262 10.4881 23.1747 10.9203 23.1747 11.4975C23.1747 12.1915 23.1209 12.6902 23.0144 12.9938C22.801 13.5942 22.3618 13.9401 21.6986 14.0297C21.6206 14.0432 21.2887 14.0552 20.703 14.0648L20.4065 14.075H19.342V15.8414H17.5564ZM10.2514 11.1824H8.59024C8.59024 10.9012 8.5582 10.7126 8.49445 10.6166C8.39561 10.4745 8.12275 10.4033 7.67619 10.4033C7.24251 10.4033 6.955 10.4443 6.8147 10.5262C6.67449 10.6083 6.6043 10.787 6.6043 11.0622C6.6043 11.3113 6.66644 11.4753 6.79104 11.5539C6.8803 11.6096 6.99822 11.6424 7.14528 11.6522L7.48028 11.6766C8.19825 11.7258 8.64666 11.7604 8.82551 11.78C9.39329 11.839 9.80491 11.9948 10.0603 12.2471C10.2613 12.4439 10.3811 12.7012 10.4194 13.019C10.4418 13.209 10.4529 13.4241 10.4529 13.663C10.4529 14.2138 10.4019 14.6172 10.2998 14.8728C10.1149 15.3418 9.69939 15.6381 9.05289 15.7625C8.78205 15.8151 8.36768 15.8414 7.81037 15.8414C6.88006 15.8414 6.23171 15.7843 5.86564 15.6695C5.41635 15.5289 5.12014 15.2441 4.97679 14.8151C4.89694 14.5763 4.85742 14.1787 4.85742 13.622H6.51858L6.51874 13.7643C6.51874 14.0613 6.60156 14.2524 6.76681 14.3375C6.88135 14.3961 7.01963 14.4269 7.18222 14.4306H7.7929C8.10456 14.4306 8.30345 14.4142 8.38925 14.3811C8.54194 14.3192 8.64215 14.2195 8.69004 14.0816C8.71548 13.9967 8.72812 13.8868 8.72812 13.7523C8.72812 13.4511 8.62147 13.2679 8.40857 13.2021C8.32897 13.1762 7.95855 13.14 7.2974 13.0941C6.76649 13.055 6.39768 13.0174 6.19115 12.9809C5.64727 12.876 5.28482 12.6603 5.10396 12.3328C4.945 12.0545 4.86547 11.6335 4.86547 11.0702C4.86547 10.6413 4.90845 10.2973 4.99434 10.0386C5.0803 9.77985 5.21882 9.5834 5.40999 9.44902C5.69001 9.24277 6.04836 9.12167 6.48453 9.08549C6.84746 9.05287 7.25007 9.03619 7.69293 9.03619C8.39014 9.03619 8.887 9.07752 9.18321 9.15944C9.90609 9.35971 10.2675 9.9207 10.2675 10.8426C10.2675 10.9182 10.2621 11.0312 10.2514 11.1824ZM25.795 10.3606L26.6316 13.3262H24.9831L25.795 10.3606ZM24.5989 14.659H26.9863L27.3269 15.8414H29.1355L27.1176 9H24.4241L22.4307 15.8414H24.2781L24.5989 14.659Z\\\" fill=\\\"#10298E\\\"></path><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M15.0922 9.96253C15.8286 9.96253 16.4859 10.3124 16.918 10.8603L17.3029 10.0093C16.7009 9.42262 15.8816 9.06091 14.9779 9.06091C13.571 9.06091 12.3674 9.93713 11.8734 11.1775H11.1229L10.6797 12.1572H11.6452C11.638 12.2481 11.6333 12.339 11.6333 12.4318C11.6333 12.5441 11.639 12.6551 11.6498 12.7647H11.1645L10.7214 13.7448H11.8965C12.4045 14.9537 13.593 15.8025 14.9779 15.8025C15.6759 15.8025 16.3235 15.5868 16.8597 15.2185V14.0174C16.4279 14.5244 15.7963 14.8447 15.0922 14.8447C14.2691 14.8447 13.5451 14.4071 13.1235 13.7448H15.5841L16.0272 12.7647H12.7614C12.7446 12.6468 12.7356 12.5263 12.7356 12.4035C12.7356 12.3205 12.7398 12.2383 12.7475 12.1572H16.3018L16.7449 11.1775H13.0549C13.463 10.4512 14.2224 9.96253 15.0922 9.96253\\\" fill=\\\"#FFBE00\\\"></path></svg>\"","module.exports = \"{# @deprecated tag:v6.0.0 - Will be removed without replacement #}\\n{% block swag_paypal_content_card_channel_config_plus %}\\n    <sw-card :title=\\\"$tc('swag-paypal.settingForm.plus.cardTitle')\\\">\\n\\n        {# @deprecated tag:v6.0.0 - Will be removed without replacement #}\\n        {% block swag_paypal_content_card_channel_config_plus_settings %}\\n            <div v-if=\\\"actualConfigData\\\" class=\\\"swag-paypal-settings-plus-fields\\\">\\n\\n                {# @deprecated tag:v6.0.0 - Will be removed without replacement #}\\n                {% block swag_paypal_content_card_channel_config_plus_settings_warning %}\\n                <template v-if=\\\"isPayPalPLUSActive\\\">\\n                    <sw-alert\\n                        variant=\\\"warning\\\"\\n                    >\\n                        <span v-html=\\\"$tc('swag-paypal.settingForm.plus.warning.active')\\\"></span>\\n                    </sw-alert>\\n                </template>\\n\\n                <template v-if=\\\"isPayPalPLUSInActive\\\">\\n                    <sw-alert\\n                        variant=\\\"info\\\"\\n                    >\\n                        <span v-html=\\\"$tc('swag-paypal.settingForm.plus.warning.inactive')\\\"></span>\\n                    </sw-alert>\\n                </template>\\n                {% endblock %}\\n\\n                {# @deprecated tag:v6.0.0 - Will be removed without replacement #}\\n                {% block swag_paypal_content_card_channel_config_plus_settings_onboarding %}\\n                    <p v-bind:class=\\\"{ 'swag-paypal-payal-plus-disabled': isPayPalPLUSInActive}\\\"\\n                       v-html=\\\"$tc('swag-paypal.settingForm.plus.introduction')\\\"></p>\\n                {% endblock %}\\n\\n                {# @deprecated tag:v6.0.0 - Will be removed without replacement #}\\n                {% block swag_paypal_content_card_channel_config_plus_settings_checkout_enabled %}\\n                    <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.plusCheckoutEnabled']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.plusCheckoutEnabled']\\\"\\n                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-switch-field name=\\\"SwagPayPal.settings.plusCheckoutEnabled\\\"\\n                                             bordered\\n                                             :mapInheritance=\\\"props\\\"\\n                                             :label=\\\"$tc('swag-paypal.settingForm.plus.plusCheckoutEnabled.label')\\\"\\n                                             :disabled=\\\"ifItWasNotActive() || props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                             :value=\\\"props.currentValue\\\"\\n                                             @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-switch-field>\\n\\n                            {# @deprecated tag:v6.0.0 - Will be removed without replacement #}\\n                            {% block swag_paypal_content_card_channel_config_behaviour_settings_intent_hint %}\\n                                <swag-paypal-settings-hint :hintText=\\\"$tc('swag-paypal.settingForm.plus.hint')\\\">\\n                                </swag-paypal-settings-hint>\\n                            {% endblock %}\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_content_card_channel_config_installment %}\\n    <sw-card :title=\\\"$tc('swag-paypal.settingForm.installment.cardTitle')\\\">\\n\\n        {% block swag_paypal_content_card_channel_config_installment_settings %}\\n            <div v-if=\\\"actualConfigData\\\" class=\\\"swag-paypal-settings-installment-fields\\\">\\n\\n                {% block swag_paypal_content_card_channel_config_installment_settings_checkout_enabled %}\\n                    <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.installmentBannerEnabled']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.installmentBannerEnabled']\\\"\\n                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-switch-field name=\\\"SwagPayPal.settings.installmentBannerEnabled\\\"\\n                                             bordered\\n                                             :mapInheritance=\\\"props\\\"\\n                                             :label=\\\"$tc('swag-paypal.settingForm.installment.installmentBannerEnabled.label')\\\"\\n                                             :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                             :value=\\\"props.currentValue\\\"\\n                                             @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-switch-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-payment-detail.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"24f5b1ef\", content, true, {});","module.exports = \"{% block swag_paypal_pos_wizard_connection %}\\n    <div class=\\\"swag-paypal-pos-wizard-connection\\\">\\n\\n        {% block swag_paypal_pos_wizard_connection_headline %}\\n            <div class=\\\"swag-paypal-pos-wizard-connection__headline\\\">\\n                {{ $tc('swag-paypal-pos.wizard.connection.headerConnect') }}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_wizard_connection_apikey %}\\n            <sw-password-field\\n                    v-model=\\\"salesChannel.extensions.paypalPosSalesChannel.apiKey\\\"\\n                    class=\\\"swag-paypal-pos-wizard-connection__apikey-field\\\"\\n                    required\\n                    :label=\\\"$tc('swag-paypal-pos.authentication.labelApiKey')\\\"\\n                    :placeholder=\\\"$tc('swag-paypal-pos.authentication.placeholderApiKey')\\\"\\n                    @input=\\\"forceUpdate\\\">\\n                <template #suffix>\\n\\n                    {% block swag_paypal_pos_wizard_connection_apikey_suffix %}\\n                        <sw-icon name=\\\"default-lock-key\\\"\\n                                 class=\\\"swag-paypal-pos-wizard-connection__apikey-suffix\\\"\\n                                 size=\\\"22px\\\">\\n                        </sw-icon>\\n                    {% endblock %}\\n                </template>\\n            </sw-password-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_wizard_connection_apikey_description %}\\n            <div class=\\\"swag-paypal-pos-wizard-connection__apikey-description\\\">\\n\\n                {% block swag_paypal_pos_wizard_connection_apikey_description_text %}\\n                    <div class=\\\"swag-paypal-pos-wizard-connection__apikey-description-text\\\">\\n                        {{ $tc('swag-paypal-pos.authentication.apiKeyDescription') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_wizard_connection_apikey_description_link %}\\n                    <sw-external-link :href=\\\"apiKeyUrl\\\"\\n                                      class=\\\"swag-paypal-pos-wizard-connection__apikey-description-link\\\">\\n\\n                        {% block swag_paypal_pos_wizard_connection_apikey_description_link_text %}\\n                            {{ $tc('swag-paypal-pos.authentication.buttonGenerateKey') }}\\n                        {% endblock %}\\n                    </sw-external-link>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_wizard_connection_header_new_customer %}\\n            <div class=\\\"swag-paypal-pos-wizard-connection__new-customer-headline\\\">\\n                {{ $tc('swag-paypal-pos.wizard.connection.headerNewCustomer') }}\\n            </div>\\n        {% endblock %}\\n\\n\\n        {% block swag_paypal_pos_wizard_connection_new_customer %}\\n            <sw-card :isLoading=\\\"isConnecting\\\">\\n                <sw-container\\n                        class=\\\"swag-paypal-pos-wizard-connection__new-customer-container\\\"\\n                        columns=\\\"1fr 1fr\\\"\\n                        align=\\\"center\\\"\\n                        gap=\\\"300px\\\">\\n\\n                    {% block swag_paypal_pos_wizard_connection_new_customer_image %}\\n                        <img class=\\\"swag-paypal-pos-wizard-connection__pos-logo\\\"\\n                             :src=\\\"'swagpaypal/static/img/paypal-pos-logo-full.png' | asset\\\"\\n                             alt=\\\"Zettle logo\\\">\\n                    {% endblock %}\\n\\n                    {% block swag_paypal_pos_wizard_connection_new_customer_button %}\\n                        <sw-button class=\\\"swag-paypal-pos-wizard-connection__pos-link\\\"\\n                                   variant=\\\"ghost\\\"\\n                                   size=\\\"small\\\"\\n                                   :link=\\\"$tc('swag-paypal-pos.wizard.connection.buttonCreateAccountLink')\\\">\\n\\n                            {% block swag_paypal_pos_wizard_connection_new_customer_button_text %}\\n                                <span class=\\\"swag-paypal-pos-wizard-connection__pos-link-text\\\">\\n                                    {{ $tc('swag-paypal-pos.wizard.connection.buttonCreateAccount') }}\\n                                </span>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_pos_wizard_connection_new_customer_button_icon %}\\n                                <sw-icon name=\\\"default-action-external\\\"\\n                                         class=\\\"swag-paypal-pos-wizard-connection__pos-link-icon\\\"\\n                                         size=\\\"10px\\\">\\n                                </sw-icon>\\n                            {% endblock %}\\n                        </sw-button>\\n                    {% endblock %}\\n                </sw-container>\\n            </sw-card>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_pos_detail_overview %}\\n    <div class=\\\"sw-sales-channel-detail-overview\\\">\\n\\n        {% block swag_paypal_pos_detail_overview_status %}\\n            <swag-paypal-pos-status-view\\n                    v-if=\\\"salesChannel.active\\\"\\n                    :isLoading=\\\"isLoading\\\"\\n                    :isSyncing=\\\"isSyncing\\\"\\n                    :lastCompleteRun=\\\"lastCompleteRun\\\"\\n                    :lastFinishedRun=\\\"lastRun\\\"\\n                    :salesChannel=\\\"salesChannel\\\"\\n                    :syncErrors=\\\"syncErrors\\\">\\n\\n                {% block swag_paypal_pos_detail_overview_status_actions %}\\n                    <template #actions>\\n                        <sw-button-group v-if=\\\"salesChannel && salesChannel.active && !isSyncing\\\">\\n\\n                            {% block swag_paypal_pos_detail_overview_status_actions_sync_button %}\\n                                <sw-button class=\\\"swag-paypal-pos-detail-overview__sync-button\\\"\\n                                           variant=\\\"primary\\\"\\n                                           @click=\\\"onStartSync\\\">\\n                                    {{ $tc('swag-paypal-pos.detail.overview.buttonSync') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu %}\\n                                <sw-context-button>\\n\\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_button %}\\n                                        <template #button>\\n                                            <sw-button class=\\\"swag-paypal-pos-detail-overview__sync-button-context\\\"\\n                                                       variant=\\\"primary\\\"\\n                                                       square\\n                                                       :disabled=\\\"isSyncing\\\">\\n                                                <sw-icon name=\\\"small-arrow-medium-down\\\" size=\\\"16\\\"></sw-icon>\\n                                            </sw-button>\\n                                        </template>\\n                                    {% endblock %}\\n\\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_item_products %}\\n                                        <sw-context-menu-item @click=\\\"onStartProductSync\\\">\\n                                            {{ $tc('swag-paypal-pos.detail.overview.buttonSyncProducts') }}\\n                                        </sw-context-menu-item>\\n                                    {% endblock %}\\n\\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_item_image %}\\n                                        <sw-context-menu-item @click=\\\"onStartImageSync\\\">\\n                                            {{ $tc('swag-paypal-pos.detail.overview.buttonSyncImages') }}\\n                                        </sw-context-menu-item>\\n                                    {% endblock %}\\n\\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_item_inventory %}\\n                                        <sw-context-menu-item @click=\\\"onStartInventorySync\\\">\\n                                            {{ $tc('swag-paypal-pos.detail.overview.buttonSyncInventory') }}\\n                                        </sw-context-menu-item>\\n                                    {% endblock %}\\n                                </sw-context-button>\\n                            {% endblock %}\\n                        </sw-button-group>\\n\\n                        {% block swag_paypal_pos_detail_overview_status_actions_sync_abort_button %}\\n                            <sw-button v-if=\\\"isSyncing\\\"\\n                                       @click=\\\"onSyncAbort\\\">\\n                                {{ $tc('swag-paypal-pos.detail.overview.buttonSyncAbort') }}\\n                            </sw-button>\\n                        {% endblock %}\\n                    </template>\\n                {% endblock %}\\n            </swag-paypal-pos-status-view>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_detail_overview_setup %}\\n            <swag-paypal-pos-continue-setup v-else>\\n            </swag-paypal-pos-continue-setup>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_detail_overview_getting_started %}\\n            <swag-paypal-pos-getting-started>\\n            </swag-paypal-pos-getting-started>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-wizard-connection-disconnect.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5f889df0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-first-run-wizard-paypal-credentials.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0df0b32e\", content, true, {});","var map = {\n\t\"./icons-paypal-multicolor.svg\": \"hGlr\",\n\t\"./icons-paypal-payment-method-bancontact.svg\": \"2wB4\",\n\t\"./icons-paypal-payment-method-blik.svg\": \"VTf9\",\n\t\"./icons-paypal-payment-method-credit-and-debit-card.svg\": \"qd8H\",\n\t\"./icons-paypal-payment-method-eps.svg\": \"TpJg\",\n\t\"./icons-paypal-payment-method-giropay.svg\": \"B5xi\",\n\t\"./icons-paypal-payment-method-iDEAL.svg\": \"hee3\",\n\t\"./icons-paypal-payment-method-multibanco.svg\": \"ePdX\",\n\t\"./icons-paypal-payment-method-mybank.svg\": \"xmX9\",\n\t\"./icons-paypal-payment-method-oxxo.svg\": \"z9qN\",\n\t\"./icons-paypal-payment-method-p24.svg\": \"3TM1\",\n\t\"./icons-paypal-payment-method-pay-upon-invoice.svg\": \"Mhl5\",\n\t\"./icons-paypal-payment-method-paypal.svg\": \"QsTL\",\n\t\"./icons-paypal-payment-method-sepa.svg\": \"4aBe\",\n\t\"./icons-paypal-payment-method-sofort.svg\": \"hFwU\",\n\t\"./icons-paypal-payment-method-trustly.svg\": \"pc6n\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"B5KR\";","module.exports = \"<svg width=\\\"47px\\\" height=\\\"20px\\\" viewBox=\\\"0 0 47 20\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><title>logo giropay</title><desc>Created with Sketch.</desc><defs><polygon id=\\\"path-1\\\" points=\\\"0 0.017902439 46.0918699 0.017902439 46.0918699 19.8373984 0 19.8373984\\\"></polygon><polygon id=\\\"path-3\\\" points=\\\"0 19.9821138 46.0918699 19.9821138 46.0918699 0.162601626 0 0.162601626\\\"></polygon></defs><g id=\\\"SPB_&amp;_AltPay_NewAssets\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" transform=\\\"translate(-100.000000, -159.000000)\\\"><g id=\\\"logo-giropay\\\" transform=\\\"translate(100.000000, 159.000000)\\\"><g id=\\\"Group-3\\\" transform=\\\"translate(0.000000, 0.144715)\\\"><mask id=\\\"mask-2\\\" fill=\\\"white\\\"><use xlink:href=\\\"#path-1\\\"></use></mask><g id=\\\"Clip-2\\\"></g><path d=\\\"M0,3.5735122 C0,1.60977236 1.5998374,0.017902439 3.57349593,0.017902439 L42.5182114,0.017902439 C44.4918699,0.017902439 46.0918699,1.60977236 46.0918699,3.5735122 L46.0918699,16.2818049 C46.0918699,18.2455447 44.4918699,19.8374146 42.5182114,19.8374146 L3.57349593,19.8374146 C1.5998374,19.8374146 0,18.2455447 0,16.2818049 L0,3.5735122 Z\\\" id=\\\"Fill-1\\\" fill=\\\"#003A7D\\\" mask=\\\"url(#mask-2)\\\"></path></g><path d=\\\"M1.46738211,3.84021138 L1.46738211,16.3065528 C1.46738211,17.5338699 2.46738211,18.5288293 3.70087805,18.5288293 L24.1036423,18.5288293 L24.1036423,1.61793496 L3.70087805,1.61793496 C2.46738211,1.61793496 1.46738211,2.61289431 1.46738211,3.84021138\\\" id=\\\"Fill-4\\\" fill=\\\"#FFFFFF\\\"></path><path d=\\\"M5.67102439,10.0205528 C5.67102439,9.34152846 6.00582114,8.77730081 6.64663415,8.77730081 C7.42126829,8.77730081 7.74630894,9.39892683 7.74630894,9.95356098 C7.74630894,10.7187642 7.25866667,11.235187 6.64663415,11.235187 C6.13004878,11.235187 5.67102439,10.795187 5.67102439,10.0205528 Z M9.41053659,7.57226016 L7.8515122,7.57226016 L7.8515122,8.47112195 L7.8324878,8.47112195 C7.46907317,7.85908943 6.87606504,7.45746341 6.13964228,7.45746341 C4.59021138,7.45746341 3.8921626,8.56689431 3.8921626,10.0491707 C3.8921626,11.5221789 4.74321951,12.5550244 6.11102439,12.5550244 C6.79964228,12.5550244 7.37346341,12.2872195 7.78468293,11.7038049 L7.80370732,11.7038049 L7.80370732,11.9716098 C7.80370732,12.9472195 7.26826016,13.4158374 6.27362602,13.4158374 C5.55622764,13.4158374 5.11622764,13.2628293 4.59021138,13.0046179 L4.50419512,14.3626667 C4.90582114,14.5060813 5.58500813,14.6782764 6.40744715,14.6782764 C8.41590244,14.6782764 9.41053659,14.0182764 9.41053659,11.9716098 L9.41053659,7.57226016 Z\\\" id=\\\"Fill-6\\\" fill=\\\"#ED1C24\\\"></path><mask id=\\\"mask-4\\\" fill=\\\"white\\\"><use xlink:href=\\\"#path-3\\\"></use></mask><g id=\\\"Clip-9\\\"></g><path d=\\\"M10.5985366,6.75918699 L12.32,6.75918699 L12.32,5.49674797 L10.5985366,5.49674797 L10.5985366,6.75918699 Z M10.598374,12.5549593 L12.3198374,12.5549593 L12.3198374,7.57219512 L10.598374,7.57219512 L10.598374,12.5549593 Z\\\" id=\\\"Fill-8\\\" fill=\\\"#ED1C24\\\" mask=\\\"url(#mask-4)\\\"></path><path d=\\\"M17.1133333,7.51479675 C16.9411382,7.48617886 16.7307317,7.45739837 16.5299187,7.45739837 C15.7839024,7.45739837 15.3534959,7.85918699 15.0570732,8.4904065 L15.0380488,8.4904065 L15.0380488,7.57219512 L13.4694309,7.57219512 L13.4694309,12.5549593 L15.1910569,12.5549593 L15.1910569,10.4508943 C15.1910569,9.47544715 15.6404878,8.89203252 16.4439024,8.89203252 C16.6447154,8.89203252 16.835935,8.89203252 17.0273171,8.94943089 L17.1133333,7.51479675 Z\\\" id=\\\"Fill-10\\\" fill=\\\"#ED1C24\\\" mask=\\\"url(#mask-4)\\\"></path><path d=\\\"M20.0773496,11.4647154 C19.2835285,11.4647154 18.9583252,10.804878 18.9583252,10.0682927 C18.9583252,9.32243902 19.2835285,8.66243902 20.0773496,8.66243902 C20.8711707,8.66243902 21.196374,9.32243902 21.196374,10.0682927 C21.196374,10.804878 20.8711707,11.4647154 20.0773496,11.4647154 M20.0773496,12.6697561 C21.7223902,12.6697561 22.9752358,11.7133333 22.9752358,10.0682927 C22.9752358,8.41382114 21.7223902,7.45739837 20.0773496,7.45739837 C18.4323089,7.45739837 17.1794634,8.41382114 17.1794634,10.0682927 C17.1794634,11.7133333 18.4323089,12.6697561 20.0773496,12.6697561\\\" id=\\\"Fill-11\\\" fill=\\\"#ED1C24\\\" mask=\\\"url(#mask-4)\\\"></path><path d=\\\"M29.3757073,10.0110244 C29.3757073,10.8048455 28.9836748,11.3500488 28.3332683,11.3500488 C27.7594472,11.3500488 27.2812358,10.8048455 27.2812358,10.0780163 C27.2812358,9.332 27.7020488,8.77720325 28.3332683,8.77720325 C29.0026992,8.77720325 29.3757073,9.35102439 29.3757073,10.0110244 Z M25.5597724,14.5633821 L27.2812358,14.5633821 L27.2812358,11.856878 L27.3002602,11.856878 C27.6254634,12.4498862 28.2758699,12.6697236 28.8783089,12.6697236 C30.360748,12.6697236 31.1545691,11.4456585 31.1545691,9.97265041 C31.1545691,8.76777236 30.399122,7.45736585 29.0218862,7.45736585 C28.2376585,7.45736585 27.5106667,7.77297561 27.166439,8.47118699 L27.147252,8.47118699 L27.147252,7.5721626 L25.5597724,7.5721626 L25.5597724,14.5633821 Z\\\" id=\\\"Fill-12\\\" fill=\\\"#FFFFFF\\\" mask=\\\"url(#mask-4)\\\"></path><path d=\\\"M33.505252,10.9769919 C33.505252,10.4987805 33.9642764,10.3169919 34.5476911,10.3169919 C34.8059024,10.3169919 35.0546829,10.3361789 35.2745203,10.3457724 C35.2745203,10.929187 34.8633008,11.5221951 34.2128943,11.5221951 C33.8112683,11.5221951 33.505252,11.3212195 33.505252,10.9769919 Z M36.9769593,12.5550407 C36.900374,12.1628455 36.8813496,11.770813 36.8813496,11.3786179 L36.8813496,9.52317073 C36.8813496,8.00252033 35.7815122,7.45747967 34.5094797,7.45747967 C33.7730569,7.45747967 33.1322439,7.56268293 32.5202114,7.81130081 L32.5488293,8.97813008 C33.0270407,8.7103252 33.5816748,8.60512195 34.1364715,8.60512195 C34.7580976,8.60512195 35.2650894,8.78674797 35.2745203,9.46577236 C35.0546829,9.42756098 34.7485041,9.39894309 34.4711057,9.39894309 C33.5530569,9.39894309 31.8984228,9.58056911 31.8984228,11.1013821 C31.8984228,12.1820325 32.7784228,12.6698374 33.7634634,12.6698374 C34.4711057,12.6698374 34.9493171,12.392439 35.3415122,11.770813 L35.3606992,11.770813 C35.3606992,12.0290244 35.3893171,12.2872358 35.3989106,12.5550407 L36.9769593,12.5550407 Z\\\" id=\\\"Fill-13\\\" fill=\\\"#FFFFFF\\\" mask=\\\"url(#mask-4)\\\"></path><path d=\\\"M37.750748,14.5634634 C38.1045691,14.6398862 38.4583902,14.6782602 38.8218049,14.6782602 C40.3998537,14.6782602 40.7728618,13.463626 41.2606667,12.2107805 L43.0873333,7.5722439 L41.3658699,7.5722439 L40.3426179,10.8239512 L40.3234309,10.8239512 L39.2522114,7.5722439 L37.3967642,7.5722439 L39.414813,12.6698049 C39.2904228,13.1098049 38.9653821,13.3584228 38.5445691,13.3584228 C38.3053821,13.3584228 38.0949756,13.3296423 37.8655447,13.2532195 L37.750748,14.5634634 Z\\\" id=\\\"Fill-14\\\" fill=\\\"#FFFFFF\\\" mask=\\\"url(#mask-4)\\\"></path></g></g></svg>\"","module.exports = \"{% block swag_paypal_payment_details_v2 %}\\n    <div class=\\\"swag-paypal-payment-details_v2\\\">\\n        <sw-card :title=\\\"$tc('swag-paypal-payment.paymentDetails.cardTitle')\\\">\\n            <template #grid>\\n\\n                {% block swag_paypal_payment_actions_section %}\\n                    <sw-card-section secondary slim>\\n                        <swag-paypal-payment-actions-v2\\n                                :orderTransactionId=\\\"orderTransactionId\\\"\\n                                :paypalOrder=\\\"paypalOrder\\\"\\n                                :paypalPartnerAttributionId=\\\"paypalPartnerAttributionId\\\"\\n                                :refundableAmount=\\\"refundableAmount\\\"\\n                                :captureableAmount=\\\"captureableAmount\\\"\\n                                :showVoidButton=\\\"showVoidButton\\\">\\n                        </swag-paypal-payment-actions-v2>\\n                    </sw-card-section>\\n                {% endblock %}\\n\\n                <sw-card-section divider=\\\"top\\\">\\n                    <sw-container columns=\\\"1fr\\\" gap=\\\"0px 30px\\\">\\n\\n                        {% block swag_paypal_payment_detail_invoice %}\\n                            {% block swag_paypal_payment_detail_invoice_heading %}\\n                                <h3>\\n                                    {{ $tc('swag-paypal-payment.paymentDetails.invoice.heading') }}\\n                                </h3>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_payment_detail_invoice_list %}\\n                                <sw-description-list class=\\\"swag-paypal-payment-detail__data\\\">\\n\\n                                    {% block swag_paypal_payment_detail_invoice_list_total %}\\n                                        <dt>{{ $tc('swag-paypal-payment.paymentDetails.invoice.totalAmount') }}</dt>\\n                                        <dd>{{ amount.value }} {{ currency }}</dd>\\n                                    {% endblock %}\\n\\n                                    <template v-if=\\\"amount.breakdown\\\">\\n                                        {% block swag_paypal_payment_detail_invoice_list_sub_total %}\\n                                            <dt>{{ $tc('swag-paypal-payment.paymentDetails.invoice.subTotal') }}</dt>\\n                                            <dd> {{ amount.breakdown.item_total.value }} {{ currency }}</dd>\\n                                        {% endblock %}\\n\\n                                        {% block swag_paypal_payment_detail_invoice_list_discount %}\\n                                            <div v-if=\\\"amount.breakdown.discount\\\">\\n                                                <dt>{{ $tc('swag-paypal-payment.paymentDetails.invoice.discount') }}</dt>\\n                                                <dd> {{ amount.breakdown.discount.value }} {{ currency }}</dd>\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block swag_paypal_payment_detail_invoice_list_handling %}\\n                                            <div v-if=\\\"amount.breakdown.handling\\\">\\n                                                <dt>{{ $tc('swag-paypal-payment.paymentDetails.invoice.handling') }}</dt>\\n                                                <dd> {{ amount.breakdown.handling.value }} {{ currency }}</dd>\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block swag_paypal_payment_detail_invoice_list_insurance %}\\n                                            <div v-if=\\\"amount.breakdown.insurance\\\">\\n                                                <dt>{{ $tc('swag-paypal-payment.paymentDetails.invoice.insurance') }}</dt>\\n                                                <dd> {{ amount.breakdown.insurance.value }} {{ currency }}</dd>\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block swag_paypal_payment_detail_invoice_list_shipping %}\\n                                            <dt>{{ $tc('swag-paypal-payment.paymentDetails.invoice.shipping') }}</dt>\\n                                            <dd> {{ amount.breakdown.shipping.value }} {{ currency }}</dd>\\n                                        {% endblock %}\\n\\n                                        {% block swag_paypal_payment_detail_invoice_list_shipping_discount %}\\n                                            <div v-if=\\\"amount.breakdown.insurance\\\">\\n                                                <dt>{{ $tc('swag-paypal-payment.paymentDetails.invoice.shipping_discount') }}</dt>\\n                                                <dd> {{ amount.breakdown.shipping_discount.value }} {{ currency }}</dd>\\n                                            </div>\\n                                        {% endblock %}\\n                                    </template>\\n\\n                                </sw-description-list>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_payment_detail_payment %}\\n                                {% block swag_paypal_payment_detail_payment_heading %}\\n                                    <h3 class=\\\"swag-paypal-payment-detail__heading\\\">\\n                                        {{ $tc('swag-paypal-payment.paymentDetails.payment.heading') }}\\n                                    </h3>\\n                                {% endblock %}\\n\\n                                {% block swag_paypal_payment_detail_payment_list %}\\n                                    <sw-description-list class=\\\"swag-paypal-payment-detail__data\\\">\\n                                        {% block swag_paypal_payment_detail_payment_list_intent %}\\n                                            <dt>{{ $tc('swag-paypal-payment.paymentDetails.payment.intent') }}</dt>\\n                                            <dd>{{ $tc(`swag-paypal.settingForm.behavior.intent.${paypalOrder.intent}`) }}</dd>\\n                                        {% endblock %}\\n\\n                                        {% block swag_paypal_payment_detail_payment_list_id %}\\n                                            <dt>{{ $tc('swag-paypal-payment.paymentDetails.payment.paymentId') }}</dt>\\n                                            <dd>{{ paypalOrder.id }}</dd>\\n                                        {% endblock %}\\n\\n                                        {% block swag_paypal_payment_detail_payment_list_status %}\\n                                            <dt>{{ $tc('swag-paypal-payment.paymentDetails.payment.state') }}</dt>\\n                                            <dd>{{ paypalOrder.status }}</dd>\\n                                        {% endblock %}\\n\\n                                        {% block swag_paypal_payment_detail_payment_list_create_time %}\\n                                            <dt>{{ $tc('swag-paypal-payment.paymentDetails.payment.createTime') }}</dt>\\n                                            <dd>{{ createDateTime }}</dd>\\n                                        {% endblock %}\\n\\n                                        {% block swag_paypal_payment_detail_payment_list_update_time %}\\n                                            <dt>{{ $tc('swag-paypal-payment.paymentDetails.payment.updateTime') }}</dt>\\n                                            <dd>{{ updateDateTime }}</dd>\\n                                        {% endblock %}\\n\\n                                    </sw-description-list>\\n                                {% endblock %}\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_payment_detail_customer %}\\n                                {% block swag_paypal_payment_detail_customer_heading %}\\n                                    <h3 class=\\\"swag-paypal-payment-detail__heading\\\">\\n                                        {{ $tc('swag-paypal-payment.paymentDetails.customer.heading') }}\\n                                    </h3>\\n                                {% endblock %}\\n\\n                                {% block swag_paypal_payment_detail_customer_list %}\\n                                    <sw-description-list class=\\\"swag-paypal-payment-detail__data\\\">\\n                                        <dt>{{ $tc('swag-paypal-payment.paymentDetails.customer.payerId') }}</dt>\\n                                        <dd>{{ payerId }}</dd>\\n                                    </sw-description-list>\\n                                {% endblock %}\\n                            {% endblock %}\\n                        {% endblock %}\\n\\n                    </sw-container>\\n                </sw-card-section>\\n            </template>\\n        </sw-card>\\n\\n        {% block swag_paypal_payment_transaction_history_card %}\\n            <sw-card :title=\\\"$tc('swag-paypal-payment.transactionHistory.cardTitle')\\\">\\n                <template #grid>\\n\\n                    {% block swag_paypal_payment_transaction_history_grid %}\\n                        <sw-data-grid :dataSource=\\\"payments\\\"\\n                                      :columns=\\\"paymentColumns\\\"\\n                                      :showActions=\\\"false\\\"\\n                                      :showSelection=\\\"false\\\">\\n                        </sw-data-grid>\\n                    {% endblock %}\\n                </template>\\n            </sw-card>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_payment_detail %}\\n    <div class=\\\"swag-paypal-payment-detail\\\">\\n\\n        {% block swag_paypal_payment_detail_components %}\\n            <component v-if=\\\"!isLoading && showPayPalPayment\\\"\\n                       :is=\\\"'swag-paypal-payment-details-v1'\\\"\\n                       :paymentResource=\\\"paymentResource\\\"\\n                       :orderId=\\\"order.id\\\">\\n            </component>\\n\\n            <component v-if=\\\"!isLoading && showPayPalOrder\\\"\\n                       :is=\\\"'swag-paypal-payment-details-v2'\\\"\\n                       :paypalOrder=\\\"paypalOrder\\\"\\n                       :orderTransactionId=\\\"orderTransaction.id\\\"\\n                       :paypalPartnerAttributionId=\\\"orderTransaction.customFields.swag_paypal_partner_attribution_id\\\">\\n            </component>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_detail_error_page %}\\n            {% block swag_paypal_payment_detail_error_page_canceled %}\\n                <div v-if=\\\"showCanceledPaymentError\\\">\\n                    <sw-empty-state\\n                            :title=\\\"$tc('swag-paypal-payment.errorPage.title')\\\"\\n                            :subline=\\\"$tc('swag-paypal-payment.errorPage.canceledPaymentContent')\\\"\\n                            icon=\\\"default-shopping-paper-bag\\\"\\n                            color=\\\"#A092F0\\\">\\n                    </sw-empty-state>\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_paypal_payment_detail_error_page_sandbox_live %}\\n                <div v-if=\\\"showSandboxLiveError\\\">\\n                    <sw-empty-state\\n                            :title=\\\"$tc('swag-paypal-payment.errorPage.title')\\\"\\n                            :subline=\\\"$tc('swag-paypal-payment.errorPage.sandboxLiveContent')\\\"\\n                            icon=\\\"default-shopping-paper-bag\\\"\\n                            color=\\\"#A092F0\\\">\\n                    </sw-empty-state>\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_paypal_payment_detail_error_page_other %}\\n                <div v-if=\\\"showGeneralError\\\">\\n                    <sw-empty-state\\n                            :title=\\\"$tc('swag-paypal-payment.errorPage.title')\\\"\\n                            :subline=\\\"$tc('swag-paypal-payment.errorPage.other')\\\"\\n                            icon=\\\"default-shopping-paper-bag\\\"\\n                            color=\\\"#A092F0\\\">\\n                    </sw-empty-state>\\n                </div>\\n            {% endblock %}\\n        {% endblock %}\\n\\n        <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_pos_synced_products %}\\n    <div class=\\\"swag-paypal-pos-detail-synced-products\\\">\\n\\n        {% block swag_paypal_pos_synced_products_grid %}\\n            <sw-card :title=\\\"$tc('swag-paypal-pos.detail.syncedProducts.title')\\\"\\n                     :isLoading=\\\"isLoading\\\">\\n\\n                {% block swag_paypal_pos_synced_products_grid %}\\n                    <template #grid>\\n                        <sw-data-grid v-if=\\\"total > 0\\\"\\n                                      identifier=\\\"swag-paypal-pos-detail-synced-products\\\"\\n                                      :dataSource=\\\"products\\\"\\n                                      :columns=\\\"columns\\\"\\n                                      :isLoading=\\\"isLoading\\\"\\n                                      :showActions=\\\"actions.length > 0\\\"\\n                                      :showSelection=\\\"false\\\"\\n                                      :showSettings=\\\"true\\\"\\n                                      :allowColumnEdit=\\\"true\\\"\\n                                      :sortBy=\\\"sortBy\\\"\\n                                      :sortDirection=\\\"sortDirection\\\"\\n                                      :skeletonItemAmount=\\\"limit\\\"\\n                                      @column-sort=\\\"onSortColumn\\\">\\n\\n                            {% block swag_paypal_pos_synced_products_grid_pagination %}\\n                                <template #pagination>\\n                                    <sw-pagination :limit=\\\"limit\\\"\\n                                                   :page=\\\"page\\\"\\n                                                   :total=\\\"total\\\"\\n                                                   :total-visible=\\\"7\\\"\\n                                                   @page-change=\\\"onPageChange\\\">\\n                                    </sw-pagination>\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_pos_synced_products_grid_column_date %}\\n                                <template #column-date=\\\"{ item }\\\">\\n\\n                                    {% block swag_paypal_pos_synced_products_grid_column_date_formatted %}\\n                                        <template v-if=\\\"hasSync(item)\\\">\\n                                            {{ getSyncDate(item) | date({\\n                                                hour: '2-digit',\\n                                                minute: '2-digit',\\n                                                day: '2-digit',\\n                                                month: '2-digit',\\n                                                year: '2-digit'\\n                                            })\\n                                            }}\\n                                        </template>\\n                                    {% endblock %}\\n\\n                                    {% block swag_paypal_pos_synced_products_grid_column_date_empty %}\\n                                        <template v-else>\\n                                            {{ $tc('swag-paypal-pos.detail.syncedProducts.notSyncedYet') }}\\n                                        </template>\\n                                    {% endblock %}\\n\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_pos_synced_products_grid_column_state %}\\n                                <template #column-state=\\\"{ item }\\\">\\n\\n                                    {% block swag_paypal_pos_synced_products_grid_column_state_label_log %}\\n                                        <template v-if=\\\"hasSync(item)\\\">\\n                                            <sw-label appearance=\\\"pill\\\"\\n                                                      :variant=\\\"getLabelVariant(getLevel(item))\\\">\\n                                                {{ $tc(getLabel(getLevel(item))) }}\\n                                            </sw-label>\\n                                        </template>\\n                                    {% endblock %}\\n\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_pos_synced_products_grid_actions %}\\n                                <template v-if=\\\"actions\\\"\\n                                          #actions=\\\"{ item }\\\">\\n                                    <sw-context-menu-item v-for=\\\"action in actions\\\"\\n                                                          :key=\\\"action.label\\\"\\n                                                          @click=\\\"action.callback(item)\\\">\\n                                        {{ $tc(action.label) }}\\n                                    </sw-context-menu-item>\\n                                </template>\\n                            {% endblock %}\\n\\n                        </sw-data-grid>\\n                    </template>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_synced_products_empty_state %}\\n                    <sw-empty-state v-if=\\\"total < 1\\\"\\n                                    class=\\\"swag-paypal-pos-detail-synced-products__empty-state\\\"\\n                                    :title=\\\"$tc('swag-paypal-pos.detail.syncedProducts.emptyState.title')\\\"\\n                                    :subline=\\\"$tc('swag-paypal-pos.detail.syncedProducts.emptyState.message')\\\">\\n                    </sw-empty-state>\\n                {% endblock %}\\n\\n            </sw-card>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_settings_payment_detail_content_field_plugin %}\\n<template v-if=\\\"needsOnboarding(paymentMethod.id)\\\">\\n    <swag-paypal-plugin-box-with-onboarding\\n        v-if=\\\"!!paymentMethod.pluginId\\\"\\n        :plugin-id=\\\"paymentMethod.pluginId\\\"\\n        :payment-method=\\\"paymentMethod\\\"\\n    />\\n</template>\\n<template v-else>\\n    {% parent %}\\n</template>\\n{% endblock %}\\n\\n{% block sw_settings_payment_detail_content_field_active %}\\n<template v-if=\\\"disableActiveSwitch\\\">\\n    <sw-field\\n        v-model=\\\"paymentMethod.active\\\"\\n        v-tooltip.left=\\\"{ message: $tc('sw-settings-payment-detail.tooltip') }\\\"\\n        class=\\\"sw-settings-payment-detail__field-active\\\"\\n        type=\\\"switch\\\"\\n        :disabled=\\\"disableActiveSwitch\\\"\\n        :label=\\\"$tc('sw-settings-payment.detail.labelActive')\\\"\\n    />\\n</template>\\n<template v-else>\\n    {% parent %}\\n</template>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_settings_payment_list_column_active_editor %}\\n<sw-icon\\n    v-if=\\\"needsOnboarding(item)\\\"\\n    v-tooltip.left=\\\"{\\n        message: $tc('sw-settings-payment-list.needOnboardingTooltip'),\\n    }\\\"\\n    name=\\\"default-lock-closed\\\"\\n    small\\n/>\\n<template v-else>\\n    {% parent %}\\n</template>\\n{% endblock %}\\n\\n{% block sw_settings_payment_list_column_active_label %}\\n<sw-icon\\n    v-if=\\\"needsOnboarding(item)\\\"\\n    v-tooltip.left=\\\"{\\n        message: $tc('sw-settings-payment-list.needOnboardingTooltip'),\\n    }\\\"\\n    name=\\\"default-lock-closed\\\"\\n    small\\n/>\\n<template v-else>\\n    {% parent %}\\n</template>\\n{% endblock %}\\n\\n{% block sw_settings_payment_list_content_inner %}\\n    <swag-paypal-created-component-helper\\n        @on-created-component=\\\"fetchMerchantIntegrations\\\"\\n    />\\n\\n    {% parent %}\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-detail-settings.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4f7ded13\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-locale-field.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"37ee2084\", content, true, {});","module.exports = \"{% block sw_text_field %}\\n    <sw-contextual-field\\n            v-bind=\\\"$attrs\\\"\\n            v-on=\\\"$listeners\\\"\\n            class=\\\"sw-field--text\\\"\\n            :name=\\\"formFieldName\\\"\\n            @inheritance-restore=\\\"$emit('inheritance-restore', $event)\\\"\\n            @inheritance-remove=\\\"$emit('inheritance-remove', $event)\\\">\\n\\n        <template v-if=\\\"hasPrefix\\\" #sw-contextual-field-prefix=\\\"{ disabled, identification }\\\">\\n            <slot name=\\\"prefix\\\" v-bind=\\\"{disabled, identification}\\\"></slot>\\n        </template>\\n\\n        <template #sw-field-input=\\\"{ identification, error, disabled, size, setFocusClass, removeFocusClass, hasSuffix, hasPrefix }\\\">\\n            <input v-bind=\\\"$attrs\\\"\\n                   v-on=\\\"additionalListeners\\\"\\n                   type=\\\"text\\\"\\n                   :name=\\\"identification\\\"\\n                   :id=\\\"identification\\\"\\n                   :disabled=\\\"disabled\\\"\\n                   :value=\\\"currentValue\\\"\\n                   :placeHolder=\\\"placeholder\\\"\\n                   @input=\\\"onInput\\\"\\n                   @change=\\\"onChange\\\"\\n                   @focus=\\\"setFocusClass\\\"\\n                   @blur=\\\"removeFocusClass\\\">\\n        </template>\\n\\n        <template v-if=\\\"copyable || hasSuffix\\\" #sw-contextual-field-suffix=\\\"{disabled, identification}\\\">\\n            <slot name=\\\"suffix\\\" v-bind=\\\"{ identification }\\\"></slot>\\n            <sw-field-copyable v-if=\\\"copyable\\\"\\n                               :displayName=\\\"identification\\\"\\n                               :copyableText=\\\"currentValue\\\"\\n                               :tooltip=\\\"copyableTooltip\\\">\\n            </sw-field-copyable>\\n        </template>\\n    </sw-contextual-field>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_pos_wizard_sync_library %}\\n    <div class=\\\"swag-paypal-pos-wizard-sync-library\\\">\\n\\n        {% block swag_paypal_pos_wizard_sync_library_header %}\\n            <i18n class=\\\"swag-paypal-pos-wizard-sync-library__headline\\\"\\n                  path=\\\"swag-paypal-pos.wizard.syncLibrary.header\\\"\\n                  tag=\\\"div\\\">\\n                <template #shopwareProducts>\\n                    <span>{{ $tc('swag-paypal-pos.wizard.syncLibrary.shopwareProducts', shopwareProductsCount) }}</span>\\n                </template>\\n                <template #posProducts>\\n                    <span>{{ $tc('swag-paypal-pos.wizard.syncLibrary.posProducts', posProductsCount) }}</span>\\n                </template>\\n            </i18n>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_wizard_sync_library_description_input %}\\n            <sw-radio-field\\n                v-model=\\\"salesChannel.extensions.paypalPosSalesChannel.replace\\\"\\n                class=\\\"swag-paypal-pos-boolean-radio\\\"\\n                :label=\\\"$tc('swag-paypal-pos.wizard.syncLibrary.description')\\\"\\n                :options=\\\"options\\\">\\n            </sw-radio-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_wizard_sync_library_disclaimer %}\\n            <div class=\\\"swag-paypal-pos-wizard-sync-library__disclaimer\\\">\\n                {{ $tc('swag-paypal-pos.wizard.syncLibrary.disclaimer') }}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_content_card_channel_config_spb %}\\n    <sw-card :title=\\\"$tc('swag-paypal.settingForm.spb.cardTitle')\\\">\\n\\n        {% block swag_paypal_content_card_channel_config_spb_settings %}\\n            <div v-if=\\\"actualConfigData\\\" class=\\\"swag-paypal-settings-spb-fields\\\">\\n\\n                {# @deprecated tag:v6.0.0 - Will be removed without replacement #}\\n                {% block swag_paypal_content_card_channel_config_spb_settings_checkout_enabled %}\\n                    <sw-inherit-wrapper\\n                        v-if=\\\"actualConfigData['SwagPayPal.settings.spbCheckoutEnabled']\\\"\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.spbCheckoutEnabled']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.spbCheckoutEnabled']\\\"\\n                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-switch-field name=\\\"SwagPayPal.settings.spbCheckoutEnabled\\\"\\n                                             bordered\\n                                             :mapInheritance=\\\"props\\\"\\n                                             :label=\\\"$tc('swag-paypal.settingForm.spb.spbCheckoutEnabled.label')\\\"\\n                                             :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                             :value=\\\"props.currentValue\\\"\\n                                             @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-switch-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {# @deprecated tag:v6.0.0 - Will be removed without replacement #}\\n                {% block swag_paypal_content_card_channel_config_spb_settings_alternaitve_payment_methods_enabled %}\\n                    <sw-inherit-wrapper\\n                        v-if=\\\"actualConfigData['SwagPayPal.settings.spbAlternativePaymentMethodsEnabled']\\\"\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.spbAlternativePaymentMethodsEnabled']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.spbAlternativePaymentMethodsEnabled']\\\"\\n                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-switch-field name=\\\"SwagPayPal.settings.spbAlternativePaymentMethodsEnabled\\\"\\n                                             bordered\\n                                             :mapInheritance=\\\"props\\\"\\n                                             :label=\\\"$tc('swag-paypal.settingForm.spb.spbAlternativePaymentMethodsEnabled.label')\\\"\\n                                             :helpText=\\\"$tc('swag-paypal.settingForm.spb.spbAlternativePaymentMethodsEnabled.helpText')\\\"\\n                                             :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                             :value=\\\"props.currentValue\\\"\\n                                             @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-switch-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {# @deprecated tag:v6.0.0 - Will be removed, renamed and moved to a different component #}\\n                {% block swag_paypal_content_card_channel_config_spb_settings_show_pay_later %}\\n                    <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.spbShowPayLater']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.spbShowPayLater']\\\"\\n                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-switch-field name=\\\"SwagPayPal.settings.spbShowPayLater\\\"\\n                                             bordered\\n                                             :mapInheritance=\\\"props\\\"\\n                                             :label=\\\"$tc('swag-paypal.settingForm.spb.spbShowPayLater.label')\\\"\\n                                             :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                             :value=\\\"props.currentValue\\\"\\n                                             @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-switch-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_spb_settings_button_color %}\\n                    <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.spbButtonColor']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.spbButtonColor']\\\"\\n                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\"\\n                        :label=\\\"$tc('swag-paypal.settingForm.express.ecsButtonColor.label')\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-single-select name=\\\"SwagPayPal.settings.spbButtonColor\\\"\\n                                              labelProperty=\\\"name\\\"\\n                                              valueProperty=\\\"id\\\"\\n                                              :options=\\\"buttonColorOptions\\\"\\n                                              :isInherited=\\\"props.isInherited\\\"\\n                                              :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                              :value=\\\"props.currentValue\\\"\\n                                              @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-single-select>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_spb_settings_button_shape %}\\n                    <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.spbButtonShape']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.spbButtonShape']\\\"\\n                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\"\\n                        :label=\\\"$tc('swag-paypal.settingForm.express.ecsButtonShape.label')\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-single-select name=\\\"SwagPayPal.settings.spbButtonShape\\\"\\n                                              labelProperty=\\\"name\\\"\\n                                              valueProperty=\\\"id\\\"\\n                                              :options=\\\"buttonShapeOptions\\\"\\n                                              :isInherited=\\\"props.isInherited\\\"\\n                                              :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                              :value=\\\"props.currentValue\\\"\\n                                              @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-single-select>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_spb_settings_locale %}\\n                    <sw-inherit-wrapper\\n                            v-model=\\\"actualConfigData['SwagPayPal.settings.spbButtonLanguageIso']\\\"\\n                            :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.spbButtonLanguageIso']\\\"\\n                            :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <swag-paypal-locale-field name=\\\"SwagPayPal.settings.spbButtonLanguageIso\\\"\\n                                                    :mapInheritance=\\\"props\\\"\\n                                                    :label=\\\"$tc('swag-paypal.settingForm.spb.spbButtonLanguageIso.label')\\\"\\n                                                    :helpText=\\\"$tc('swag-paypal.settingForm.spb.spbButtonLanguageIso.helpText')\\\"\\n                                                    :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                                    :value=\\\"props.currentValue\\\"\\n                                                    @change=\\\"props.updateCurrentValue\\\"\\n                                                    @preventSave=\\\"preventSave\\\">\\n                            </swag-paypal-locale-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-detail-overview.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"315ce2bd\", content, true, {});","Shopware.Service('privileges').addPrivilegeMappingEntry({\n    category: 'permissions',\n    parent: 'swag_paypal',\n    key: 'swag_paypal_disputes',\n    roles: {\n        viewer: {\n            privileges: [\n                'sales_channel:read',\n            ],\n            dependencies: [],\n        },\n    },\n});\n","module.exports = \"{% block sw_first_run_wizard_paypal_credentials %}\\n    <div class=\\\"sw-first-run-wizard-paypal-credentials\\\">\\n\\n        {% block sw_first_run_wizard_paypal_credentials_inner %}\\n            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n\\n            {% block sw_first_run_wizard_paypal_credentials_intro %}\\n                <p class=\\\"sw-first-run-wizard-paypal-credentials__headerText\\\">\\n                    {{ $tc('swag-paypal-frw-credentials.textIntroPayPal') }}\\n                </p>\\n            {% endblock %}\\n\\n            {% block sw_first_run_wizard_paypal_credentials_sandbox %}\\n                <sw-switch-field v-model=\\\"config['SwagPayPal.settings.sandbox']\\\"\\n                                 :label=\\\"$tc('swag-paypal-frw-credentials.labelSandbox')\\\"\\n                                 :helpText=\\\"$tc('swag-paypal-frw-credentials.tooltipSandbox')\\\">\\n                </sw-switch-field>\\n            {% endblock %}\\n\\n            {% block sw_first_run_wizard_paypal_credentials_button_container %}\\n                <div class=\\\"sw-first-run-wizard-paypal-credentials__button-container\\\">\\n\\n                    {% block sw_first_run_wizard_paypal_credentials_button %}\\n                        <a class=\\\"sw-button sw-button--primary swag-paypal-frw__signup-button\\\"\\n                           target=\\\"_blank\\\"\\n                           :data-paypal-onboard-complete=\\\"onboardingCallback\\\"\\n                           :href=\\\"`${onboardingUrl}`\\\"\\n                           data-paypal-button=\\\"true\\\">\\n                            {{ $tc('swag-paypal-frw-credentials.buttonGetCredentials') }}\\n                        </a>\\n                    {% endblock %}\\n\\n                    {% block sw_first_run_wizard_paypal_credentials_indicator %}\\n                        <div class=\\\"sw-first-run-wizard-paypal-credentials__indicator\\\">\\n                            <template v-if=\\\"isGetCredentialsSuccessful\\\">\\n\\n                                {% block sw_first_run_wizard_paypal_credentials_indicator_icon %}\\n                                    <sw-icon name=\\\"small-default-checkmark-line-medium\\\"\\n                                             class=\\\"sw-first-run-wizard-paypal-credentials__icon-successful\\\">\\n                                    </sw-icon>\\n                                {% endblock %}\\n\\n                                {% block sw_first_run_wizard_paypal_credentials_indicator_text %}\\n                                    <span class=\\\"sw-first-run-wizard-paypal-credentials__text-indicator\\\">\\n                                        {{ $tc('swag-paypal-frw-credentials.textFetchedSuccessful') }}\\n                                    </span>\\n                                {% endblock %}\\n                            </template>\\n                        </div>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block sw_first_run_wizard_paypal_credentials_client_id %}\\n                <sw-text-field v-model=\\\"config['SwagPayPal.settings.clientId']\\\"\\n                               v-show=\\\"!sandboxMode\\\"\\n                               :label=\\\"$tc('swag-paypal-frw-credentials.labelClientId')\\\"\\n                               @change=\\\"onCredentialsChanged\\\">\\n                </sw-text-field>\\n            {% endblock %}\\n\\n            {% block sw_first_run_wizard_paypal_credentials_client_secret %}\\n                <sw-text-field v-model=\\\"config['SwagPayPal.settings.clientSecret']\\\"\\n                               v-show=\\\"!sandboxMode\\\"\\n                               :label=\\\"$tc('swag-paypal-frw-credentials.labelClientSecret')\\\"\\n                               @change=\\\"onCredentialsChanged\\\">\\n                </sw-text-field>\\n            {% endblock %}\\n\\n            {% block sw_first_run_wizard_paypal_credentials_merchant_id %}\\n                <sw-text-field v-model=\\\"config['SwagPayPal.settings.merchantPayerId']\\\"\\n                               v-show=\\\"!sandboxMode\\\"\\n                               :label=\\\"$tc('swag-paypal-frw-credentials.labelMerchantPayerId')\\\"\\n                               @change=\\\"onCredentialsChanged\\\">\\n                </sw-text-field>\\n            {% endblock %}\\n\\n            {% block sw_first_run_wizard_paypal_credentials_client_id_sandbox %}\\n                <sw-text-field v-model=\\\"config['SwagPayPal.settings.clientIdSandbox']\\\"\\n                               v-show=\\\"sandboxMode\\\"\\n                               :label=\\\"$tc('swag-paypal-frw-credentials.labelClientIdSandbox')\\\"\\n                               @change=\\\"onCredentialsChanged\\\">\\n                </sw-text-field>\\n            {% endblock %}\\n\\n            {% block sw_first_run_wizard_paypal_credentials_client_secret_sandbox %}\\n                <sw-text-field v-model=\\\"config['SwagPayPal.settings.clientSecretSandbox']\\\"\\n                               v-show=\\\"sandboxMode\\\"\\n                               :label=\\\"$tc('swag-paypal-frw-credentials.labelClientSecretSandbox')\\\"\\n                               @change=\\\"onCredentialsChanged\\\">\\n                </sw-text-field>\\n            {% endblock %}\\n\\n            {% block sw_first_run_wizard_paypal_credentials_merchant_id_sandbox %}\\n                <sw-text-field v-model=\\\"config['SwagPayPal.settings.merchantPayerIdSandbox']\\\"\\n                               v-show=\\\"sandboxMode\\\"\\n                               :label=\\\"$tc('swag-paypal-frw-credentials.labelMerchantPayerIdSandbox')\\\"\\n                               @change=\\\"onCredentialsChanged\\\">\\n                </sw-text-field>\\n            {% endblock %}\\n\\n            {% block sw_first_run_wizard_paypal_credentials_set_default %}\\n                <sw-switch-field v-model=\\\"setDefault\\\"\\n                                 :disabled=\\\"!credentialsProvided\\\"\\n                                 :label=\\\"$tc('swag-paypal-frw-credentials.labelSetDefault')\\\"\\n                                 :helpText=\\\"$tc('swag-paypal-frw-credentials.tooltipSetDefault')\\\">\\n                </sw-switch-field>\\n            {% endblock %}\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_pos_status %}\\n    <sw-card :class=\\\"statusClasses\\\"\\n             :isLoading=\\\"isLoading\\\"\\n             :title=\\\"title\\\">\\n\\n        {% block swag_paypal_pos_status_icon %}\\n            <div class=\\\"swag-paypal-pos-status__icon-base\\\">\\n                <sw-icon :class=\\\"iconClasses\\\"\\n                         :name=\\\"icon\\\">\\n                </sw-icon>\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_status_status %}\\n            <div class=\\\"swag-paypal-pos-status__status\\\">\\n                <slot name=\\\"status\\\">{{ status }}</slot>\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_status_detail %}\\n            <div class=\\\"swag-paypal-pos-status__detail\\\">\\n                <slot name=\\\"detail\\\"></slot>\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_status_substatus %}\\n            <div v-if=\\\"showSubStatus\\\" class=\\\"swag-paypal-pos-status__substatus\\\">\\n\\n                {% block swag_paypal_pos_status_substatus_icon %}\\n                    <sw-icon v-if=\\\"showSubIcon\\\"\\n                             :class=\\\"subIconClasses\\\"\\n                             :name=\\\"subIcon\\\">\\n                    </sw-icon>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_status_substatus_content %}\\n                    <span>\\n                        <slot name=\\\"substatus\\\"></slot>\\n                    </span>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_status_actions %}\\n            <div class=\\\"swag-paypal-pos-status__actions\\\">\\n                <slot name=\\\"actions\\\"></slot>\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_status_disabled %}\\n            <div v-if=\\\"disabled\\\" class=\\\"swag-paypal-pos-status__disabled\\\">\\n                <slot name=\\\"disabledText\\\">{{ disabledText }}</slot>\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-plus.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6e626871\", content, true, {});","module.exports = \"{% block swag_paypal_payment_action_refund_v2 %}\\n    <sw-modal variant=\\\"small\\\"\\n              :title=\\\"$tc(`swag-paypal-payment.modal.title.refund`)\\\"\\n              @modal-close=\\\"$emit('modal-close')\\\">\\n\\n        {% block swag_paypal_payment_action_refund_v2_capture_select %}\\n            <sw-select-field\\n                    v-model=\\\"selectedCaptureId\\\"\\n                    :label=\\\"$tc('swag-paypal-payment.refundAction.invoiceSelect.label')\\\"\\n                    @change=\\\"setCapture\\\">\\n                <option v-for=\\\"capture in captures\\\"\\n                        :value=\\\"capture.id\\\">\\n                    {{ dateFilter(capture.create_time) }} ({{ capture.amount.value }} {{ capture.amount.currency_code }}) - {{ capture.id }} [{{ capture.status }}]\\n                </option>\\n            </sw-select-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_refund_v2_invoice_number %}\\n            <swag-paypal-text-field\\n                    v-model=\\\"refundInvoiceNumber\\\"\\n                    maxLength=\\\"127\\\"\\n                    :label=\\\"$tc('swag-paypal-payment.refundAction.refundInvoiceNumber.label')\\\"\\n                    :placeholder=\\\"$tc('swag-paypal-payment.refundAction.refundInvoiceNumber.placeholder')\\\">\\n            </swag-paypal-text-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_refund_v2_amount %}\\n            <sw-number-field\\n                    v-model=\\\"refundAmount\\\"\\n                    :max=\\\"Number(selectedCapture.amount.value)\\\"\\n                    :min=\\\"0\\\"\\n                    :label=\\\"$tc('swag-paypal-payment.refundAction.refundAmount.label')\\\"\\n                    :helpText=\\\"$tc('swag-paypal-payment.refundAction.refundAmount.helpText')\\\">\\n                <template #suffix>\\n                    {{ selectedCapture.amount.currency_code }}\\n                </template>\\n            </sw-number-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_refund_v2_note_to_payer %}\\n            <swag-paypal-textarea-field\\n                    v-model=\\\"refundNoteToPayer\\\"\\n                    maxLength=\\\"255\\\"\\n                    :placeholder=\\\"$tc('swag-paypal-payment.refundAction.refundNoteToPayer.placeholder')\\\"\\n                    :label=\\\"$tc('swag-paypal-payment.refundAction.refundNoteToPayer.label')\\\">\\n            </swag-paypal-textarea-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_refund_v2_confirm_button %}\\n            <template #modal-footer>\\n                <sw-button variant=\\\"primary\\\"\\n                           @click=\\\"refund\\\">\\n                    {{ $tc('swag-paypal-payment.refundAction.confirmButton.text') }}\\n                </sw-button>\\n            </template>\\n        {% endblock %}\\n\\n        <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n    </sw-modal>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-disputes-detail.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7c28d555\", content, true, {});","module.exports = \"<svg width=\\\"34\\\" height=\\\"24\\\" viewBox=\\\"0 0 34 24\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"0.5\\\" y=\\\"0.5\\\" width=\\\"33\\\" height=\\\"23\\\" rx=\\\"3.5\\\" fill=\\\"white\\\" stroke=\\\"#D1D9E0\\\"></rect><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M11.8915 5.1812L13.5 5.58333L15.0655 5.06149C15.1853 5.02158 15.3147 5.02158 15.4345 5.06149L17 5.58333L18.5655 5.06149C18.6853 5.02158 18.8147 5.02158 18.9345 5.06149L20.5 5.58333L22.1085 5.1812C22.4211 5.10307 22.7378 5.29309 22.8159 5.60564C22.8275 5.65191 22.8333 5.69943 22.8333 5.74712V18.2529C22.8333 18.575 22.5722 18.8362 22.25 18.8362C22.2023 18.8362 22.1548 18.8304 22.1085 18.8188L20.5 18.4167L18.9345 18.9385C18.8147 18.9784 18.6853 18.9784 18.5655 18.9385L17 18.4167L15.4345 18.9385C15.3147 18.9784 15.1853 18.9784 15.0655 18.9385L13.5 18.4167L11.8915 18.8188C11.5789 18.8969 11.2622 18.7069 11.1841 18.3944C11.1725 18.3481 11.1667 18.3006 11.1667 18.2529V5.74712C11.1667 5.42495 11.4278 5.16379 11.75 5.16379C11.7977 5.16379 11.8452 5.16964 11.8915 5.1812ZM12.3333 6.49424V17.5058L13.217 17.2848C13.4323 17.231 13.6584 17.2397 13.8689 17.3099L15.25 17.7702L16.6311 17.3099C16.8706 17.23 17.1295 17.23 17.3689 17.3099L18.75 17.7702L20.1311 17.3099C20.3416 17.2397 20.5677 17.231 20.783 17.2848L21.6667 17.5058V6.49424L20.783 6.71517C20.5677 6.76898 20.3416 6.7603 20.1311 6.69013L18.75 6.22978L17.3689 6.69013C17.1295 6.76996 16.8706 6.76996 16.6311 6.69013L15.25 6.22978L13.8689 6.69013C13.6584 6.7603 13.4323 6.76898 13.217 6.71517L12.3333 6.49424ZM14.0833 9.08333H19.9167C20.2388 9.08333 20.5 9.3445 20.5 9.66667C20.5 9.98883 20.2388 10.25 19.9167 10.25H14.0833C13.7612 10.25 13.5 9.98883 13.5 9.66667C13.5 9.3445 13.7612 9.08333 14.0833 9.08333ZM14.0833 11.4167H19.9167C20.2388 11.4167 20.5 11.6778 20.5 12C20.5 12.3222 20.2388 12.5833 19.9167 12.5833H14.0833C13.7612 12.5833 13.5 12.3222 13.5 12C13.5 11.6778 13.7612 11.4167 14.0833 11.4167ZM14.0833 13.75H19.9167C20.2388 13.75 20.5 14.0112 20.5 14.3333C20.5 14.6555 20.2388 14.9167 19.9167 14.9167H14.0833C13.7612 14.9167 13.5 14.6555 13.5 14.3333C13.5 14.0112 13.7612 13.75 14.0833 13.75Z\\\" fill=\\\"#758CA3\\\"></path></svg>\"","module.exports = \"{% block swag_paypal %}\\n    <sw-page class=\\\"swag-paypal\\\">\\n\\n        {% block swag_paypal_header %}\\n            <template #smart-bar-header>\\n                <h2>\\n                    {{ $tc('sw-settings.index.title') }}\\n                    <sw-icon name=\\\"small-arrow-medium-right\\\" small></sw-icon>\\n                    {{ $tc('swag-paypal.header') }}\\n                </h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_paypal_actions %}\\n            <template #smart-bar-actions>\\n                {% block swag_paypal_actions_save %}\\n                    <sw-button-process v-model=\\\"isSaveSuccessful\\\"\\n                                       class=\\\"sw-settings-login-registration__save-action\\\"\\n                                       variant=\\\"primary\\\"\\n                                       :isLoading=\\\"isLoading\\\"\\n                                       :disabled=\\\"isLoading || savingDisabled || hasError || !acl.can('swag_paypal.editor')\\\"\\n                                       @click=\\\"onSave\\\">\\n                        {{ $tc('global.default.save') }}\\n                    </sw-button-process>\\n                {% endblock %}\\n\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_paypal_content %}\\n            <template #content>\\n\\n                {% block swag_paypal_content_card %}\\n                    <sw-card-view>\\n\\n                        {% block swag_paypal_content_card_channel_config %}\\n                            <sw-sales-channel-config v-model=\\\"config\\\"\\n                                                     ref=\\\"configComponent\\\"\\n                                                     domain=\\\"SwagPayPal.settings\\\">\\n\\n                                {% block swag_paypal_content_card_channel_config_sales_channel %}\\n                                    <template #select=\\\"{ onInput, selectedSalesChannelId }\\\">\\n\\n                                        {% block swag_paypal_content_card_channel_config_sales_channel_card %}\\n                                            <sw-card :title=\\\"$tc('global.entities.sales_channel', 2)\\\">\\n\\n                                                {% block swag_paypal_content_card_channel_config_sales_channel_card_title %}\\n                                                    <sw-single-select v-model=\\\"selectedSalesChannelId\\\"\\n                                                                      labelProperty=\\\"translated.name\\\"\\n                                                                      valueProperty=\\\"id\\\"\\n                                                                      :isLoading=\\\"isLoading\\\"\\n                                                                      :options=\\\"salesChannels\\\"\\n                                                                      :disabled=\\\"!acl.can('swag_paypal.editor')\\\"\\n                                                                      @change=\\\"onInput\\\">\\n                                                    </sw-single-select>\\n                                                {% endblock %}\\n\\n                                                {% block swag_paypal_content_card_channel_config_sales_channel_card_footer %}\\n                                                    <template #footer>\\n\\n                                                        {% block swag_paypal_content_card_channel_config_sales_channel_card_footer_container %}\\n                                                        <sw-container columns=\\\"2fr 1fr\\\"\\n                                                                      gap=\\\"0px 30px\\\">\\n\\n                                                            {% block swag_paypal_content_card_channel_config_sales_channel_card_footer_container_text %}\\n                                                                <p>{{ $tc('swag-paypal.saleschannelCard.button.description') }}</p>\\n                                                            {% endblock %}\\n\\n                                                            {% block swag_paypal_content_card_channel_config_sales_channel_card_footer_container_button %}\\n                                                                <sw-button-process v-model=\\\"isSetDefaultPaymentSuccessful\\\"\\n                                                                                   :isLoading=\\\"isSettingDefaultPaymentMethods\\\"\\n                                                                                   :disabled=\\\"!acl.can('swag_paypal.editor')\\\"\\n                                                                                   @click=\\\"onSetPaymentMethodDefault\\\">\\n                                                                    {{ $tc('swag-paypal.saleschannelCard.button.label') }}\\n                                                                </sw-button-process>\\n                                                            {% endblock %}\\n\\n                                                        </sw-container>\\n                                                        {% endblock %}\\n\\n                                                    </template>\\n                                                {% endblock %}\\n\\n                                            </sw-card>\\n                                        {% endblock %}\\n\\n                                    </template>\\n                                {% endblock %}\\n\\n                                {% block swag_paypal_content_card_channel_config_cards %}\\n                                    <template #content=\\\"{ actualConfigData, allConfigs, selectedSalesChannelId }\\\">\\n                                        <div v-if=\\\"actualConfigData\\\">\\n\\n                                            {% block swag_paypal_content_card_channel_config_checkout_card %}\\n                                                <swag-paypal-checkout\\n                                                    ref=\\\"swagPayPalCheckoutComponent\\\"\\n                                                    :allowShowCredentials=\\\"allowShowCredentials\\\"\\n                                                    :actualConfigData=\\\"actualConfigData\\\"\\n                                                    :allConfigs=\\\"allConfigs\\\"\\n                                                    :selectedSalesChannelId=\\\"selectedSalesChannelId\\\"\\n                                                    :clientIdErrorState=\\\"clientIdErrorState\\\"\\n                                                    :clientSecretErrorState=\\\"clientSecretErrorState\\\"\\n                                                    :clientIdSandboxErrorState=\\\"clientIdSandboxErrorState\\\"\\n                                                    :clientSecretSandboxErrorState=\\\"clientSecretSandboxErrorState\\\"\\n                                                    :clientIdFilled=\\\"clientIdFilled\\\"\\n                                                    :clientSecretFilled=\\\"clientSecretFilled\\\"\\n                                                    :clientIdSandboxFilled=\\\"clientIdSandboxFilled\\\"\\n                                                    :clientSecretSandboxFilled=\\\"clientSecretSandboxFilled\\\"\\n                                                    :isLoading=\\\"isLoading\\\"\\n                                                    @on-change-credentials-visibility=\\\"onChangeCredentialsVisibility\\\"\\n                                                    @on-save-settings=\\\"save\\\"\\n                                                    @on-deactivate-paypal-plus=\\\"save\\\"\\n                                                    @on-change-loading=\\\"onChangeLoading\\\">\\n                                                    <template #credentials>\\n                                                        {% block swag_paypal_content_card_channel_config_credentials_card %}\\n                                                            <swag-paypal-credentials v-if=\\\"showCredentials\\\"\\n                                                                                     :actualConfigData=\\\"actualConfigData\\\"\\n                                                                                     :allConfigs=\\\"allConfigs\\\"\\n                                                                                     :selectedSalesChannelId=\\\"selectedSalesChannelId\\\"\\n                                                                                     :clientIdErrorState=\\\"clientIdErrorState\\\"\\n                                                                                     :clientSecretErrorState=\\\"clientSecretErrorState\\\"\\n                                                                                     :clientIdSandboxErrorState=\\\"clientIdSandboxErrorState\\\"\\n                                                                                     :clientSecretSandboxErrorState=\\\"clientSecretSandboxErrorState\\\"\\n                                                                                     :clientIdFilled=\\\"clientIdFilled\\\"\\n                                                                                     :clientSecretFilled=\\\"clientSecretFilled\\\"\\n                                                                                     :clientIdSandboxFilled=\\\"clientIdSandboxFilled\\\"\\n                                                                                     :clientSecretSandboxFilled=\\\"clientSecretSandboxFilled\\\"\\n                                                                                     :isLoading=\\\"isLoading\\\">\\n                                                            </swag-paypal-credentials>\\n                                                        {% endblock %}\\n                                                    </template>\\n                                                </swag-paypal-checkout>\\n                                            {% endblock %}\\n\\n                                            {# @deprecated tag:v6.0.0 - Will be removed without replacement #}\\n                                            {% block swag_paypal_content_card_channel_config_plus %}\\n                                                <swag-paypal-plus v-if=\\\"showPlusCard\\\"\\n                                                                  :actualConfigData=\\\"actualConfigData\\\"\\n                                                                  :allConfigs=\\\"allConfigs\\\"\\n                                                                  :selectedSalesChannelId=\\\"selectedSalesChannelId\\\">\\n                                                </swag-paypal-plus>\\n                                            {% endblock %}\\n\\n                                            {% block swag_paypal_content_card_channel_config_behavior %}\\n                                                <swag-paypal-behavior :actualConfigData=\\\"actualConfigData\\\"\\n                                                                     :allConfigs=\\\"allConfigs\\\"\\n                                                                     :selectedSalesChannelId=\\\"selectedSalesChannelId\\\">\\n                                                </swag-paypal-behavior>\\n                                            {% endblock %}\\n\\n                                            {% block swag_paypal_content_card_channel_config_express %}\\n                                                <swag-paypal-express :actualConfigData=\\\"actualConfigData\\\"\\n                                                                   :allConfigs=\\\"allConfigs\\\"\\n                                                                   :selectedSalesChannelId=\\\"selectedSalesChannelId\\\"\\n                                                                   @preventSave=\\\"preventSave\\\">\\n                                                </swag-paypal-express>\\n                                            {% endblock %}\\n\\n                                            {% block swag_paypal_content_card_channel_config_installment %}\\n                                                <swag-paypal-installment :actualConfigData=\\\"actualConfigData\\\"\\n                                                                       :allConfigs=\\\"allConfigs\\\"\\n                                                                       :selectedSalesChannelId=\\\"selectedSalesChannelId\\\">\\n                                                </swag-paypal-installment>\\n                                            {% endblock %}\\n\\n                                            {% block swag_paypal_content_card_channel_config_pui %}\\n                                                <swag-paypal-pui :actualConfigData=\\\"actualConfigData\\\"\\n                                                                 :allConfigs=\\\"allConfigs\\\"\\n                                                                 :selectedSalesChannelId=\\\"selectedSalesChannelId\\\">\\n                                                </swag-paypal-pui>\\n                                            {% endblock %}\\n\\n                                            {% block swag_paypal_content_card_channel_config_spb %}\\n                                                <swag-paypal-spb v-if=\\\"showSPBCard\\\"\\n                                                               :actualConfigData=\\\"actualConfigData\\\"\\n                                                               :allConfigs=\\\"allConfigs\\\"\\n                                                               :selectedSalesChannelId=\\\"selectedSalesChannelId\\\"\\n                                                               @preventSave=\\\"preventSave\\\">\\n                                                </swag-paypal-spb>\\n                                            {% endblock %}\\n                                        </div>\\n                                    </template>\\n                                {% endblock %}\\n\\n                            </sw-sales-channel-config>\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_content_card_loading %}\\n                            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                        {% endblock %}\\n\\n                    </sw-card-view>\\n                {% endblock %}\\n\\n            </template>\\n        {% endblock %}\\n\\n    </sw-page>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_pos_wizard_connection_success %}\\n    <div class=\\\"swag-paypal-pos-wizard-connection-success\\\">\\n\\n        {% block swag_paypal_pos_wizard_connection_success_headline_content %}\\n            <div class=\\\"swag-paypal-pos-wizard-connection-success__content\\\">\\n\\n                {% block swag_paypal_pos_wizard_connection_success_icon %}\\n                    <div class=\\\"swag-paypal-pos-wizard-connection-success__icon-wrapper\\\">\\n                        <sw-icon class=\\\"swag-paypal-pos-wizard-connection-success__icon\\\"\\n                                 name=\\\"default-action-thumb-up\\\"\\n                                 size=\\\"80px\\\"\\n                                 color=\\\"#37D046\\\">\\n                        </sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_wizard_connection_success_headline %}\\n                    <div class=\\\"swag-paypal-pos-wizard-connection-success__headline\\\">\\n                        {{ $tc('swag-paypal-pos.wizard.connectionSuccess.headline') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_wizard_connection_success_info %}\\n                    <div class=\\\"swag-paypal-pos-wizard-connection-success__info\\\">\\n                        {{ $tc('swag-paypal-pos.wizard.connectionSuccess.info') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_wizard_connection_success_user %}\\n                    <sw-card class=\\\"swag-paypal-pos-wizard-connection-success__user\\\"\\n                             :isLoading=\\\"isFetchingInformation\\\">\\n                        <sw-container class=\\\"swag-paypal-pos-wizard-connection-success__user-container\\\"\\n                                      columns=\\\"30px auto 150px\\\"\\n                                      align=\\\"center\\\"\\n                                      gap=\\\"30px\\\">\\n\\n                            {% block swag_paypal_pos_wizard_connection_success_user_avatar %}\\n                                <sw-avatar\\n                                        class=\\\"swag-paypal-pos-wizard-connection-success__user-avatar\\\"\\n                                        size=\\\"40px\\\"\\n                                        :firstName=\\\"posUser.firstName\\\"\\n                                        :lastName=\\\"posUser.lastName\\\">\\n                                </sw-avatar>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_pos_wizard_connection_success_user_information %}\\n                                <div class=\\\"swag-paypal-pos-wizard-connection-success__user-info\\\">\\n\\n                                    {% block swag_paypal_pos_wizard_connection_success_user_information_real %}\\n                                        <div class=\\\"swag-paypal-pos-wizard-connection-success__user-info-name\\\">\\n                                            {{ posUser.fullName }}\\n                                        </div>\\n                                        <div class=\\\"swag-paypal-pos-wizard-connection-success__user-info-mail\\\">\\n                                            {{ posUser.mail }}\\n                                        </div>\\n                                    {% endblock %}\\n                                </div>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_pos_wizard_connection_success_user_disconnect_button %}\\n                                <sw-button class=\\\"swag-paypal-pos-wizard-connection-success__user-disconnect\\\"\\n                                           variant=\\\"ghost\\\"\\n                                           size=\\\"small\\\"\\n                                           @click=\\\"onDisconnect\\\">\\n                                    {{ $tc('swag-paypal-pos.wizard.connectionSuccess.disconnectButton') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </sw-container>\\n                    </sw-card>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_wizard_connection_success_disclaimer %}\\n            <div class=\\\"swag-paypal-pos-wizard-connection-success__disclaimer\\\">\\n                {{ $tc('swag-paypal-pos.wizard.connectionSuccess.disclaimer') }}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_pos_wizard_product_selection %}\\n    <div class=\\\"swag-paypal-pos-wizard-product-selection\\\">\\n\\n        {% block swag_paypal_pos_wizard_product_selection_info %}\\n            <p class=\\\"swag-paypal-pos-wizard-product-selection__info\\\">\\n                {{ $tc('swag-paypal-pos.wizard.productSelection.info') }}\\n            </p>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_wizard_product_selection_sales_channel_toggle %}\\n            <sw-switch-field v-model=\\\"hasClone\\\"\\n                             class=\\\"swag-paypal-pos-wizard-product-selection__clone-switch\\\"\\n                             bordered\\n                             :label=\\\"$tc('swag-paypal-pos.wizard.productSelection.labelToggle')\\\"\\n                             @change=\\\"updateClone\\\">\\n            </sw-switch-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_wizard_product_selection_sales_channel_select %}\\n            <sw-entity-single-select v-model=\\\"localCloneSalesChannelId\\\"\\n                                     class=\\\"swag-paypal-pos-wizard-product-selection__saleschannel-select\\\"\\n                                     entity=\\\"sales_channel\\\"\\n                                     :criteria=\\\"salesChannelCriteria\\\"\\n                                     :disabled=\\\"!hasClone\\\"\\n                                     :label=\\\"$tc('swag-paypal-pos.wizard.productSelection.labelSelect')\\\"\\n                                     @input=\\\"forceUpdate\\\">\\n            </sw-entity-single-select>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_disputes_list %}\\n    <sw-page class=\\\"swag-paypal-disputes-list\\\">\\n\\n        {% block swag_paypal_disputes_list_smart_bar_header %}\\n            <template #smart-bar-header>\\n\\n                {% block swag_paypal_disputes_list_smart_bar_header_title %}\\n                    <h2>\\n\\n                        {% block swag_paypal_disputes_list_smart_bar_header_title_text %}\\n                            {{ $tc('swag-paypal-disputes.list.title') }}\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_disputes_list_smart_bar_header_amount %}\\n                            <template v-if=\\\"!isLoading\\\">\\n                                ({{ total }})\\n                            </template>\\n                        {% endblock %}\\n\\n                    </h2>\\n                {% endblock %}\\n\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_paypal_disputes_list_content %}\\n            <template #content>\\n                <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                <template v-else>\\n\\n                    {% block swag_paypal_disputes_list_content_grid %}\\n                        <sw-data-grid v-if=\\\"disputes.length > 0\\\"\\n                                      :dataSource=\\\"visibleDisputes\\\"\\n                                      :columns=\\\"disputesColumns\\\"\\n                                      :showActions=\\\"false\\\"\\n                                      :showSelection=\\\"false\\\">\\n\\n                            {% block swag_paypal_disputes_list_content_grid_column_update_time %}\\n                                <template #column-update_time=\\\"{ item }\\\">\\n                                    <div>\\n                                        <div>{{ formatUpdateDate(item.update_time) }}</div>\\n                                        <div>{{ formatUpdateTime(item.update_time) }}</div>\\n                                    </div>\\n                                </template>\\n                            {% endblock %}\\n\\n\\n                            {% block swag_paypal_disputes_list_content_grid_column_seller_response_due_date %}\\n                                <template #column-response_due_date=\\\"{ item }\\\">\\n                                    <template v-if=\\\"item.seller_response_due_date\\\">\\n                                        <strong>{{ $tc('swag-paypal-disputes.common.response_due_date.seller') }}</strong>:\\n                                        {{ formatDate(item.seller_response_due_date) }}\\n                                    </template>\\n                                    <template v-else-if=\\\"item.buyer_response_due_date\\\">\\n                                        <strong>{{ $tc('swag-paypal-disputes.common.response_due_date.buyer') }}</strong>:\\n                                        {{ formatDate(item.buyer_response_due_date) }}\\n                                    </template>\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_disputes_list_content_grid_column_status %}\\n                                <template #column-status=\\\"{ item }\\\">\\n                                    <div>\\n                                        <div>\\n                                            {{ formatTechnicalText(item.dispute_state) }}\\n                                            <template v-if=\\\"item.dispute_state !== item.status\\\"> ({{ formatTechnicalText(item.status) }})</template>\\n                                        </div>\\n                                        <div class=\\\"swag-paypal-disputes-list__reason\\\">\\n                                            {{ formatTechnicalText(item.reason) }}\\n                                        </div>\\n                                    </div>\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_disputes_list_content_grid_column_dispute_id %}\\n                                <template #column-dispute_id=\\\"{ item }\\\">\\n                                    <router-link :to=\\\"{ name: 'swag.paypal.disputes.detail', params: { disputeId: item.dispute_id , salesChannelId} }\\\">\\n                                        {{ item.dispute_id }}\\n                                    </router-link>\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_disputes_list_content_grid_column_dispute_life_cycle_stage %}\\n                                <template #column-dispute_life_cycle_stage=\\\"{ item }\\\">\\n                                    <div v-if=\\\"item.dispute_life_cycle_stage === 'INQUIRY'\\\"\\n                                          class=\\\"swag-paypal-disputes-list__stage-inquiry\\\">\\n                                        {{ formatTechnicalText(item.dispute_life_cycle_stage) }}\\n                                    </div>\\n                                    <div v-else\\n                                          class=\\\"swag-paypal-disputes-list__stage-other\\\">\\n                                        {{ formatTechnicalText(item.dispute_life_cycle_stage) }}\\n                                    </div>\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_disputes_list_content_grid_column_dispute_amount %}\\n                                <template #column-dispute_amount=\\\"{ item }\\\">\\n                                    {{ item.dispute_amount.value }} {{ item.dispute_amount.currency_code }}\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_disputes_list_content_grid_pagination %}\\n                                <template #pagination>\\n                                    <sw-pagination\\n                                        :page=\\\"page\\\"\\n                                        :limit=\\\"limit\\\"\\n                                        :total=\\\"total\\\"\\n                                        @page-change=\\\"onPageChange\\\">\\n                                    </sw-pagination>\\n                                </template>\\n                            {% endblock %}\\n\\n                        </sw-data-grid>\\n                    {% endblock %}\\n\\n                    {% block swag_paypal_disputes_list_content_empty_state %}\\n                        <sw-empty-state\\n                            v-if=\\\"disputes.length === 0\\\"\\n                            :title=\\\"$tc('swag-paypal-disputes.list.emptyState.title')\\\"\\n                            :subline=\\\"$tc('swag-paypal-disputes.list.emptyState.subline')\\\"\\n                            icon=\\\"default-communication-speech-bubbles\\\"\\n                            color=\\\"#F88962\\\">\\n                        </sw-empty-state>\\n                    {% endblock %}\\n\\n                </template>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_paypal_disputes_list_sidebar %}\\n            <template #sidebar>\\n                <sw-sidebar class=\\\"swag-paypal-disputes-list__sidebar\\\">\\n\\n                    {% block swag_paypal_disputes_list_sidebar_refresh %}\\n                        <sw-sidebar-item\\n                            icon=\\\"default-arrow-360-left\\\"\\n                            :title=\\\"$tc('swag-paypal-disputes.list.titleSidebarItemRefresh')\\\"\\n                            @click=\\\"onRefresh\\\">\\n                        </sw-sidebar-item>\\n                    {% endblock %}\\n\\n                    {% block swag_paypal_disputes_list_sidebar_filter %}\\n                        <sw-sidebar-item icon=\\\"default-action-filter\\\"\\n                                         :title=\\\"$tc('swag-paypal-disputes.list.titleSidebarItemFilter')\\\">\\n\\n                            {% block swag_paypal_disputes_list_sidebar_filter_items %}\\n                                {% block swag_paypal_disputes_list_sidebar_filter_sales_channel %}\\n                                    <sw-sales-channel-switch :label=\\\"$tc('sw-settings.system-config.labelSalesChannelSelect')\\\"\\n                                                             @change-sales-channel-id=\\\"onSalesChannelChanged\\\">\\n                                    </sw-sales-channel-switch>\\n                                {% endblock %}\\n\\n                                {% block swag_paypal_disputes_list_sidebar_filter_dispute_state %}\\n                                    <sw-multi-select\\n                                        :label=\\\"$tc('swag-paypal-disputes.common.status')\\\"\\n                                        :options=\\\"disputeStates\\\"\\n                                        :value=\\\"disputeStateFilter\\\"\\n                                        @change=\\\"onChangeDisputeStateFilter\\\">\\n                                    </sw-multi-select>\\n                                {% endblock %}\\n                            {% endblock %}\\n\\n                        </sw-sidebar-item>\\n                    {% endblock %}\\n\\n                </sw-sidebar>\\n            </template>\\n        {% endblock %}\\n\\n    </sw-page>\\n{% endblock %}\\n\";","const { Component } = Shopware;\n\nComponent.extend('swag-paypal-pos-url-field', 'sw-url-field', {\n    props: {\n        error: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n    },\n\n    watch: {\n        error: {\n            handler() {\n                this.errorUrl = this.error;\n\n                if (this.error === null || this.error === 'undefined') {\n                    this.checkInput(this.currentValue);\n                }\n            },\n            immediate: true,\n        },\n\n        errorUrl() {\n            if (this.errorUrl === null || this.errorUrl === 'undefined') {\n                this.errorUrl = this.error;\n            }\n        },\n    },\n\n    methods: {\n        checkInput(inputValue) {\n            this.currentValue = inputValue;\n            const urlPattern = /^\\s*https?:\\/\\//;\n            if (urlPattern.test(inputValue)) {\n                this.currentValue = this.currentValue.replace(urlPattern, '');\n            }\n\n            this.validateCurrentValue();\n        },\n\n        changeMode() {\n            // override, so no disabling of SSL is possible\n        },\n    },\n});\n","module.exports = \"{% block swag_paypal_paymemnt_action_void %}\\n    <sw-modal variant=\\\"small\\\"\\n              :title=\\\"$tc(`swag-paypal-payment.modal.title.void`)\\\"\\n              @modal-close=\\\"closeModal\\\">\\n\\n        {% block swag_paypal_paymemnt_action_void_headline %}\\n            <p>{{ $tc('swag-paypal-payment.voidAction.confirm.message') }}</p>\\n        {% endblock %}\\n\\n        <template #modal-footer>\\n\\n            {% block swag_paypal_paymemnt_action_void_cancel_button %}\\n                <sw-button @click=\\\"closeModal\\\">\\n                    {{ $tc('global.default.no') }}\\n                </sw-button>\\n            {% endblock %}\\n\\n            {% block swag_paypal_paymemnt_action_void_confirm_button %}\\n                <sw-button variant=\\\"primary\\\"\\n                           @click=\\\"voidPayment\\\">\\n                    {{ $tc('swag-paypal-payment.voidAction.confirm.button.confirm') }}\\n                </sw-button>\\n            {% endblock %}\\n\\n        </template>\\n\\n        <sw-loader v-if=\\\"isLoading\\\"\\n                   size=\\\"43px\\\">\\n        </sw-loader>\\n    </sw-modal>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_content_card_channel_config_express %}\\n    <sw-card :title=\\\"$tc('swag-paypal.settingForm.express.cardTitle')\\\">\\n\\n        {% block swag_paypal_content_card_channel_config_express_settings %}\\n            <div v-if=\\\"actualConfigData\\\" class=\\\"swag-paypal-settings-express-fields\\\">\\n\\n                {% block swag_paypal_content_card_channel_config_express_settings_detail_enabled %}\\n                    <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.ecsDetailEnabled']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.ecsDetailEnabled']\\\"\\n                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-switch-field name=\\\"SwagPayPal.settings.ecsDetailEnabled\\\"\\n                                             bordered\\n                                             :mapInheritance=\\\"props\\\"\\n                                             :label=\\\"$tc('swag-paypal.settingForm.express.ecsDetailEnabled.label')\\\"\\n                                             :helpText=\\\"$tc('swag-paypal.settingForm.express.ecsDetailEnabled.helpText')\\\"\\n                                             :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                             :value=\\\"props.currentValue\\\"\\n                                             @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-switch-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_express_settings_cart_enabled %}\\n                    <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.ecsCartEnabled']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.ecsCartEnabled']\\\"\\n                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-switch-field name=\\\"SwagPayPal.settings.ecsCartEnabled\\\"\\n                                             bordered\\n                                             :mapInheritance=\\\"props\\\"\\n                                             :label=\\\"$tc('swag-paypal.settingForm.express.ecsCartEnabled.label')\\\"\\n                                             :helpText=\\\"$tc('swag-paypal.settingForm.express.ecsCartEnabled.helpText')\\\"\\n                                             :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                             :value=\\\"props.currentValue\\\"\\n                                             @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-switch-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_express_settings_off_canvas_enabled %}\\n                    <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.ecsOffCanvasEnabled']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.ecsOffCanvasEnabled']\\\"\\n                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-switch-field name=\\\"SwagPayPal.settings.ecsOffCanvasEnabled\\\"\\n                                             bordered\\n                                             :mapInheritance=\\\"props\\\"\\n                                             :label=\\\"$tc('swag-paypal.settingForm.express.ecsOffCanvasEnabled.label')\\\"\\n                                             :helpText=\\\"$tc('swag-paypal.settingForm.express.ecsOffCanvasEnabled.helpText')\\\"\\n                                             :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                             :value=\\\"props.currentValue\\\"\\n                                             @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-switch-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n\\n                {% block swag_paypal_content_card_channel_config_express_settings_login_enabled %}\\n                    <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.ecsLoginEnabled']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.ecsLoginEnabled']\\\"\\n                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-switch-field name=\\\"SwagPayPal.settings.ecsLoginEnabled\\\"\\n                                             bordered\\n                                             :mapInheritance=\\\"props\\\"\\n                                             :label=\\\"$tc('swag-paypal.settingForm.express.ecsLoginEnabled.label')\\\"\\n                                             :helpText=\\\"$tc('swag-paypal.settingForm.express.ecsLoginEnabled.helpText')\\\"\\n                                             :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                             :value=\\\"props.currentValue\\\"\\n                                             @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-switch-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_express_settings_listing_enabled %}\\n                    <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.ecsListingEnabled']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.ecsListingEnabled']\\\"\\n                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-switch-field name=\\\"SwagPayPal.settings.ecsListingEnabled\\\"\\n                                             bordered\\n                                             :mapInheritance=\\\"props\\\"\\n                                             :label=\\\"$tc('swag-paypal.settingForm.express.ecsListingEnabled.label')\\\"\\n                                             :helpText=\\\"$tc('swag-paypal.settingForm.express.ecsListingEnabled.helpText')\\\"\\n                                             :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                             :value=\\\"props.currentValue\\\"\\n                                             @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-switch-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_express_settings_button_color %}\\n                    <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.ecsButtonColor']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.ecsButtonColor']\\\"\\n                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\"\\n                        :label=\\\"$tc('swag-paypal.settingForm.express.ecsButtonColor.label')\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-single-select name=\\\"SwagPayPal.settings.ecsButtonColor\\\"\\n                                              labelProperty=\\\"name\\\"\\n                                              valueProperty=\\\"id\\\"\\n                                              :options=\\\"buttonColorOptions\\\"\\n                                              :isInherited=\\\"props.isInherited\\\"\\n                                              :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                              :value=\\\"props.currentValue\\\"\\n                                              @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-single-select>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_express_settings_button_shape %}\\n                    <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.ecsButtonShape']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.ecsButtonShape']\\\"\\n                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\"\\n                        :label=\\\"$tc('swag-paypal.settingForm.express.ecsButtonShape.label')\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-single-select name=\\\"SwagPayPal.settings.ecsButtonShape\\\"\\n                                              labelProperty=\\\"name\\\"\\n                                              valueProperty=\\\"id\\\"\\n                                              :options=\\\"buttonShapeOptions\\\"\\n                                              :isInherited=\\\"props.isInherited\\\"\\n                                              :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                              :value=\\\"props.currentValue\\\"\\n                                              @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-single-select>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_express_settings_submit_cart %}\\n                    <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.ecsSubmitCart']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.ecsSubmitCart']\\\"\\n                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-switch-field name=\\\"SwagPayPal.settings.ecsSubmitCart\\\"\\n                                             bordered\\n                                             :mapInheritance=\\\"props\\\"\\n                                             :label=\\\"$tc('swag-paypal.settingForm.express.ecsSubmitCart.label')\\\"\\n                                             :helpText=\\\"$tc('swag-paypal.settingForm.express.ecsSubmitCart.helpText')\\\"\\n                                             :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                             :value=\\\"props.currentValue\\\"\\n                                             @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-switch-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_express_settings_button_locale %}\\n                    <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.ecsButtonLanguageIso']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.ecsButtonLanguageIso']\\\"\\n                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <swag-paypal-locale-field name=\\\"SwagPayPal.settings.ecsButtonLanguageIso\\\"\\n                                                    :mapInheritance=\\\"props\\\"\\n                                                    :label=\\\"$tc('swag-paypal.settingForm.express.ecsButtonLanguageIso.label')\\\"\\n                                                    :helpText=\\\"$tc('swag-paypal.settingForm.express.ecsButtonLanguageIso.helpText')\\\"\\n                                                    :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                                    :value=\\\"props.currentValue\\\"\\n                                                    @change=\\\"props.updateCurrentValue\\\"\\n                                                    @preventSave=\\\"preventSave\\\">\\n                            </swag-paypal-locale-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","const { Mixin } = Shopware;\n\nMixin.register('swag-paypal-pos-log-label', {\n    methods: {\n        /**\n         * Returns the corresponding sw-label variant for a Zettle log\n         *\n         * @param {Number} level\n         * @returns {string}\n         */\n        getLabelVariant(level) {\n            if (level >= 400) {\n                return 'danger';\n            }\n\n            if (level >= 300) {\n                return 'warning';\n            }\n\n            if (level > 200) {\n                return 'info';\n            }\n\n            return 'success';\n        },\n\n        /**\n         * Returns the corresponding translation path for a Zettle log\n         *\n         * @param {Number} level\n         * @returns {string}\n         */\n        getLabel(level) {\n            if (level >= 300) {\n                return 'swag-paypal-pos.detail.logs.states.failed';\n            }\n\n            return 'swag-paypal-pos.detail.logs.states.success';\n        },\n    },\n});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-wizard-finish.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7a871ea0\", content, true, {});","module.exports = \"{% block swag_paypal_pos_continue_setup %}\\n    <sw-card :title=\\\"$tc('swag-paypal-pos.detail.overview.continueSetup.cardTitle')\\\">\\n\\n        {% block swag_paypal_pos_continue_setup_container %}\\n            <div class=\\\"swag-paypal-pos__continue-setup\\\">\\n\\n                {% block swag_paypal_pos_continue_setup_container_headline %}\\n                    <h6>{{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.headline') }}</h6>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_continue_setup_container_firstLine %}\\n                    <p>{{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.firstLine') }}</p>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_continue_setup_container_secondLine %}\\n                    <p>{{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.secondLine') }}</p>\\n                {% endblock %}\\n\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_continue_setup_button %}\\n            <sw-button variant=\\\"ghost\\\"\\n                       @click=\\\"onContinueSetup\\\">\\n                {{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.headline') }}\\n            </sw-button>\\n        {% endblock %}\\n\\n    </sw-card>\\n{% endblock %}\\n\";","module.exports = \"<svg width=\\\"34\\\" height=\\\"24\\\" viewBox=\\\"0 0 34 24\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"0.5\\\" y=\\\"0.5\\\" width=\\\"33\\\" height=\\\"23\\\" rx=\\\"3.5\\\" fill=\\\"#0071C0\\\" stroke=\\\"#D1D9E0\\\"></rect><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M14.614 18.4482L14.8347 16.9991L14.3431 16.9873H11.9951L13.6268 6.29364C13.6319 6.26126 13.6484 6.2312 13.6724 6.20981C13.6965 6.18843 13.7272 6.1767 13.7594 6.1767H17.7184C19.0328 6.1767 19.9398 6.45933 20.4133 7.01727C20.6353 7.27902 20.7767 7.55261 20.8452 7.85357C20.9169 8.16945 20.9181 8.54679 20.8481 9.00709L20.843 9.04057V9.33555L21.0651 9.46557C21.252 9.56809 21.4006 9.6854 21.5145 9.81969C21.7044 10.0435 21.8272 10.328 21.8791 10.6652C21.9328 11.0119 21.9151 11.4247 21.8272 11.892C21.7259 12.4294 21.5622 12.8975 21.341 13.2805C21.1376 13.6334 20.8785 13.9262 20.5708 14.153C20.277 14.3685 19.928 14.5321 19.5333 14.6368C19.1509 14.7397 18.7149 14.7917 18.2367 14.7917H17.9286C17.7083 14.7917 17.4943 14.8737 17.3263 15.0207C17.1579 15.1707 17.0465 15.3758 17.0123 15.6L16.989 15.7305L16.599 18.2847L16.5814 18.3784C16.5767 18.4081 16.5686 18.4229 16.5568 18.4329C16.5463 18.4421 16.5311 18.4482 16.5164 18.4482H14.614\\\" fill=\\\"#28356A\\\"></path><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M21.2761 9.07465C21.2644 9.15273 21.2508 9.23252 21.2356 9.31451C20.7136 12.0852 18.9273 13.0423 16.646 13.0423H15.4845C15.2055 13.0423 14.9703 13.2516 14.9269 13.5361L14.1638 18.5394C14.1356 18.7262 14.2748 18.8945 14.4571 18.8945H16.5173C16.7612 18.8945 16.9684 18.7113 17.0069 18.4626L17.0271 18.3545L17.415 15.8103L17.4399 15.6707C17.4779 15.4212 17.6856 15.2379 17.9295 15.2379H18.2376C20.2336 15.2379 21.7961 14.4004 22.2528 11.9765C22.4435 10.964 22.3448 10.1186 21.84 9.52396C21.6873 9.3447 21.4977 9.19586 21.2761 9.07465\\\" fill=\\\"#99C6E5\\\"></path><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M20.7298 8.84962C20.65 8.82555 20.5677 8.8038 20.4833 8.78413C20.3984 8.76494 20.3115 8.74796 20.222 8.73305C19.9089 8.68075 19.5656 8.65594 19.1981 8.65594H16.0951C16.0186 8.65594 15.946 8.67379 15.8811 8.70604C15.7379 8.77716 15.6316 8.9172 15.6058 9.08864L14.9457 13.4102L14.9268 13.5362C14.9701 13.2517 15.2053 13.0424 15.4843 13.0424H16.6459C18.9271 13.0424 20.7134 12.0847 21.2354 9.31457C21.2511 9.23258 21.2642 9.15279 21.2759 9.07471C21.1438 9.00224 21.0008 8.94029 20.8467 8.8875C20.8087 8.87443 20.7694 8.86184 20.7298 8.84962\\\" fill=\\\"#CCE2F2\\\"></path><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M15.6056 9.08862C15.6314 8.91718 15.7377 8.77715 15.8809 8.70652C15.9462 8.67414 16.0184 8.6563 16.0948 8.6563H19.1979C19.5654 8.6563 19.9086 8.68123 20.2218 8.73353C20.3113 8.74831 20.3982 8.76542 20.4831 8.7846C20.5675 8.80415 20.6498 8.82603 20.7296 8.84998C20.7692 8.8622 20.8085 8.8749 20.8469 8.88749C21.0009 8.94028 21.1441 9.00272 21.2761 9.07469C21.4315 8.05082 21.2748 7.3537 20.7393 6.72245C20.1488 6.0274 19.0831 5.72998 17.7194 5.72998H13.7603C13.4817 5.72998 13.2441 5.9393 13.2011 6.22426L11.5521 17.0279C11.5196 17.2416 11.679 17.4344 11.8876 17.4344H14.3318L15.6056 9.08862\\\" fill=\\\"white\\\"></path></svg>\"","module.exports = \"{% block swag_paypal_pos_wizard_connection_disconnect %}\\n    <div class=\\\"swag-paypal-pos-wizard-connection-disconnect\\\">\\n\\n        {% block swag_paypal_pos_wizard_connection_disconnect_headline_content %}\\n            <div class=\\\"swag-paypal-pos-wizard-connection-disconnect__content\\\">\\n\\n                {% block swag_paypal_pos_wizard_connection_disconnect_icon %}\\n                    <div class=\\\"swag-paypal-pos-wizard-connection-disconnect__icon-wrapper\\\">\\n                        <sw-icon class=\\\"swag-paypal-pos-wizard-connection-disconnect__icon\\\"\\n                                 name=\\\"default-badge-warning\\\"\\n                                 size=\\\"80px\\\"\\n                                 color=\\\"#de294c\\\">\\n                        </sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_wizard_connection_disconnect_headline %}\\n                    <div class=\\\"swag-paypal-pos-wizard-connection-disconnect__headline\\\">\\n                        {{ $tc('swag-paypal-pos.wizard.connectionDisconnect.headline') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_wizard_connection_disconnect_info %}\\n                    <div class=\\\"swag-paypal-pos-wizard-connection-disconnect__info\\\">\\n                        {{ $tc('swag-paypal-pos.wizard.connectionDisconnect.info') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_wizard_connection_disconnect_user %}\\n                    <sw-card class=\\\"swag-paypal-pos-wizard-connection-disconnect__user\\\"\\n                             :isLoading=\\\"isFetchingInformation\\\">\\n                        <sw-container class=\\\"swag-paypal-pos-wizard-connection-disconnect__user-container\\\"\\n                                      columns=\\\"30px auto 150px\\\"\\n                                      align=\\\"center\\\"\\n                                      gap=\\\"30px\\\">\\n\\n                            {% block swag_paypal_pos_wizard_connection_disconnect_user_avatar %}\\n                                <sw-avatar\\n                                    class=\\\"swag-paypal-pos-wizard-connection-disconnect__user-avatar\\\"\\n                                    size=\\\"40px\\\"\\n                                    :firstName=\\\"posUser.firstName\\\"\\n                                    :lastName=\\\"posUser.lastName\\\">\\n                                </sw-avatar>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_pos_wizard_connection_disconnect_user_information %}\\n                                <div class=\\\"swag-paypal-pos-wizard-connection-disconnect__user-info\\\">\\n\\n                                    {% block swag_paypal_pos_wizard_connection_disconnect_user_information_real %}\\n                                        <div class=\\\"swag-paypal-pos-wizard-connection-disconnect__user-info-name\\\">\\n                                            {{ posUser.fullName }}\\n                                        </div>\\n                                        <div class=\\\"swag-paypal-pos-wizard-connection-disconnect__user-info-mail\\\">\\n                                            {{ posUser.mail }}\\n                                        </div>\\n                                    {% endblock %}\\n                                </div>\\n                            {% endblock %}\\n                        </sw-container>\\n                    </sw-card>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_sales_channel_modal_detail_header_icon %}\\n    <span v-if=\\\"isPayPalPosSalesChannel(detailType.id)\\\"\\n          class=\\\"sw-sales-channel-modal-detail__header-icon\\\">\\n         <img class=\\\"swag-paypal-pos-modal-detail__icon\\\"\\n              :src=\\\"'swagpaypal/static/img/paypal-pos-logo.svg' | asset\\\">\\n    </span>\\n\\n    <template v-else>\\n        {% parent %}\\n    </template>\\n{% endblock %}\\n\\n{% block sw_sales_channel_modal_detail_header_meta %}\\n    <div v-if=\\\"isPayPalPosSalesChannel(detailType.id)\\\"\\n         class=\\\"sw-sales-channel-modal-detail__header-meta\\\">\\n        <h4 class=\\\"sw-sales-channel-modal-detail__header-name\\\">\\n            {{ detailType.translated.name }}\\n        </h4>\\n        <div class=\\\"sw-sales-channel-modal-detail__header-manufacturer\\\">\\n            {{ $tc('swag-paypal-pos.general.salesChannelDetailDescription.manufacturer') }}\\n        </div>\\n    </div>\\n\\n    <template v-else>\\n        {% parent %}\\n    </template>\\n{% endblock %}\\n\\n{% block sw_sales_channel_modal_detail_description %}\\n    <template v-if=\\\"isPayPalPosSalesChannel(detailType.id)\\\">\\n        <h4 class=\\\"sw-sales-channel-modal-detail__description-long-title\\\">\\n            {{ $tc('swag-paypal-pos.general.salesChannelDetailDescription.title') }}\\n        </h4>\\n        <div v-if=\\\"detailType.translated.descriptionLong\\\"\\n             class=\\\"sw-sales-channel-modal-detail__description-long-text\\\">\\n            {{ detailType.translated.descriptionLong }}\\n        </div>\\n        <div v-else\\n             class=\\\"sw-sales-channel-modal-detail__description-long-text\\\">\\n            {{ detailType.translated.description }}\\n        </div>\\n    </template>\\n\\n    <template v-else>\\n        {% parent %}\\n    </template>\\n{% endblock %}\\n\";","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7922ea65\", content, true, {});","module.exports = \"<svg width=\\\"39px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 39 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><title>Page 1</title><desc>Created with Sketch.</desc><defs><polygon id=\\\"path-1\\\" points=\\\"0 0.0330469345 12.6787834 0.0330469345 12.6787834 12.7180364 0 12.7180364\\\"></polygon><polygon id=\\\"path-3\\\" points=\\\"0.0103575649 0.00128879493 1.81575683 0.00128879493 1.81575683 2.2832981 0.0103575649 2.2832981\\\"></polygon></defs><g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><g id=\\\"SPB_&amp;_AltPay_NewAssets\\\" transform=\\\"translate(-100.000000, -159.000000)\\\"><g id=\\\"Page-1\\\" transform=\\\"translate(100.000000, 159.000000)\\\"><path d=\\\"M30.5812744,12.0000152 L27.4748661,12.0000152 C27.129394,12.0000152 26.8482796,11.7245987 26.8482796,11.3798207 C26.8482796,11.0350427 27.129394,10.7315163 27.4748661,10.7315163 L32.2041612,10.7315163 L32.2041612,8.39747822 L27.4748661,8.39747822 C25.824238,8.39747822 24.4812484,9.74381226 24.4812484,11.3911357 C24.4812484,13.0384592 25.824238,14.3847932 27.4748661,14.3847932 L30.5390793,14.3847932 C30.8846021,14.3847932 31.1657165,14.6590934 31.1657165,15.0038715 C31.1657165,15.3486495 30.8846021,15.6025522 30.5390793,15.6025522 L23.9683147,15.6025522 C23.4104473,16.6680913 22.8679974,17.5814106 21.7668179,18.0380702 L30.5812744,18.0380702 C32.2041612,18.0146791 33.5316827,16.6405903 33.5316827,15.0078292 C33.5316827,13.3751696 32.2041612,12.0234063 30.5812744,12.0000152\\\" id=\\\"Fill-1\\\" fill=\\\"#71706F\\\"></path><path d=\\\"M18.6731848,15.6025522 L16.2795788,15.6025522 L16.2795788,13.1992034 C16.2795788,11.8562182 17.3483005,10.7635839 18.6731848,10.7635839 C19.9980691,10.7635839 21.0759195,11.8562182 21.0759195,13.1992034 C21.0759195,14.5422393 19.9980691,15.6025522 18.6731848,15.6025522 M18.6731848,8.39747822 C16.0403551,8.39747822 13.8959637,10.5557023 13.8959637,13.2076262 L13.8959637,13.3091061 L13.8959637,23.2135459 L16.2795788,23.2135459 L16.2795788,18.0380702 L18.6682147,18.0380702 C21.3010951,18.0380702 23.4379299,15.8511273 23.4379299,13.1992034 C23.4379299,10.5472795 21.3060651,8.39747822 18.6731848,8.39747822\\\" id=\\\"Fill-3\\\" fill=\\\"#71706F\\\"></path><g id=\\\"Group-7\\\" transform=\\\"translate(0.000000, 6.842233)\\\"><mask id=\\\"mask-2\\\" fill=\\\"white\\\"><use xlink:href=\\\"#path-1\\\"></use></mask><g id=\\\"Clip-6\\\"></g><path d=\\\"M6.34967672,11.1958376 C4.09589259,11.1958376 2.20112146,9.58905539 1.68833992,7.48994334 C1.68833992,7.48994334 1.54020078,6.7959222 1.54020078,6.3389074 C1.54020078,5.8818926 1.68042835,5.18071712 1.68042835,5.18071712 C2.19686138,3.08678055 4.08935033,1.52754165 6.33943225,1.52754165 C8.98580286,1.52754165 11.1573269,3.67982918 11.1573269,6.32744017 L11.1573269,7.49182072 L4.12642315,7.49182072 C4.54162861,8.30366004 5.38137113,8.76031966 6.34967672,8.76031966 L12.6701111,8.76031966 L12.6787834,1.89423932 C12.6787834,0.870560677 11.8417287,0.0330469345 10.8185493,0.0330469345 L1.86031521,0.0330469345 C0.837135761,0.0330469345 -2.02860858e-05,0.845190698 -2.02860858e-05,1.86886934 L-2.02860858e-05,10.831474 C-2.02860858e-05,11.8551526 0.837135761,12.7180364 1.86031521,12.7180364 L10.8185493,12.7180364 C11.7367482,12.7180364 12.5027001,12.0584169 12.6506871,11.1958376 L6.34967672,11.1958376 Z\\\" id=\\\"Fill-5\\\" fill=\\\"#C8036F\\\" mask=\\\"url(#mask-2)\\\"></path></g><path d=\\\"M6.33943732,10.6481099 C5.37483394,10.6481099 4.53595358,11.238926 4.11907451,12.0000254 L8.55990156,12.0000254 C8.1430225,11.238926 7.30419285,10.6481099 6.33943732,10.6481099\\\" id=\\\"Fill-8\\\" fill=\\\"#C8036F\\\"></path><path d=\\\"M10.396619,3.96072558 C10.396619,1.77327526 8.57959428,1.52219873e-05 6.33823537,1.52219873e-05 C4.134,1.52219873e-05 2.34126788,1.71527949 2.28238752,3.85259873 C2.28142393,3.86163044 2.28218466,3.87040846 2.28218466,3.87969387 L2.28218466,5.0699518 C2.28218466,5.21232812 2.39806892,5.35308076 2.54392588,5.35308076 L4.03703251,5.35308076 C4.18288947,5.35308076 4.31079324,5.21232812 4.31079324,5.0699518 L4.31079324,3.96072558 C4.31079324,2.86839577 5.22011704,1.97968541 6.33940182,1.97968541 C7.45868661,1.97968541 8.3680104,2.86839577 8.3680104,3.96072558 L8.3680104,5.0699518 C8.3680104,5.21232812 8.486329,5.35308076 8.63218596,5.35308076 L10.1253433,5.35308076 C10.2712003,5.35308076 10.396619,5.21232812 10.396619,5.0699518 L10.396619,3.96072558 Z\\\" id=\\\"Fill-10\\\" fill=\\\"#C8036F\\\"></path><path d=\\\"M20.7598572,20.7474063 C20.7598572,20.8523366 20.8407987,20.9002858 20.9277753,20.9002858 C21.0206856,20.9002858 21.1436192,20.8253429 21.1436192,20.687381 C21.1436192,20.5884888 21.0716036,20.5345015 20.9907129,20.5345015 C20.8827909,20.5345015 20.7598572,20.6034063 20.7598572,20.7474063 Z M20.0403098,20.7504 C20.0403098,20.8523366 20.1183098,20.9002858 20.2022434,20.9002858 C20.3071732,20.9002858 20.4211303,20.8253429 20.4211303,20.6843873 C20.4211303,20.5854444 20.3550991,20.5345015 20.2681732,20.5345015 C20.160302,20.5345015 20.0403098,20.6034063 20.0403098,20.7504 Z M21.3474437,21.133233 L21.1315997,22.3559645 C21.0236778,22.9739772 20.6189196,23.2570047 20.0702824,23.2570047 C19.6056296,23.2570047 19.2458559,22.9539856 19.3508364,22.3569793 L19.5666296,21.133233 L19.8994736,21.133233 L19.6835282,22.3559645 C19.6175984,22.7370723 19.7885087,22.9540364 20.1122746,22.9540364 C20.4450679,22.9540364 20.7298845,22.7559983 20.7988065,22.3569793 L21.0146505,21.133233 L21.3474437,21.133233 Z\\\" id=\\\"Fill-12\\\" fill=\\\"#71706F\\\"></path><path d=\\\"M21.9179189,22.5590867 C21.9059501,22.8050233 22.0647901,22.9639915 22.2956458,22.9639915 C22.5864468,22.9639915 22.8682205,22.7389598 22.8862244,22.3971247 C22.898244,22.1481438 22.736361,22.0011501 22.511439,22.0011501 C22.2236302,22.0011501 21.9358213,22.2321691 21.9179189,22.5590867 Z M22.1517667,21.1331924 L22.0018525,21.9781142 C22.1307199,21.8042283 22.388556,21.7122368 22.5684429,21.7122368 C22.9401854,21.7122368 23.1980216,21.9302156 23.1980216,22.3350698 C23.1980216,22.9079746 22.7992479,23.2524989 22.2896614,23.2524989 C22.0917706,23.2524989 21.9238525,23.178926 21.8219657,22.9930148 L21.7650125,23.2135307 L21.4741607,23.2135307 L21.8429111,21.1331924 L22.1517667,21.1331924 Z\\\" id=\\\"Fill-14\\\" fill=\\\"#71706F\\\"></path><path d=\\\"M24.7516112,22.3509666 C24.7755995,22.0972668 24.6256853,21.994011 24.3768257,21.994011 C24.1520559,21.994011 23.9451886,22.0972668 23.8551691,22.3509666 L24.7516112,22.3509666 Z M23.804251,22.6046664 C23.7922315,22.8076262 23.9511222,22.9733429 24.2209779,22.9733429 C24.3708921,22.9733429 24.5686814,22.9146875 24.6766034,22.812751 L24.8445215,23.006882 C24.6616931,23.1747298 24.3918375,23.2582985 24.1640247,23.2582985 C23.7383212,23.2582985 23.4894616,23.0032288 23.4894616,22.6132922 C23.4894616,22.0943746 23.8971612,21.7076854 24.4188179,21.7076854 C24.895541,21.7076854 25.1653459,21.9957869 25.0034629,22.6046664 L23.804251,22.6046664 Z\\\" id=\\\"Fill-16\\\" fill=\\\"#71706F\\\"></path><path d=\\\"M25.8283814,21.7420871 L25.8133697,21.9376896 C25.9573502,21.7485311 26.131202,21.7099687 26.290042,21.7099687 C26.4339718,21.7099687 26.5628391,21.7610638 26.6318118,21.8360068 L26.4459913,22.1059941 C26.3800108,22.0461717 26.314081,22.0161844 26.2001239,22.0161844 C25.9872215,22.0161844 25.7774633,22.1438968 25.729436,22.4168778 L25.5885999,23.2135459 L25.2797442,23.2135459 L25.5405726,21.7420871 L25.8283814,21.7420871 Z\\\" id=\\\"Fill-18\\\" fill=\\\"#71706F\\\"></path><polygon id=\\\"Fill-20\\\" fill=\\\"#71706F\\\" points=\\\"28.1192941 21.7420871 28.275142 22.9057573 28.8387909 21.7420871 29.1835529 21.7420871 28.4100952 23.2135459 28.0473293 23.2135459 27.900458 22.2428397 27.6635672 22.7250723 27.4057818 23.2135459 27.0460081 23.2135459 26.7851797 21.7420871 27.1329847 21.7420871 27.285891 22.9057573 27.8524307 21.7420871\\\"></polygon><path d=\\\"M30.5274503,22.3509666 C30.5513879,22.0972668 30.4015244,21.994011 30.1526649,21.994011 C29.9278951,21.994011 29.7210277,22.0972668 29.6310082,22.3509666 L30.5274503,22.3509666 Z M29.5800901,22.6046664 C29.5680706,22.8076262 29.7269614,22.9733429 29.996817,22.9733429 C30.1467312,22.9733429 30.3445205,22.9146875 30.4524425,22.812751 L30.6203606,23.006882 C30.4375322,23.1747298 30.1676766,23.2582985 29.9398638,23.2582985 C29.5141603,23.2582985 29.2653008,23.0032288 29.2653008,22.6132922 C29.2653008,22.0943746 29.6730004,21.7076854 30.1946571,21.7076854 C30.6713801,21.7076854 30.941185,21.9957869 30.7793021,22.6046664 L29.5800901,22.6046664 Z\\\" id=\\\"Fill-22\\\" fill=\\\"#71706F\\\"></path><path d=\\\"M31.3524449,21.3412364 C31.3524449,21.4461666 31.4304449,21.5003569 31.5144293,21.5003569 C31.63432,21.5003569 31.7452342,21.4222173 31.7452342,21.2753759 C31.7452342,21.1762808 31.6702264,21.119249 31.5892849,21.119249 C31.4783707,21.119249 31.3524449,21.1913505 31.3524449,21.3412364 Z M31.625242,21.742082 L31.3645151,23.2135408 L31.0556594,23.2135408 L31.3164878,21.742082 L31.625242,21.742082 Z\\\" id=\\\"Fill-24\\\" fill=\\\"#71706F\\\"></path><path d=\\\"M32.9955925,22.1060753 C32.8996393,21.9981006 32.7767563,21.9681133 32.629885,21.9681133 C32.4259085,21.9681133 32.2820801,22.0371704 32.2820801,22.1661006 C32.2820801,22.2740753 32.398928,22.3191831 32.5728811,22.3341006 C32.8426861,22.3580499 33.1874481,22.4481133 33.1154832,22.8290182 C33.0645651,23.1049421 32.7887251,23.266904 32.4049631,23.266904 C32.1651815,23.266904 31.9342752,23.2129167 31.7784273,22.9939738 L31.9792596,22.7750309 C32.0901737,22.9279104 32.2850723,22.9909801 32.4589241,22.9939738 C32.6057953,22.9939738 32.7797485,22.9399865 32.806729,22.8020245 C32.8337095,22.6700499 32.7167602,22.619107 32.5009163,22.5979992 C32.2490645,22.5739992 31.9733259,22.481145 31.9733259,22.202126 C31.9733259,21.833145 32.3719475,21.7042148 32.6718265,21.7042148 C32.8996393,21.7042148 33.0675573,21.7551577 33.2055027,21.9022021 L32.9955925,22.1060753 Z\\\" id=\\\"Fill-26\\\" fill=\\\"#71706F\\\"></path><path d=\\\"M33.9703034,21.7420871 L33.8294672,22.534493 C33.7844828,22.7865184 33.8984399,22.9606579 34.1562254,22.9606579 C34.3990498,22.9606579 34.6059172,22.7593725 34.6478079,22.5134359 L34.7827104,21.7420871 L35.0915153,21.7420871 L34.8307884,23.2135459 L34.5519562,23.2135459 L34.5729016,23.0003366 C34.3990498,23.1652922 34.2280888,23.2430765 34.0213229,23.2430765 C33.658557,23.2430765 33.442713,22.982882 33.5206116,22.5361167 L33.6615492,21.7420871 L33.9703034,21.7420871 Z\\\" id=\\\"Fill-28\\\" fill=\\\"#71706F\\\"></path><path d=\\\"M36.4472345,23.2135459 L36.588172,22.4259603 C36.633055,22.1709412 36.5462813,22.0020279 36.2644061,22.0020279 C36.0185895,22.0020279 35.8116207,22.199863 35.7697299,22.4428059 L35.6348274,23.2135459 L35.3260225,23.2135459 L35.5869016,21.7420871 L35.8686246,21.7420871 L35.8476792,21.957123 C36.0185895,21.7981548 36.1953827,21.7197615 36.3872384,21.7197615 C36.7470121,21.7197615 36.9809614,21.9701632 36.9000199,22.4231696 L36.7590823,23.2135459 L36.4472345,23.2135459 Z\\\" id=\\\"Fill-30\\\" fill=\\\"#71706F\\\"></path><g id=\\\"Group-34\\\" transform=\\\"translate(37.174252, 21.709040)\\\"><mask id=\\\"mask-4\\\" fill=\\\"white\\\"><use xlink:href=\\\"#path-3\\\"></use></mask><g id=\\\"Clip-33\\\"></g><path d=\\\"M0.406639662,0.85909852 C0.406639662,1.11092093 0.571514824,1.26400338 0.808507022,1.26400338 C1.44691014,1.26400338 1.61787113,0.2832 0.979214434,0.2832 C0.676444603,0.2832 0.406639662,0.508028753 0.406639662,0.85909852 Z M0.319663069,1.70747061 C0.298717685,1.91043044 0.45456554,1.9925277 0.715495319,1.9925277 C0.943358778,1.9925277 1.18922614,1.86522114 1.24617932,1.54134799 L1.291113,1.288663 C1.15621053,1.4776186 0.910343173,1.55220634 0.72756554,1.55220634 C0.349686476,1.55220634 0.085916645,1.32717463 0.085916645,0.91912389 C0.085916645,0.337339535 0.517553836,0.00128879493 1.00619493,0.00128879493 C1.21316372,0.00128879493 1.39903498,0.099572093 1.46501547,0.267572093 L1.51598427,0.0330520085 L1.8157619,0.0330520085 L1.55787503,1.54824863 C1.46202328,2.1092296 1.04524564,2.28331839 0.664526528,2.28331839 C0.208748895,2.28331839 -0.0429507152,2.06265032 0.0198854356,1.70747061 L0.319663069,1.70747061 Z\\\" id=\\\"Fill-32\\\" fill=\\\"#71706F\\\" mask=\\\"url(#mask-4)\\\"></path></g></g></g></g></svg>\"","module.exports = \"{% block swag_paypal_pos %}\\n    <sw-page class=\\\"swag-paypal-pos\\\">\\n\\n        {% block swag_paypal_pos_header %}\\n            <template #smart-bar-header>\\n                <h2>\\n                    {{ $tc('swag-paypal-pos.header') }}\\n                </h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_actions %}\\n            <template #smart-bar-actions>\\n                <sw-button v-for=\\\"button in buttonConfig\\\"\\n                           size=\\\"small\\\"\\n                           :key=\\\"button.key\\\"\\n                           :disabled=\\\"button.disabled\\\"\\n                           :isLoading=\\\"button.isLoading || isLoading\\\"\\n                           :variant=\\\"button.variant\\\"\\n                           @click=\\\"onButtonClick(button.action)\\\">\\n                    {{ button.label }}\\n                </sw-button>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_content %}\\n            <template #content>\\n                <sw-card-view>\\n\\n                    {% block swag_paypal_pos_content_tabs %}\\n                        <sw-tabs v-if=\\\"!isLoading\\\" class=\\\"swag-paypal-pos__tabs\\\">\\n\\n                            {%  block swag_paypal_pos_content_tab_base %}\\n                                <sw-tabs-item :route=\\\"{ name: 'swag.paypal.pos.detail.overview', params: { id: $route.params.id } }\\\"\\n                                              :title=\\\"$tc('swag-paypal-pos.tabTitle.overview')\\\">\\n                                    {{ $tc('swag-paypal-pos.tabTitle.overview') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n\\n                            {%  block swag_paypal_pos_content_tab_synced_products %}\\n                                <sw-tabs-item :route=\\\"{ name: 'swag.paypal.pos.detail.syncedProducts', params: { id: $route.params.id } }\\\"\\n                                              :title=\\\"$tc('swag-paypal-pos.tabTitle.syncedProducts')\\\">\\n                                    {{ $tc('swag-paypal-pos.tabTitle.syncedProducts') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n\\n                            {%  block swag_paypal_pos_content_tab_settings %}\\n                                <sw-tabs-item :route=\\\"{ name: 'swag.paypal.pos.detail.settings', params: { id: $route.params.id } }\\\"\\n                                              :title=\\\"$tc('swag-paypal-pos.tabTitle.settings')\\\">\\n                                    {{ $tc('swag-paypal-pos.tabTitle.settings') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n\\n                            {%  block swag_paypal_pos_content_tab_runs %}\\n                                <sw-tabs-item :route=\\\"{ name: 'swag.paypal.pos.detail.runs', params: { id: $route.params.id } }\\\"\\n                                              :title=\\\"$tc('swag-paypal-pos.tabTitle.runs')\\\">\\n                                    {{ $tc('swag-paypal-pos.tabTitle.runs') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n\\n                            {%  block swag_paypal_pos_content_tab_help %}\\n                                <sw-tabs-item href=\\\"https://www.izettle.com/help/articles/1083274-what-is-pos\\\"\\n                                              target=\\\"_blank\\\"\\n                                              class=\\\"swag-paypal-pos__tab-help\\\"\\n                                              :title=\\\"$tc('swag-paypal-pos.tabTitle.help')\\\">\\n                                    {{ $tc('swag-paypal-pos.tabTitle.help') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n                        </sw-tabs>\\n                    {% endblock %}\\n\\n                    {% block swag_paypal_pos_content_account %}\\n                        <swag-paypal-pos-account :lastRun=\\\"lastRun\\\"\\n                                                 :salesChannel=\\\"salesChannel\\\">\\n                        </swag-paypal-pos-account>\\n                    {% endblock %}\\n\\n                    {% block swag_paypal_pos_content_card %}\\n                        <router-view v-if=\\\"!isLoading\\\"\\n                                     :key=\\\"$route.params.id\\\"\\n                                     :salesChannel=\\\"salesChannel\\\"\\n                                     :cloneSalesChannelId=\\\"cloneSalesChannelId\\\"\\n                                     :lastRun=\\\"lastRun\\\"\\n                                     :lastCompleteRun=\\\"lastCompleteRun\\\"\\n                                     @buttons-update=\\\"updateButtons\\\"\\n                                     @load-sales-channel=\\\"loadSalesChannel\\\"\\n                                     @run-update=\\\"loadLastRun\\\"\\n                                     @update-clone-sales-channel=\\\"updateCloneSalesChannel\\\">\\n                        </router-view>\\n                        <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                    {% endblock %}\\n\\n                    {% block swag_paypal_pos_disclaimer_hero %}\\n                        <sw-card v-show=\\\"!isLoading\\\"\\n                                 class=\\\"swag-paypal-pos__disclaimer-card\\\"\\n                                 :hero=\\\"true\\\">\\n\\n                            {% block swag_paypal_pos_disclaimer_container %}\\n                                <div class=\\\"swag-paypal-pos__disclaimer\\\">\\n\\n                                    {% block swag_paypal_pos_disclaimer_title %}\\n                                        <div class=\\\"swag-paypal-pos__disclaimer-title disclaimer-content\\\">\\n                                            {{ $tc('swag-paypal-pos.detail.disclaimer.headline') }}\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {% block swag_paypal_pos_disclaimer_subtitle %}\\n                                        <div class=\\\"swag-paypal-pos__disclaimer-subtitle disclaimer-content\\\">\\n                                            {{ $tc('swag-paypal-pos.detail.disclaimer.subheadline') }}\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {% block swag_paypal_pos_disclaimer_link %}\\n                                        <a :href=\\\"$tc('swag-paypal-pos.detail.disclaimer.linkTarget')\\\"\\n                                           class=\\\"link swag-paypal-pos__disclaimer-link disclaimer-content\\\"\\n                                           target=\\\"_blank\\\">\\n                                            {{ $tc('swag-paypal-pos.detail.disclaimer.linkText') }}\\n                                        </a>\\n                                    {% endblock %}\\n                                </div>\\n                            {% endblock %}\\n                        </sw-card>\\n                    {% endblock %}\\n                </sw-card-view>\\n            </template>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_payment_action_refund %}\\n    <sw-modal variant=\\\"small\\\"\\n              :title=\\\"$tc(`swag-paypal-payment.modal.title.refund`)\\\"\\n              @modal-close=\\\"$emit('modal-close')\\\">\\n\\n        {% block swag_paypal_payment_action_refund_invoice_select %}\\n            <sw-select-field v-model=\\\"selectedCaptureId\\\"\\n                             :label=\\\"$tc('swag-paypal-payment.refundAction.invoiceSelect.label')\\\"\\n                             @change=\\\"preserveCapture\\\">\\n                <option v-for=\\\"capture in captures\\\"\\n                        :value=\\\"capture.id\\\">\\n                    {{ capture.label }}\\n                </option>\\n            </sw-select-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_refund_invoice_number %}\\n            <swag-paypal-text-field v-model=\\\"refundInvoiceNumber\\\"\\n                                    maxLength=\\\"127\\\"\\n                                    :label=\\\"$tc('swag-paypal-payment.refundAction.refundInvoiceNumber.label')\\\"\\n                                    :placeholder=\\\"$tc('swag-paypal-payment.refundAction.refundInvoiceNumber.placeholder')\\\">\\n            </swag-paypal-text-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_refund_reason %}\\n            <swag-paypal-text-field v-model=\\\"refundReason\\\"\\n                                    maxLength=\\\"30\\\"\\n                                    :label=\\\"$tc('swag-paypal-payment.refundAction.refundReason.label')\\\"\\n                                    :placeholder=\\\"$tc('swag-paypal-payment.refundAction.refundReason.placeholder')\\\">\\n            </swag-paypal-text-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_refund_amount %}\\n            <sw-number-field v-model=\\\"refundAmount\\\"\\n                             :max=\\\"refundableAmount\\\"\\n                             :min=\\\"0\\\"\\n                             :label=\\\"$tc('swag-paypal-payment.refundAction.refundAmount.label')\\\"\\n                             :helpText=\\\"$tc('swag-paypal-payment.refundAction.refundAmount.helpText')\\\">\\n                <template #suffix>\\n                    {{ selectedCapture.currency }}\\n                </template>\\n            </sw-number-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_refund_description %}\\n            <sw-textarea-field v-model=\\\"refundDescription\\\"\\n                               :placeholder=\\\"$tc('swag-paypal-payment.refundAction.refundDescription.placeholder')\\\"\\n                               :label=\\\"$tc('swag-paypal-payment.refundAction.refundDescription.label')\\\">\\n            </sw-textarea-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_refund_confirm_button %}\\n            <template #modal-footer>\\n                <sw-button variant=\\\"primary\\\"\\n                           @click=\\\"refund\\\">\\n                    {{ $tc('swag-paypal-payment.refundAction.confirmButton.text') }}\\n                </sw-button>\\n            </template>\\n        {% endblock %}\\n\\n        <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n    </sw-modal>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-detail-logs.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"507e5e0e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-detail-synced-products.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"83431c8e\", content, true, {});","module.exports = \"{% block swag_paypal_payment_action_capture_v2 %}\\n    <sw-modal variant=\\\"small\\\"\\n              :title=\\\"$tc(`swag-paypal-payment.modal.title.capture`)\\\"\\n              @modal-close=\\\"$emit('modal-close')\\\">\\n\\n        {% block swag_paypal_payment_action_capture_v2_max_amount %}\\n            <sw-text-field v-model=\\\"captureableAmount\\\"\\n                           :label=\\\"$tc('swag-paypal-payment.captureAction.maxAmount')\\\"\\n                           :disabled=\\\"true\\\">\\n                <template #suffix v-if=\\\"currencyCode\\\">\\n                    {{ currencyCode }}\\n                </template>\\n            </sw-text-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_capture_v2_amount %}\\n            <sw-number-field v-model=\\\"captureAmount\\\"\\n                             :max=\\\"captureableAmount\\\"\\n                             :min=\\\"0\\\"\\n                             :label=\\\"$tc('swag-paypal-payment.captureAction.currentAmount')\\\">\\n                <template #suffix v-if=\\\"currencyCode\\\">\\n                    {{ currencyCode }}\\n                </template>\\n            </sw-number-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_capture_v2_invoice_number %}\\n            <swag-paypal-text-field\\n                    v-model=\\\"captureInvoiceNumber\\\"\\n                    maxLength=\\\"127\\\"\\n                    :label=\\\"$tc('swag-paypal-payment.captureAction.captureInvoiceNumber.label')\\\"\\n                    :placeholder=\\\"$tc('swag-paypal-payment.captureAction.captureInvoiceNumber.placeholder')\\\">\\n            </swag-paypal-text-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_capture_v2_note_to_payer %}\\n            <swag-paypal-textarea-field\\n                    v-model=\\\"captureNoteToPayer\\\"\\n                    maxLength=\\\"255\\\"\\n                    :placeholder=\\\"$tc('swag-paypal-payment.captureAction.captureNoteToPayer.placeholder')\\\"\\n                    :label=\\\"$tc('swag-paypal-payment.captureAction.captureNoteToPayer.label')\\\">\\n            </swag-paypal-textarea-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_capture_v2_is_final_capture %}\\n            <sw-checkbox-field\\n                    v-model=\\\"isFinalCapture\\\"\\n                    :label=\\\"$tc('swag-paypal-payment.captureAction.isFinal')\\\">\\n            </sw-checkbox-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_capture_v2_hint %}\\n            <sw-alert v-if=\\\"showHint\\\">\\n                {{ $tc('swag-paypal-payment.captureAction.isFinalHint') }}\\n            </sw-alert>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_capture_v2_confirm_button %}\\n            <template #modal-footer>\\n                <sw-button variant=\\\"primary\\\"\\n                           @click=\\\"capture\\\">\\n                    {{ $tc('swag-paypal-payment.captureAction.button.text') }}\\n                </sw-button>\\n            </template>\\n        {% endblock %}\\n\\n        <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n    </sw-modal>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_content_card_channel_config_checkout %}\\n<sw-card\\n    class=\\\"sw-card--grid\\\"\\n    position-identifier=\\\"swag-paypal-checkout\\\"\\n    :title=\\\"$tc('swag-paypal.settingForm.checkout.cardTitle')\\\"\\n>\\n    {% block swag_paypal_content_card_channel_config_checkout_container %}\\n    <div\\n        v-if=\\\"actualConfigData\\\"\\n        class=\\\"swag-paypal-checkout\\\"\\n    >\\n\\n        {% block swag_paypal_content_card_channel_config_checkout_container_image %}\\n        <img\\n            class=\\\"swag-paypal-checkout__image\\\"\\n            :src=\\\"'swagpaypal/static/img/paypal-logo.svg' | asset\\\"\\n            :alt=\\\"$tc('swag-paypal.settingForm.checkout.appImageAlt')\\\"\\n        >\\n        {% endblock %}\\n\\n        {% block swag_paypal_content_card_channel_config_checkout_container_description %}\\n        <p class=\\\"swag-paypal-checkout__description\\\">\\n            {{ $tc('swag-paypal.settingForm.checkout.description') }}\\n        </p>\\n        {% endblock %}\\n\\n        {% block swag_paypal_content_card_channel_config_checkout_container_banner %}\\n        <sw-alert\\n            v-if=\\\"!isOnboardingPPCPFinished\\\"\\n            variant=\\\"info\\\"\\n            class=\\\"swag-paypal-checkout__banner\\\"\\n        >\\n            <span v-html=\\\"$tc('swag-paypal.settingForm.checkout.banner')\\\"></span>\\n        </sw-alert>\\n        {% endblock %}\\n\\n        {% block swag_paypal_content_card_channel_config_checkout_container_onboarding %}\\n        <div class=\\\"swag-paypal-checkout-container-onboarding\\\">\\n            {% block swag_paypal_content_card_channel_config_checkout_container_onboarding_button %}\\n            <template v-if=\\\"isLive\\\">\\n                <a\\n                    class=\\\"sw-button swag-paypal-checkout-button__onboarding sw-button--primary\\\"\\n                    variant=\\\"primary\\\"\\n                    target=\\\"_blank\\\"\\n                    :href=\\\"onboardingUrlLive\\\"\\n                    :disabled=\\\"!acl.can('swag_paypal.editor')\\\"\\n                    data-paypal-onboard-complete=\\\"onboardingCallbackLive\\\"\\n                    data-paypal-button=\\\"true\\\"\\n                >\\n                    {{ $tc('swag-paypal.settingForm.checkout.button.title') }}\\n                </a>\\n            </template>\\n            <template v-if=\\\"isSandbox\\\">\\n                <a\\n                    class=\\\"sw-button swag-paypal-checkout-button__onboarding sw-button--primary\\\"\\n                    variant=\\\"primary\\\"\\n                    target=\\\"_blank\\\"\\n                    :href=\\\"onboardingUrlSandbox\\\"\\n                    :disabled=\\\"!acl.can('swag_paypal.editor')\\\"\\n                    data-paypal-onboard-complete=\\\"onboardingCallbackSandbox\\\"\\n                    data-paypal-button=\\\"true\\\"\\n                >\\n                    {{ $tc('swag-paypal.settingForm.checkout.button.title') }}\\n                </a>\\n            </template>\\n            {% endblock %}\\n\\n            {% block swag_paypal_content_card_channel_config_checkout_container_sandbox_switch %}\\n            <sw-inherit-wrapper v-model=\\\"actualConfigData['SwagPayPal.settings.sandbox']\\\"\\n                                :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['SwagPayPal.settings.sandbox']\\\"\\n                                :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                <template #content=\\\"props\\\">\\n                    <sw-switch-field name=\\\"SwagPayPal.settings.sandbox\\\"\\n                                     :mapInheritance=\\\"props\\\"\\n                                     :label=\\\"$tc('swag-paypal.settingForm.checkout.sandbox.label')\\\"\\n                                     :helpText=\\\"$tc('swag-paypal.settingForm.checkout.sandbox.tooltipText')\\\"\\n                                     :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                     :value=\\\"props.currentValue\\\"\\n                                     @change=\\\"props.updateCurrentValue\\\">\\n                    </sw-switch-field>\\n                </template>\\n            </sw-inherit-wrapper>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n\\n        {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods %}\\n        <p class=\\\"swag-paypal-checkout-payment-method__headline\\\">\\n            {{ $tc('swag-paypal.settingForm.checkout.paymentMethodText') }}\\n        </p>\\n        {% endblock %}\\n\\n        {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items %}\\n        <div class=\\\"swag-paypal-checkout-payment-method_container\\\">\\n\\n            {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items_item %}\\n            <div\\n                v-for=\\\"paymentMethod in paymentMethods\\\"\\n                :key=\\\"paymentMethod.id\\\"\\n                class=\\\"swag-paypal-checkout-payment-method__item\\\"\\n            >\\n                <sw-container\\n                    columns=\\\"250px 1fr 90px\\\"\\n                >\\n                    {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items_item_name_icon %}\\n                    <div class=\\\"swag-paypal-checkout-payment-method__item-name-icon\\\">\\n                        <sw-icon\\n                            class=\\\"swag-paypal-checkout-payment-method__item-icon\\\"\\n                            :name=\\\"icon(paymentMethod)\\\"\\n                            multicolor\\n                        />\\n                        {{ paymentMethod.name }}\\n                    </div>\\n                    {% endblock %}\\n\\n                    {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items_item_dynamic %}\\n                    <div class=\\\"swag-paypal-checkout-payment-method__item-dynamic\\\">\\n                        {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items_item_pui_help_text %}\\n                        <sw-help-text\\n                            v-if=\\\"availabilityToolTip(paymentMethod)\\\"\\n                            :text=\\\"availabilityToolTip(paymentMethod)\\\"\\n                        />\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items_item_onboarding_status %}\\n                        <sw-label\\n                            class=\\\"swag-plugin-box-with-onboarding__status-label\\\"\\n                            size=\\\"medium\\\"\\n                            appearance=\\\"pill\\\"\\n                            :variant=\\\"statusBadgeVariant(paymentMethod)\\\"\\n                            :ghost=\\\"false\\\"\\n                            :caps=\\\"false\\\"\\n                        >\\n\\n                            {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items_item_onboarding_status_badge %}\\n                            <sw-color-badge\\n                                class=\\\"swag-plugin-box-with-onboarding__status-badge\\\"\\n                                rounded\\n                                :color=\\\"statusBadgeColor(paymentMethod)\\\"\\n                            />\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items_item_onboarding_status_text %}\\n                            <span class=\\\"swag-plugin-box-with-onboarding__status-text\\\">\\n                                {{ onboardingStatusText(paymentMethod) }}\\n                            </span>\\n                            {% endblock %}\\n\\n                        </sw-label>\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items_item_edit_detail_link %}\\n                        <router-link\\n                            v-if=\\\"showEditLink(paymentMethod)\\\"\\n                            class=\\\"swag-paypal-checkout-payment-method__item-show-detail-link\\\"\\n                            :to=\\\"editLink(paymentMethod)\\\"\\n                        >\\n                            {{ $tc('swag-paypal.settingForm.checkout.editDetail') }}\\n                        </router-link>\\n                        {% endblock %}\\n                    </div>\\n                    {% endblock %}\\n\\n                    {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items_item_active_switch %}\\n                    <sw-switch-field\\n                        :label=\\\"$tc('swag-paypal.settingForm.checkout.switch.label')\\\"\\n                        :disabled=\\\"paymentMethodToggleDisabled(paymentMethod) || !acl.can('swag_paypal.editor')\\\"\\n                        :value=\\\"paymentMethod.active\\\"\\n                        @change=\\\"onChangePaymentMethodActive(paymentMethod)\\\"\\n                    />\\n                    {% endblock %}\\n\\n                </sw-container>\\n            </div>\\n            {% endblock %}\\n\\n        </div>\\n        {% endblock %}\\n\\n        {% block swag_paypal_content_card_channel_config_checkout_container_switch_show_credentials %}\\n        <sw-switch-field\\n            v-if=\\\"allowShowCredentials\\\"\\n            v-model=\\\"showCredentials\\\"\\n            :label=\\\"$tc('swag-paypal.settingForm.checkout.showCredentials')\\\"\\n            :disabled=\\\"!acl.can('swag_paypal.editor')\\\"\\n            @change=\\\"updateShowCredentials\\\"\\n        />\\n        {% endblock %}\\n\\n        {% block swag_paypal_content_card_channel_config_checkout_container_credentials_slot %}\\n        <slot name=\\\"credentials\\\"></slot>\\n        {% endblock %}\\n\\n    </div>\\n    {% endblock %}\\n\\n    {% block sw_deactivate_paypal_plus_modal %}\\n    <sw-modal\\n        v-if=\\\"plusDeprecationModalOpen\\\"\\n        class=\\\"swag-paypal-checkout-modal\\\"\\n        :title=\\\"$tc('swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.title')\\\"\\n        variant=\\\"default\\\"\\n        @modal-close=\\\"closeModal\\\"\\n    >\\n        {% block sw_deactivate_paypal_plus_modal_text %}\\n        <p class=\\\"swag-paypal-checkout-modal__text\\\">\\n            {{ $tc('swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.text') }}\\n        </p>\\n        {% endblock %}\\n\\n        {% block sw_deactivate_paypal_plus_modal_warning %}\\n        <sw-alert\\n            class=\\\"swag-paypal-checkout-modal__warning\\\"\\n            variant=\\\"warning\\\"\\n        >\\n            {{ $tc('swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.warning') }}\\n        </sw-alert>\\n        {% endblock %}\\n\\n        {% block sw_deactivate_paypal_plus_modal_footer %}\\n        <template #modal-footer>\\n            {% block sw_deactivate_paypal_plus_modal_cancel_button %}\\n            <sw-button @click=\\\"closeModal\\\">\\n                {{ $tc('swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.button.cancel') }}\\n            </sw-button>\\n            {% endblock %}\\n\\n            {% block ssw_deactivate_paypal_plus_modal_confirm_button %}\\n            <sw-button\\n                variant=\\\"primary\\\"\\n                @click=\\\"deactivatePayPalPlus\\\"\\n            >\\n                {{ $tc('swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.button.deactivate') }}\\n            </sw-button>\\n            {% endblock %}\\n\\n        </template>\\n        {% endblock %}\\n    </sw-modal>\\n    {% endblock %}\\n\\n</sw-card>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-wizard.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6d0d53a6\", content, true, {});","module.exports = \"<svg width=\\\"58px\\\" height=\\\"30px\\\" viewBox=\\\"0 0 58 30\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><title>Blik logo</title><desc>Created with Sketch.</desc><defs><path d=\\\"M4.81760131,0 C2.15699346,0 0,2.12049689 0,4.73608696 L0,4.73608696 L0,25.263913 C0,27.8795031 2.15699346,30 4.81760131,30 L4.81760131,30 L53.1823987,30 C55.8430065,30 58,27.8795031 58,25.263913 L58,25.263913 L58,4.73608696 C58,2.12049689 55.8430065,0 53.1823987,0 L53.1823987,0 L4.81760131,0 Z\\\" id=\\\"path-1\\\"></path><linearGradient x1=\\\"50%\\\" y1=\\\"100%\\\" x2=\\\"50%\\\" y2=\\\"0%\\\" id=\\\"linearGradient-3\\\"><stop stop-color=\\\"#4D4D4F\\\" offset=\\\"0%\\\"></stop><stop stop-color=\\\"#000000\\\" offset=\\\"100%\\\"></stop></linearGradient><radialGradient cx=\\\"20.3705659%\\\" cy=\\\"18.0870534%\\\" fx=\\\"20.3705659%\\\" fy=\\\"18.0870534%\\\" r=\\\"117.639519%\\\" gradientTransform=\\\"translate(0.203706,0.180871),scale(0.983106,1.000000),rotate(54.479781),translate(-0.203706,-0.180871)\\\" id=\\\"radialGradient-4\\\"><stop stop-color=\\\"#FF0000\\\" offset=\\\"0%\\\"></stop><stop stop-color=\\\"#E83E49\\\" offset=\\\"55.9042441%\\\"></stop><stop stop-color=\\\"#FF00FF\\\" offset=\\\"100%\\\"></stop></radialGradient><path d=\\\"M3.67238562,6.95664596 C5.60913072,6.95664596 7.17892157,5.41322981 7.17892157,3.50925466 C7.17892157,1.60546584 5.60913072,0.0620496894 3.67238562,0.0620496894 C1.73564052,0.0620496894 0.165849673,1.60546584 0.165849673,3.50925466 C0.165849673,5.41322981 1.73564052,6.95664596 3.67238562,6.95664596 Z\\\" id=\\\"path-5\\\"></path></defs><g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><g id=\\\"SPB_&amp;_AltPay_NewAssets\\\" transform=\\\"translate(-100.000000, -159.000000)\\\"><g id=\\\"Blik-logo\\\" transform=\\\"translate(100.000000, 159.000000)\\\"><g id=\\\"Group-3\\\"><mask id=\\\"mask-2\\\" fill=\\\"white\\\"><use xlink:href=\\\"#path-1\\\"></use></mask><g id=\\\"Clip-2\\\"></g><path d=\\\"M4.81760131,0 C2.15699346,0 0,2.12049689 0,4.73608696 L0,4.73608696 L0,25.263913 C0,27.8795031 2.15699346,30 4.81760131,30 L4.81760131,30 L53.1823987,30 C55.8430065,30 58,27.8795031 58,25.263913 L58,25.263913 L58,4.73608696 C58,2.12049689 55.8430065,0 53.1823987,0 L53.1823987,0 L4.81760131,0 Z\\\" id=\\\"Fill-1\\\" fill=\\\"url(#linearGradient-3)\\\" mask=\\\"url(#mask-2)\\\"></path></g><g id=\\\"Group-9\\\" transform=\\\"translate(6.254902, 4.472050)\\\" fill=\\\"#FFFFFF\\\"><polygon id=\\\"Fill-4\\\" points=\\\"17.627451 21.6769565 21.5604575 21.6769565 21.5604575 0.0154658385 17.627451 0.0154658385\\\"></polygon><polygon id=\\\"Fill-6\\\" points=\\\"24.9248366 21.6769565 28.8578431 21.6769565 28.8578431 7.32913043 24.9248366 7.32913043\\\"></polygon><polygon id=\\\"Fill-7\\\" points=\\\"46.4852941 21.6770124 40.5751699 14.0838447 46.0114379 7.32918634 41.3676471 7.32918634 36.1552288 13.8822298 36.1552288 0.0155217391 32.2222222 0.0155217391 32.2222222 21.6770124 36.1552288 21.6770124 36.1552288 14.3106149 41.3676471 21.6770124\\\"></polygon><path d=\\\"M7.60539216,17.9735963 C5.65575817,17.9735963 4.0751634,16.4197453 4.0751634,14.5030994 C4.0751634,12.5864534 5.65575817,11.0326025 7.60539216,11.0326025 C9.55502614,11.0326025 11.1356209,12.5864534 11.1356209,14.5030994 C11.1356209,16.4197453 9.55502614,17.9735963 7.60539216,17.9735963 M7.60539216,7.16614286 C6.3282549,7.16614286 5.12636601,7.4821677 4.0751634,8.03800621 L4.0751634,0.0155217391 L0.142156863,0.0155217391 L0.142156863,14.5030994 C0.142156863,18.5551491 3.48360131,21.8400559 7.60539216,21.8400559 C11.727183,21.8400559 15.0686275,18.5551491 15.0686275,14.5030994 C15.0686275,10.4510497 11.727183,7.16614286 7.60539216,7.16614286\\\" id=\\\"Fill-8\\\"></path></g><g id=\\\"Group-12\\\" transform=\\\"translate(14.026144, 3.354037)\\\"><mask id=\\\"mask-6\\\" fill=\\\"white\\\"><use xlink:href=\\\"#path-5\\\"></use></mask><use id=\\\"Clip-11\\\" fill=\\\"url(#radialGradient-4)\\\" xlink:href=\\\"#path-5\\\"></use><path d=\\\"M3.67238562,6.95664596 C5.60913072,6.95664596 7.17892157,5.41322981 7.17892157,3.50925466 C7.17892157,1.60546584 5.60913072,0.0620496894 3.67238562,0.0620496894 C1.73564052,0.0620496894 0.165849673,1.60546584 0.165849673,3.50925466 C0.165849673,5.41322981 1.73564052,6.95664596 3.67238562,6.95664596 Z\\\" id=\\\"Fill-10\\\" mask=\\\"url(#mask-6)\\\"></path></g></g></g></g></svg>\"","module.exports = \"{% block swag_paypal_pos_status_view %}\\n    <swag-paypal-pos-status :disabled=\\\"disabled\\\"\\n                            :disabledText=\\\"$tc('swag-paypal-pos.detail.overview.status.disabled')\\\"\\n                            :icon=\\\"statusIcon\\\"\\n                            :subIcon=\\\"statusIconComplete\\\"\\n                            :iconAnimated=\\\"isSyncing\\\"\\n                            :isLoading=\\\"isLoading || status === null\\\"\\n                            :status=\\\"statusTitle\\\"\\n                            :showSubStatus=\\\"incompleteLastRun\\\"\\n                            :title=\\\"$tc('swag-paypal-pos.detail.overview.titleSync')\\\"\\n                            :variant=\\\"statusVariant\\\"\\n                            :subVariant=\\\"statusCompleteErrorLevel\\\">\\n\\n        {% block swag_paypal_pos_status_view_actions %}\\n            <template #actions>\\n                <slot name=\\\"actions\\\"></slot>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_status_view_detail %}\\n            <template #detail v-if=\\\"isSyncing\\\">\\n\\n                {% block swag_paypal_pos_status_view_detail_syncing %}\\n                    {{ $tc('swag-paypal-pos.detail.overview.status.syncingDetail') }}\\n                {% endblock %}\\n            </template>\\n            <template #detail v-else-if=\\\"lastFinishedRun\\\">\\n                <div>\\n\\n                    {% block swag_paypal_pos_status_view_detail_static %}\\n                        {{ $tc('swag-paypal-pos.detail.overview.status.lastSynced') }}:\\n                        {{ lastFinishedRun.updatedAt | date({\\n                                hour: '2-digit',\\n                                minute: '2-digit',\\n                                second: '2-digit',\\n                                day: '2-digit',\\n                                month: 'short',\\n                                year: 'numeric'\\n                            })\\n                        }}\\n                    {% endblock %}\\n                </div>\\n\\n                {% block swag_paypal_pos_status_view_detail_errors %}\\n                    <sw-alert v-if=\\\"syncErrors\\\"\\n                              variant=\\\"error\\\"\\n                              :closable=\\\"true\\\"\\n                              :title=\\\"$tc('swag-paypal-pos.detail.overview.syncErrorTitle')\\\">\\n                        <ul>\\n                            <li v-for=\\\"error in syncErrors\\\">{{ error.detail }} ({{ error.code }})</li>\\n                        </ul>\\n                    </sw-alert>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_status_view_substatus %}\\n            <template #substatus v-if=\\\"incompleteLastRun\\\">\\n                {{ $tc('swag-paypal-pos.detail.overview.status.lastSyncedComplete') }}:\\n                {{ lastCompleteRun.updatedAt | date({\\n                        hour: '2-digit',\\n                        minute: '2-digit',\\n                        second: '2-digit',\\n                        day: '2-digit',\\n                        month: 'short',\\n                        year: 'numeric'\\n                    })\\n                }}\\n            </template>\\n        {% endblock %}\\n    </swag-paypal-pos-status>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-wizard-customization.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1b3d9820\", content, true, {});","module.exports = \"{% block sw_plugin_box_container_button %}\\n<template>\\n    {% block swag_paypal_plugin_box_with_button_link_to_extension %}\\n        <sw-button\\n            variant=\\\"ghost\\\"\\n            size=\\\"small\\\"\\n            class=\\\"sw-plugin-box__button\\\"\\n            :router-link=\\\"{ path: '/swag/paypal/index' }\\\"\\n        >\\n            {{ $tc('sw-plugin-box.buttonPluginSettings') }}\\n        </sw-button>\\n    {% endblock %}\\n</template>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_payment_details_v1 %}\\n    <div class=\\\"swag-paypal-payment-details_v1\\\">\\n        <sw-card :title=\\\"$tc('swag-paypal-payment.paymentDetails.cardTitle')\\\">\\n            <template #grid>\\n\\n                {% block swag_paypal_payment_actions_section %}\\n                    <sw-card-section secondary\\n                                     slim>\\n                        <swag-paypal-payment-actions :orderId=\\\"orderId\\\" :paymentResource=\\\"paymentResource\\\">\\n                        </swag-paypal-payment-actions>\\n                    </sw-card-section>\\n                {% endblock %}\\n\\n                <sw-card-section divider=\\\"top\\\">\\n                    <sw-container columns=\\\"1fr\\\"\\n                                  gap=\\\"0px 30px\\\">\\n\\n                        {% block swag_paypal_payment_detail_invoice %}\\n                            {% block swag_paypal_payment_detail_invoice_heading %}\\n                                <h3>\\n                                    {{ $tc('swag-paypal-payment.paymentDetails.invoice.heading') }}\\n                                </h3>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_payment_detail_invoice_list %}\\n                                <sw-description-list class=\\\"swag-paypal-payment-detail__data\\\">\\n                                    <dt>{{ $tc('swag-paypal-payment.paymentDetails.invoice.totalAmount') }}</dt>\\n                                    <dd>{{ amount.total }} {{ currency }}</dd>\\n\\n                                    <dt>{{ $tc('swag-paypal-payment.paymentDetails.invoice.subTotal') }}</dt>\\n                                    <dd> {{ amount.details.subtotal }} {{ currency }}</dd>\\n\\n                                    <dt>{{ $tc('swag-paypal-payment.paymentDetails.invoice.shipping') }}</dt>\\n                                    <dd> {{ amount.details.shipping }} {{ currency }}</dd>\\n                                </sw-description-list>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_payment_detail_payment %}\\n                                {% block swag_paypal_payment_detail_payment_heading %}\\n                                    <h3 class=\\\"swag-paypal-payment-detail__heading\\\">\\n                                        {{ $tc('swag-paypal-payment.paymentDetails.payment.heading') }}\\n                                    </h3>\\n                                {% endblock %}\\n\\n                                {% block swag_paypal_payment_detail_payment_list %}\\n                                    <sw-description-list class=\\\"swag-paypal-payment-detail__data\\\">\\n                                        <dt>{{ $tc('swag-paypal-payment.paymentDetails.payment.intent') }}</dt>\\n                                        <dd>{{ $tc(`swag-paypal.settingForm.behavior.intent.${paymentResource.intent}`) }}</dd>\\n\\n                                        <dt>{{ $tc('swag-paypal-payment.paymentDetails.payment.paymentId') }}</dt>\\n                                        <dd>{{ paymentResource.id }}</dd>\\n\\n                                        <dt>{{ $tc('swag-paypal-payment.paymentDetails.payment.cartId') }}</dt>\\n                                        <dd>{{ paymentResource.cart }}</dd>\\n\\n                                        <dt>{{ $tc('swag-paypal-payment.paymentDetails.payment.state') }}</dt>\\n                                        <dd>{{ paymentResource.state }}</dd>\\n\\n                                        <dt>{{ $tc('swag-paypal-payment.paymentDetails.payment.createTime') }}</dt>\\n                                        <dd>{{ createDateTime }}</dd>\\n\\n                                        <dt>{{ $tc('swag-paypal-payment.paymentDetails.payment.updateTime') }}</dt>\\n                                        <dd>{{ updateDateTime }}</dd>\\n                                    </sw-description-list>\\n                                {% endblock %}\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_payment_detail_customer %}\\n                                {% block swag_paypal_payment_detail_customer_heading %}\\n                                    <h3 class=\\\"swag-paypal-payment-detail__heading\\\">\\n                                        {{ $tc('swag-paypal-payment.paymentDetails.customer.heading') }}\\n                                    </h3>\\n                                {% endblock %}\\n\\n                                {% block swag_paypal_payment_detail_customer_list %}\\n                                    <sw-description-list class=\\\"swag-paypal-payment-detail__data\\\">\\n                                        <dt>{{ $tc('swag-paypal-payment.paymentDetails.customer.payerId') }}</dt>\\n                                        <dd>{{ payerId }}</dd>\\n                                    </sw-description-list>\\n                                {% endblock %}\\n                            {% endblock %}\\n                        {% endblock %}\\n\\n                    </sw-container>\\n                </sw-card-section>\\n            </template>\\n        </sw-card>\\n\\n        {% block swag_paypal_payment_transaction_history_card %}\\n            <sw-card :title=\\\"$tc('swag-paypal-payment.transactionHistory.cardTitle')\\\">\\n                <template #grid>\\n\\n                    {% block swag_paypal_payment_transaction_history_grid %}\\n                        <sw-data-grid :dataSource=\\\"relatedResources\\\"\\n                                      :columns=\\\"relatedResourceColumns\\\"\\n                                      :showActions=\\\"false\\\"\\n                                      :showSelection=\\\"false\\\">\\n                        </sw-data-grid>\\n                    {% endblock %}\\n\\n                </template>\\n            </sw-card>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_first_run_wizard_modal %}\\n    <div class=\\\"swag-paypal-pos-wizard\\\">\\n        <sw-modal v-if=\\\"showModal\\\"\\n                  class=\\\"swag-paypal-pos-wizard-modal\\\"\\n                  :title=\\\"title\\\"\\n                  :variant=\\\"variant\\\"\\n                  @modal-close=\\\"onCloseModal\\\">\\n\\n            {% block swag_paypal_pos_wizard_modal_content %}\\n                <div class=\\\"swag-paypal-pos-wizard__modal-content\\\">\\n                    <sw-container class=\\\"swag-paypal-pos-wizard__columns\\\"\\n                                  :class=\\\"{ 'swag-paypal-pos-wizard__columns--two': showSteps }\\\">\\n\\n                        {% block swag_paypal_pos_wizard_modal_content_steps %}\\n                            <div v-if=\\\"showSteps\\\"\\n                                 class=\\\"swag-paypal-pos-wizard__steps\\\">\\n                                <sw-step-display :initialItemVariants=\\\"stepInitialItemVariants\\\"\\n                                                 :itemIndex=\\\"stepIndex\\\"\\n                                                 :itemVariant=\\\"stepVariant\\\">\\n                                    <sw-step-item v-for=\\\"pageName in displayStepperPages\\\" :key=\\\"pageName\\\">\\n                                        {{ $tc(`swag-paypal-pos.wizard.stepItemTitle.${pageName}`) }}\\n                                    </sw-step-item>\\n                                </sw-step-display>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_pos_wizard_modal_content_page %}\\n                            <div class=\\\"swag-paypal-pos-wizard__page\\\">\\n                                <router-view :salesChannel=\\\"salesChannel\\\"\\n                                             :cloneSalesChannelId=\\\"cloneSalesChannelId\\\"\\n                                             :saveSalesChannel=\\\"save\\\"\\n                                             :isLoading=\\\"isLoading\\\"\\n                                             @buttons-update=\\\"updateButtons\\\"\\n                                             @frw-set-title=\\\"setTitle\\\"\\n                                             @frw-finish=\\\"onFinishWizard\\\"\\n                                             @toggle-loading=\\\"toggleLoading\\\"\\n                                             @recreate-sales-channel=\\\"createNewSalesChannel\\\"\\n                                             @update-clone-sales-channel=\\\"updateCloneSalesChannel\\\">\\n                                </router-view>\\n                            </div>\\n                        {% endblock %}\\n                    </sw-container>\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_paypal_pos_wizard_modal_footer %}\\n                <template #modal-footer>\\n                    <div class=\\\"swag-paypal-pos-wizard__footer\\\">\\n\\n                        {% block swag_paypal_pos_wizard_modal_footer_left %}\\n                            <div class=\\\"footer-left\\\">\\n                                <sw-button v-for=\\\"button in buttons.left\\\"\\n                                           size=\\\"small\\\"\\n                                           :key=\\\"button.key\\\"\\n                                           :disabled=\\\"button.disabled\\\"\\n                                           :isLoading=\\\"isLoading\\\"\\n                                           :variant=\\\"button.variant\\\"\\n                                           @click=\\\"onButtonClick(button.action)\\\">\\n                                    {{ button.label }}\\n                                </sw-button>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_pos_wizard_modal_footer_right %}\\n                            <div class=\\\"footer-right\\\">\\n                                <sw-button v-for=\\\"button in buttons.right\\\"\\n                                           size=\\\"small\\\"\\n                                           :key=\\\"button.key\\\"\\n                                           :disabled=\\\"button.disabled\\\"\\n                                           :isLoading=\\\"isLoading\\\"\\n                                           :variant=\\\"button.variant\\\"\\n                                           @click=\\\"onButtonClick(button.action)\\\">\\n                                    {{ button.label }}\\n                                </sw-button>\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                </template>\\n            {% endblock %}\\n        </sw-modal>\\n    </div>\\n{% endblock %}\\n\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-settings-hint.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"cc5aadcc\", content, true, {});","module.exports = \"{% block swag_paypal_settings_hint %}\\n    <p class=\\\"swag-paypal-settings-hint\\\">\\n        {{ hintText }}\\n    </p>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-settings-payment-detail.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4d352182\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-status.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3a916960\", content, true, {});","module.exports = \"{% block swag_paypal_pos_wizard_sync_prices %}\\n    <div class=\\\"swag-paypal-pos-wizard-sync-prices\\\">\\n\\n        {% block swag_paypal_pos_wizard_sync_prices_header %}\\n            <div class=\\\"swag-paypal-pos-wizard-sync-prices__headline\\\">\\n                {{ $tc('swag-paypal-pos.wizard.syncPrices.header') }}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_wizard_sync_prices_description_input %}\\n            <swag-paypal-pos-boolean-radio\\n                v-model=\\\"salesChannel.extensions.paypalPosSalesChannel.syncPrices\\\"\\n                :label=\\\"$tc('swag-paypal-pos.wizard.syncPrices.description')\\\"\\n                :optionTrue=\\\"optionTrue\\\"\\n                :optionFalse=\\\"optionFalse\\\">\\n            </swag-paypal-pos-boolean-radio>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_wizard_sync_prices_disclaimer %}\\n            <div class=\\\"swag-paypal-pos-wizard-sync-prices__disclaimer\\\">\\n                {{ $tc('swag-paypal-pos.wizard.syncPrices.disclaimer') }}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-disputes-list.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6212110e\", content, true, {});","const { Mixin } = Shopware;\n\nMixin.register('swag-paypal-pos-catch-error', {\n    methods: {\n        /**\n         * Creates a notification, if an error has been returned\n         *\n         * @param {string} snippet of the notification\n         * @param {Object} errorResponse\n         */\n        catchError(snippet, errorResponse) {\n            // mixins otherwise don't get i18n\n            this._i18n = this.$root._i18n;\n\n            let message = snippet ? this.$tc(snippet) : '';\n\n            try {\n                if (errorResponse.response.data && errorResponse.response.data.errors) {\n                    const errorText = errorResponse.response.data.errors.map((error) => {\n                        if (error.code === 'SWAG_PAYPAL_POS__EXISTING_POS_ACCOUNT') {\n                            message = this.$tc('swag-paypal-pos.authentication.messageDuplicateError');\n                        }\n\n                        if (error.hasOwnProperty('meta') && error.meta.hasOwnProperty('parameters')) {\n                            if (error.meta.parameters.salesChannelIds) {\n                                return `<br>${error.meta.parameters.salesChannelIds}`;\n                            }\n\n                            if (error.meta.parameters.message) {\n                                return `${error.meta.parameters.message} (${error.meta.parameters.name})`;\n                            }\n\n                            if (error.meta.parameters.name) {\n                                return error.meta.parameters.name;\n                            }\n                        }\n\n                        return error.detail;\n                    }, this).join(' / ');\n\n                    if (errorText) {\n                        message = message ? `${message}: ${errorText}` : errorText;\n                    }\n                }\n            } finally {\n                this.createNotificationError({ message });\n            }\n        },\n    },\n});\n","module.exports = \"{% block swag_paypal_paymemnt_action_v2_void %}\\n    <sw-modal variant=\\\"small\\\"\\n              :title=\\\"$tc(`swag-paypal-payment.modal.title.void`)\\\"\\n              @modal-close=\\\"closeModal\\\">\\n\\n        {% block swag_paypal_paymemnt_action_v2_void_headline %}\\n            <p>{{ $tc('swag-paypal-payment.voidAction.confirm.message') }}</p>\\n        {% endblock %}\\n\\n        <template #modal-footer>\\n\\n            {% block swag_paypal_paymemnt_action_v2_void_cancel_button %}\\n                <sw-button @click=\\\"closeModal\\\">\\n                    {{ $tc('global.default.no') }}\\n                </sw-button>\\n            {% endblock %}\\n\\n            {% block swag_paypal_paymemnt_action_v2_void_confirm_button %}\\n                <sw-button variant=\\\"primary\\\"\\n                           @click=\\\"voidPayment\\\">\\n                    {{ $tc('swag-paypal-payment.voidAction.confirm.button.confirm') }}\\n                </sw-button>\\n            {% endblock %}\\n\\n        </template>\\n\\n        <sw-loader v-if=\\\"isLoading\\\" size=\\\"43px\\\">\\n        </sw-loader>\\n    </sw-modal>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_text_field %}\\n    {% block swag_paypal_locale_field %}\\n        <div class=\\\"swag-paypal-locale-field\\\">\\n\\n            {% block swag_paypal_locale_field_contextual_field %}\\n                <sw-contextual-field class=\\\"sw-field--text\\\"\\n                                     v-bind=\\\"$attrs\\\"\\n                                     :name=\\\"formFieldName\\\"\\n                                     :error=\\\"error\\\"\\n                                     @inheritance-restore=\\\"$emit('inheritance-restore', $event)\\\"\\n                                     @inheritance-remove=\\\"$emit('inheritance-remove', $event)\\\"\\n                                     v-on=\\\"$listeners\\\">\\n\\n                    <template #sw-field-input=\\\"{ identification, error, disabled, size, setFocusClass, removeFocusClass, hasSuffix, hasPrefix }\\\">\\n                        <input type=\\\"text\\\"\\n                               :name=\\\"identification\\\"\\n                               :id=\\\"identification\\\"\\n                               :disabled=\\\"disabled\\\"\\n                               :value=\\\"currentValue\\\"\\n                               :placeHolder=\\\"placeholder\\\"\\n                               @input=\\\"onInput\\\"\\n                               @focus=\\\"setFocusClass\\\"\\n                               @blur=\\\"onBlur($event, removeFocusClass)\\\"\\n                               v-on=\\\"additionalListeners\\\">\\n                    </template>\\n                </sw-contextual-field>\\n            {% endblock %}\\n\\n            {% block swag_paypal_locale_field_information %}\\n                <p class=\\\"swag-paypal-locale-field__text\\\">\\n\\n                    {% block swag_paypal_locale_field_information_text %}\\n                        {{ $tc('swag-paypal.settingForm.locale-field.infobox.text') }}\\n                    {% endblock %}\\n\\n                    {% block swag_paypal_locale_field_information_href %}\\n                        <sw-external-link class=\\\"swag-paypal-locale-field__text-href\\\"\\n                                          href=\\\"https://developer.paypal.com/docs/api/reference/locale-codes/\\\">\\n                            {{ $tc('swag-paypal.settingForm.locale-field.infobox.href') }}\\n                        </sw-external-link>\\n                    {% endblock %}\\n\\n                </p>\\n            {% endblock %}\\n\\n        </div>\\n    {% endblock %}\\n\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-getting-started.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"b3c0da9c\", content, true, {});","module.exports = \"<svg width=\\\"31px\\\" height=\\\"36px\\\" viewBox=\\\"0 0 31 36\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><title>10B25E14-8956-4C18-9DC7-6E24ABECCD58</title><g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><g id=\\\"MULTIBANCO\\\" transform=\\\"translate(-434.000000, -132.000000)\\\"><g id=\\\"LOGO_MULTIBANCO_2\\\" transform=\\\"translate(434.000000, 132.000000)\\\"><path d=\\\"M15.0319773,28.9124384 L27.4697307,28.9124384 C30.3097855,28.9124384 30.3381417,25.893863 30.0489088,24.4035616 C29.890854,23.4019726 28.1887444,23.4103562 28.0013471,24.4035616 L28.0013471,25.566411 C28.0013471,26.0975342 27.5663882,26.5324932 27.0350184,26.5324932 L15.0319773,26.5324932 L14.0720595,26.5324932 L3.18896357,26.5324932 C2.65759371,26.5324932 2.22288138,26.0975342 2.22288138,25.566411 L2.22288138,24.4035616 C2.03548412,23.4103562 0.333374531,23.4019726 0.175319736,24.4035616 C-0.113666565,25.893863 -0.0858035513,28.9124384 2.75449782,28.9124384 L14.0720595,28.9124384 L15.0319773,28.9124384 Z\\\" id=\\\"bracket_bottom\\\" fill=\\\"#1866AB\\\"></path><path d=\\\"M6.23860741,1.75202318e-15 L24.4543608,1.75202318e-15 L25.4167444,1.75202318e-15 C26.7642786,1.75202318e-15 27.8664704,1.16654795 27.8664704,2.59249315 L27.8664704,3.83153425 C27.8664704,5.58320548 25.4934293,5.57654795 25.4934293,3.84336986 L25.4934293,3.16652055 C25.4934293,2.736 25.1413197,2.38389041 24.7105526,2.38389041 L5.49321015,2.38389041 C5.0626896,2.38389041 4.71058001,2.736 4.71058001,3.16652055 L4.71058001,3.82956164 C4.71058001,5.57161644 2.44899097,5.55928767 2.44899097,3.86728767 L2.44899097,2.59249315 C2.44899097,1.16654795 3.55142933,1.75202318e-15 4.898717,1.75202318e-15 L6.23860741,1.75202318e-15 Z\\\" id=\\\"bracket_top\\\" fill=\\\"#1866AB\\\"></path><path d=\\\"M27.382517,14.2421671 C28.7108184,14.866989 29.6278321,16.1568247 29.6278321,17.6377562 C29.6278321,19.7257562 27.8049006,21.4340301 25.5763526,21.4340301 L19.3308458,21.4340301 C18.7467088,21.4340301 18.2685992,20.9862493 18.2685992,20.4388521 L18.2685992,8.55613973 C18.2685992,7.98309863 18.7380786,7.51386575 19.312106,7.51386575 L24.514106,7.51386575 C26.7039417,7.51386575 28.4955581,9.30375616 28.4955581,11.491126 C28.4955581,12.5560849 28.0707088,13.5263589 27.382517,14.2421671 M22.7210101,13.2743589 L24.7039691,13.2743589 L24.7039691,13.2524137 C25.606928,13.1138384 26.304243,12.3287425 26.304243,11.3885507 L26.304243,11.3885507 C26.304243,10.3514548 25.4555307,9.50274247 24.4184348,9.50274247 L20.4241608,9.50274247 L20.4241608,19.3632904 L25.4893115,19.3632904 C26.5604348,19.3632904 27.4367636,18.4869616 27.4367636,17.4158384 C27.4367636,16.3447151 26.5604348,15.4683863 25.4893115,15.4683863 L24.7039691,15.4683863 L24.7039691,15.4637014 L22.7210101,15.4637014 C22.1188732,15.4637014 21.6262156,14.9712904 21.6262156,14.3691534 C21.6262156,13.7670164 22.1188732,13.2743589 22.7210101,13.2743589\\\" id=\\\"big_b\\\" fill=\\\"#373535\\\"></path><path d=\\\"M17.276306,20.2471644 C17.3495389,20.9353562 16.850717,21.5527808 16.1625252,21.6257671 C15.4743334,21.699 14.8569088,21.2004247 14.7839225,20.5119863 L13.7569362,11.0622329 L10.1194567,20.3021507 L10.1157581,20.3107808 L10.1155115,20.3117671 L10.1155115,20.3120137 L10.1054019,20.3364247 L10.0972649,20.3556575 L10.0952923,20.3603425 L10.0866622,20.3795753 L10.0812375,20.3911644 L10.0726074,20.4091644 L10.0684156,20.4175479 L10.0587992,20.4365342 L10.0553471,20.4431918 C9.98827864,20.5696849 9.90197727,20.6808904 9.80112796,20.7743425 L9.79742933,20.7775479 L9.7786896,20.7945616 C9.71310056,20.8527534 9.64060741,20.9040411 9.56194987,20.9481781 L9.55652522,20.951137 L9.53285398,20.9639589 L9.53186768,20.9644521 L9.50992248,20.9757945 L9.49981289,20.9809726 L9.48575809,20.9876301 L9.470717,20.9945342 L9.4576485,21.0006986 L9.44211426,21.0073562 L9.42855261,21.0130274 L9.4157307,21.0184521 L9.40414165,21.0228904 L9.39748412,21.0256027 L9.38688138,21.0295479 L9.37036083,21.0357123 L9.36074439,21.0389178 C9.23942933,21.0813288 9.11589508,21.1040137 8.99334713,21.1084521 L8.97855261,21.1089452 L8.96079919,21.1091918 L8.94797727,21.1091918 L8.93490878,21.1091918 L8.9176485,21.1089452 L8.90186768,21.1084521 C8.76501837,21.1035205 8.62644302,21.0756575 8.49156631,21.0228904 L8.47479919,21.0162329 L8.47060741,21.0142603 L8.45384028,21.0076027 L8.43756631,21.0004521 L8.42449782,20.9942877 L8.41044302,20.9878767 L8.39540193,20.980726 L8.38677179,20.9762877 L8.36384028,20.9646986 L8.36162111,20.9632192 L8.34214165,20.9526164 L8.33104576,20.9466986 C8.26225124,20.9079863 8.19838823,20.8633562 8.13945672,20.8137945 L8.13477179,20.8096027 C8.120717,20.7975205 8.10690878,20.7856849 8.09334713,20.7731096 L8.09260741,20.7721233 C8.08200467,20.7622603 8.07140193,20.7521507 8.06129234,20.7420411 C8.05118275,20.7316849 8.04082659,20.7213288 8.03096357,20.710726 L8.03022385,20.7097397 C8.0176485,20.6961781 8.00556631,20.6826164 7.99348412,20.6683151 L7.98929234,20.6636301 C7.9397307,20.6046986 7.89534713,20.5408356 7.8566348,20.4720411 L7.85047042,20.4611918 L7.83962111,20.4414658 L7.8386348,20.439 L7.82679919,20.4165616 L7.82260741,20.4076849 L7.81545672,20.3928904 L7.80879919,20.378589 L7.80288138,20.3655205 L7.7957307,20.3492466 L7.78858001,20.332726 L7.78710056,20.3285342 L7.78019645,20.3117671 L4.13877179,11.0622329 L3.11178549,20.5119863 C3.03855261,21.2004247 2.42137453,21.699 1.73318275,21.6257671 C1.04474439,21.5527808 0.546169051,20.9353562 0.619401928,20.2471644 L1.83008686,9.10615068 L1.83058001,9.10319178 L1.83107316,9.09850685 L1.83058001,9.09826027 C1.84512796,8.96856164 1.87249782,8.83935616 1.91194987,8.71261644 C1.95016905,8.58957534 2.00121015,8.46826027 2.06433344,8.34990411 C2.37353891,7.76921918 2.94238823,7.36187671 3.62121015,7.26793151 L3.6236759,7.26743836 C3.64636083,7.26447945 3.66929234,7.2620137 3.69197727,7.2600411 C3.79825124,7.24894521 3.90403207,7.24573973 4.00808686,7.25067123 L4.01301837,7.25091781 L4.01301837,7.25067123 C4.14838823,7.25708219 4.27512796,7.27409589 4.39200467,7.30121918 C5.03951152,7.45236986 5.58962111,7.90286301 5.84852522,8.56047945 L8.94797727,16.4328904 L12.0471828,8.56047945 C12.3060869,7.90286301 12.8561964,7.45236986 13.5037033,7.30121918 C13.6203334,7.27409589 13.7470732,7.25708219 13.8826896,7.25067123 L13.8826896,7.25091781 L13.8876211,7.25067123 C13.9919225,7.24573973 14.0979499,7.24894521 14.2044704,7.2600411 C14.2269088,7.2620137 14.2493471,7.26447945 14.2720321,7.26743836 L14.2744978,7.26793151 C14.9533197,7.36187671 15.5224156,7.76921918 15.8316211,8.34990411 C15.8944978,8.46826027 15.9457855,8.58957534 15.9837581,8.71261644 C16.0232101,8.83935616 16.05058,8.96831507 16.065128,9.09826027 L16.0646348,9.09850685 L16.065128,9.10319178 L16.0656211,9.10615068 L17.276306,20.2471644 Z\\\" id=\\\"big_m\\\" fill=\\\"#373535\\\"></path><path d=\\\"M28.8133444,32.8942603 L28.8133444,32.8954932 L28.8128512,32.8954932 L28.8121115,32.8954932 L28.8121115,32.8942603 C28.5652896,32.8942603 28.3406595,32.991411 28.1784129,33.1472466 C28.0188786,33.3003699 27.9200019,33.5099589 27.9197554,33.7387808 L27.9212348,33.7387808 L27.9212348,33.739274 L27.9212348,34.3631096 L27.9212348,34.3638493 L27.9197554,34.3638493 C27.9200019,34.5924247 28.0188786,34.8015205 28.1779197,34.9546438 C28.3406595,35.110726 28.5652896,35.2081233 28.8126047,35.2081233 L28.8126047,35.2068904 L28.8128512,35.2068904 L28.8138375,35.2068904 L28.8138375,35.2081233 C29.060906,35.2081233 29.2852896,35.1109726 29.4477828,34.9546438 C29.6070704,34.8017671 29.7061937,34.5924247 29.7061937,34.3633562 L29.7049608,34.3633562 L29.7049608,34.3631096 L29.7049608,33.739274 L29.7049608,33.7385342 L29.7061937,33.7385342 C29.7059471,33.5097123 29.6070704,33.3003699 29.4480293,33.1474932 C29.2852896,32.991411 29.0606595,32.8942603 28.8133444,32.8942603 L28.8133444,32.8942603 Z M28.8128512,32.2255479 L28.8133444,32.2255479 L28.8133444,32.2270274 C29.2404129,32.2270274 29.6292622,32.3954384 29.9110978,32.6659315 C30.1961389,32.9401233 30.37318,33.3196027 30.3734266,33.7385342 L30.3746595,33.7385342 L30.3746595,33.739274 L30.3746595,34.3631096 L30.3746595,34.3633562 L30.3734266,34.3633562 C30.37318,34.7825342 30.1961389,35.1622603 29.9108512,35.4364521 C29.6292622,35.7069452 29.2406595,35.8751096 28.8138375,35.8753562 L28.8138375,35.8768356 L28.8128512,35.8768356 L28.8126047,35.8768356 L28.8126047,35.8753562 C28.3855362,35.8753562 27.9966869,35.7069452 27.7148512,35.4362055 C27.4300567,35.1622603 27.2527691,34.7827808 27.2525225,34.3638493 L27.2512896,34.3638493 L27.2512896,34.3631096 L27.2512896,33.739274 L27.2512896,33.7387808 L27.2525225,33.7387808 C27.2527691,33.3198493 27.4300567,32.9398767 27.7153444,32.6659315 C27.9969334,32.3954384 28.3855362,32.227274 28.8121115,32.2270274 L28.8121115,32.2255479 L28.8128512,32.2255479 Z\\\" id=\\\"multibanco_o\\\" fill=\\\"#373535\\\"></path><path d=\\\"M26.8754101,35.2068658 C27.0603417,35.2068658 27.2102595,35.3567836 27.2102595,35.5417151 C27.2102595,35.7266466 27.0603417,35.876811 26.8754101,35.876811 L25.8886156,35.876811 L25.8881225,35.876811 L25.8881225,35.8753315 C25.5244238,35.8753315 25.1940129,35.7264 24.9548348,35.4872219 C24.716643,35.2490301 24.5686978,34.9191123 24.5682047,34.5556603 L24.5669718,34.5556603 L24.5669718,34.5549205 L24.5669718,33.5474137 L24.5669718,33.5469205 L24.5682047,33.5469205 C24.5684512,33.1832219 24.7168896,32.8525644 24.9563143,32.6133863 C25.1947526,32.3754411 25.5244238,32.2272493 25.8876293,32.2270027 L25.8876293,32.2255233 L25.8886156,32.2255233 L26.8754101,32.2255233 C27.0603417,32.2255233 27.2102595,32.3756877 27.2102595,32.5606192 C27.2102595,32.7455507 27.0603417,32.8954685 26.8754101,32.8954685 L25.8886156,32.8954685 L25.8876293,32.8954685 L25.8876293,32.8942356 C25.7093554,32.8942356 25.5461225,32.9682082 25.4272732,33.0870575 C25.308917,33.2054137 25.2356841,33.3681534 25.2356841,33.5469205 L25.2366704,33.5469205 L25.2366704,33.5474137 L25.2366704,34.5549205 L25.2366704,34.5556603 L25.2356841,34.5556603 C25.2356841,34.7341808 25.3094101,34.8974137 25.428506,35.016263 C25.5466156,35.1343726 25.7093554,35.2080986 25.8881225,35.2080986 L25.8881225,35.2068658 L25.8886156,35.2068658 L26.8754101,35.2068658 Z\\\" id=\\\"multibanco_c\\\" fill=\\\"#373535\\\"></path><path d=\\\"M21.6443636,35.5418137 C21.6443636,35.7267452 21.4944458,35.876663 21.3095143,35.876663 C21.1245828,35.876663 20.9744184,35.7267452 20.9744184,35.5418137 L20.9744184,32.772526 L20.9744184,32.7712932 C20.9744184,32.7520603 20.9758978,32.7328274 20.9791033,32.7145808 C20.9835417,32.6768548 20.9926649,32.6406082 21.0054869,32.6060877 L21.00598,32.6051014 L21.0054869,32.6048548 C21.012391,32.5863616 21.0220074,32.566389 21.0331033,32.544937 L21.033843,32.5439507 L21.0331033,32.5437041 C21.0890759,32.4421151 21.1800622,32.363211 21.2947197,32.3237589 C21.3100074,32.3188274 21.3252951,32.314389 21.3408293,32.3114301 C21.3526649,32.3087178 21.3645006,32.3062521 21.3763362,32.304526 L21.3790485,32.3040329 L21.3790485,32.3030466 C21.4014869,32.2998411 21.4283636,32.2983616 21.4591855,32.2991014 L21.4616512,32.2991014 L21.4675691,32.2991014 L21.4678156,32.2991014 C21.6051581,32.304526 21.7333773,32.3681425 21.8218978,32.4808274 L23.604391,34.7540055 L23.604391,32.5604712 C23.604391,32.3755397 23.7545554,32.2256219 23.9394869,32.2256219 C24.1244184,32.2256219 24.2743362,32.3755397 24.2743362,32.5604712 L24.2743362,35.3176767 C24.2743362,35.4634027 24.2087471,35.595074 24.0995143,35.6843342 C24.0788019,35.7011014 24.0558704,35.7168822 24.0312129,35.7306904 C24.0178978,35.7380877 24.003843,35.7447452 23.9895417,35.7511562 L23.985843,35.7526356 L23.9851033,35.7528822 C23.9762266,35.757074 23.9671033,35.7610192 23.9574869,35.7642247 L23.9565006,35.7647178 L23.9565006,35.7642247 L23.956254,35.7642247 L23.9560074,35.7639781 L23.9537882,35.7647178 C23.8322266,35.8066356 23.7045006,35.7977589 23.5947745,35.7444986 C23.5802266,35.7383342 23.5659252,35.730937 23.5516238,35.7220603 C23.5289389,35.7082521 23.5065006,35.6912384 23.4852951,35.6724986 C23.47198,35.660663 23.4576786,35.6458685 23.4426375,35.6278685 L23.4315417,35.6150466 L23.4308019,35.6143068 L23.4310485,35.6140603 L23.4268567,35.6088822 L21.6443636,33.3361973 L21.6443636,35.5418137 Z\\\" id=\\\"multibanco_n\\\" fill=\\\"#373535\\\"></path><path d=\\\"M20.619054,35.5011041 C20.6414923,35.6845562 20.5108074,35.8517342 20.3271088,35.8741726 C20.1436567,35.896611 19.9769718,35.7656795 19.9545334,35.5822274 L19.8366704,34.6363644 L18.6760403,34.6363644 C18.4911088,34.6363644 18.341191,34.4864466 18.341191,34.3015151 C18.341191,34.1165836 18.4911088,33.9664192 18.6760403,33.9664192 L19.753328,33.9664192 L19.7227526,33.7208301 L19.7222595,33.7181178 C19.7212732,33.7102274 19.7205334,33.702337 19.7202869,33.6946932 C19.7116567,33.638474 19.6990814,33.5812685 19.6815745,33.5235699 C19.6620951,33.4589671 19.638917,33.3995425 19.61278,33.3470219 C19.4798759,33.0814603 19.2394649,32.8955425 18.9354375,32.8955425 L18.9322321,32.8955425 L18.9322321,32.8943096 C18.8742869,32.8943096 18.8175745,32.9014603 18.7638211,32.9145288 C18.7132732,32.926611 18.6632184,32.9455973 18.6141499,32.9705014 C18.3572184,33.1014329 18.1851088,33.3874603 18.1481225,33.7168849 L17.9385334,35.5782822 C17.9183143,35.7619808 17.7528622,35.8943918 17.5694101,35.8741726 C17.3862047,35.8539534 17.2537937,35.6885014 17.2740129,35.5050493 L17.4833554,33.6436521 C17.5452458,33.0940356 17.8502595,32.6080356 18.3108622,32.373789 C18.4013554,32.327926 18.5002321,32.2909397 18.6067526,32.2655425 C18.7098211,32.2403918 18.8185608,32.2273233 18.9322321,32.2270767 L18.9322321,32.2255973 L18.9354375,32.2255973 C19.5161225,32.2255973 19.9671088,32.5648849 20.2092458,33.0486658 C20.2558485,33.1418712 20.2940677,33.2368027 20.3226704,33.3327205 C20.3483143,33.4182822 20.3677937,33.5095151 20.3813554,33.6054329 C20.3838211,33.615789 20.3857937,33.6261452 20.3870266,33.6367479 L20.3875197,33.6394603 L20.619054,35.5011041 Z\\\" id=\\\"multibanco_a\\\" fill=\\\"#373535\\\"></path><path d=\\\"M14.6994211,32.8954438 L14.6994211,34.0301836 L14.6994211,35.2068411 L15.9932019,35.2068411 L15.9939417,35.2068411 L15.9939417,35.208074 C16.1088458,35.208074 16.2141334,35.1602384 16.2913115,35.0830603 C16.3677499,35.0068685 16.4150923,34.9015808 16.4150923,34.7864301 L16.414106,34.7864301 L16.414106,34.785937 L16.414106,34.7849507 L16.4150923,34.7849507 C16.4150923,34.6769507 16.3726814,34.5768411 16.3031471,34.501389 L16.2903252,34.4890603 C16.2131471,34.4116356 16.1078595,34.3638 15.9936951,34.3638 L15.9936951,34.3650329 L15.9932019,34.3650329 L15.670928,34.3650329 L15.6699417,34.3650329 L15.5476403,34.3650329 C15.3629554,34.3650329 15.212791,34.2146219 15.212791,34.0301836 C15.212791,33.8457452 15.3629554,33.6950877 15.5476403,33.6950877 L15.6699417,33.6950877 L15.670928,33.6950877 L15.7000238,33.6950877 C15.796928,33.6876904 15.8854485,33.6440466 15.9522704,33.5777178 L15.9527636,33.578211 L15.9532567,33.5777178 C16.0257499,33.5049781 16.0711197,33.4051151 16.0711197,33.2956356 L16.0698869,33.2956356 L16.0698869,33.295389 L16.0698869,33.2951425 L16.0698869,33.2944027 L16.0711197,33.2944027 C16.0711197,33.1854164 16.0255033,33.0853068 15.9522704,33.012074 C15.8797773,32.9395808 15.7796677,32.894211 15.6704348,32.894211 L15.6704348,32.8954438 L15.6699417,32.8954438 L14.6994211,32.8954438 Z M14.0297225,34.0301836 L14.0297225,32.5751425 L14.0297225,32.5748959 C14.0297225,32.5275534 14.0395855,32.4824301 14.0570923,32.4417452 C14.0750923,32.3981014 14.1017225,32.3588959 14.1347636,32.3265945 L14.1389554,32.3228959 L14.1387088,32.3226493 C14.1954211,32.2684027 14.2708732,32.2321562 14.358654,32.2269781 C14.3653115,32.2264849 14.3719691,32.2259918 14.37838,32.2262384 L14.37838,32.2254986 L14.3793663,32.2254986 L15.6699417,32.2254986 L15.6704348,32.2254986 L15.6704348,32.2269781 C15.9648458,32.2269781 16.23238,32.3473068 16.4256951,32.5408685 C16.618517,32.7336904 16.738106,33.0002384 16.7383526,33.2944027 L16.7398321,33.2944027 L16.7398321,33.2951425 L16.7398321,33.295389 L16.7398321,33.2956356 L16.7383526,33.2956356 C16.7383526,33.5042384 16.6776951,33.6990329 16.5738869,33.8637452 C16.6426814,33.907389 16.7065444,33.9581836 16.7639964,34.015389 C16.7711471,34.0225397 16.7778047,34.0301836 16.7844622,34.0378274 C16.968654,34.2323753 17.0823252,34.4957178 17.0825718,34.7849507 L17.0838047,34.7849507 L17.0838047,34.785937 L17.0838047,34.7864301 L17.0825718,34.7864301 C17.0825718,35.0865123 16.9597773,35.3592247 16.7622704,35.5567315 C16.5659964,35.7530055 16.2940238,35.8750603 15.9939417,35.8753068 L15.9939417,35.8767863 L15.9932019,35.8767863 L14.3645718,35.8767863 C14.1796403,35.8767863 14.0297225,35.7266219 14.0297225,35.5416904 L14.0297225,34.0301836 Z\\\" id=\\\"multibanco_b\\\" fill=\\\"#373535\\\"></path><path d=\\\"M13.748528,35.5418137 C13.748528,35.7267452 13.5986101,35.876663 13.4136786,35.876663 C13.2287471,35.876663 13.0788293,35.7267452 13.0788293,35.5418137 L13.0788293,32.5604712 C13.0788293,32.3755397 13.2287471,32.2256219 13.4136786,32.2256219 C13.5986101,32.2256219 13.748528,32.3755397 13.748528,32.5604712 L13.748528,35.5418137 Z\\\" id=\\\"multibanco_i\\\" fill=\\\"#373535\\\"></path><path d=\\\"M11.6594923,35.5418137 C11.6594923,35.7267452 11.5095745,35.876663 11.324643,35.876663 C11.1397115,35.876663 10.9897937,35.7267452 10.9897937,35.5418137 L10.9897937,32.8955671 L10.03678,32.8955671 C9.8518485,32.8955671 9.7019307,32.7454027 9.7019307,32.5604712 C9.7019307,32.3755397 9.8518485,32.2256219 10.03678,32.2256219 L11.324643,32.2256219 L12.612506,32.2256219 C12.7974375,32.2256219 12.9473554,32.3755397 12.9473554,32.5604712 C12.9473554,32.7454027 12.7974375,32.8955671 12.612506,32.8955671 L11.6594923,32.8955671 L11.6594923,35.5418137 Z\\\" id=\\\"multibanco_t\\\" fill=\\\"#373535\\\"></path><path d=\\\"M10.1962896,35.2068658 C10.3812211,35.2068658 10.5311389,35.3567836 10.5311389,35.5417151 C10.5311389,35.7266466 10.3812211,35.876811 10.1962896,35.876811 L9.27163207,35.876811 L9.27138549,35.876811 L9.27138549,35.8753315 C8.92470056,35.8753315 8.60982385,35.7335507 8.38174165,35.5057151 C8.15489234,35.2783726 8.01385124,34.9644822 8.01360467,34.6180438 L8.01237179,34.6180438 L8.01237179,34.6170575 L8.01237179,32.5606192 C8.01237179,32.3756877 8.1622896,32.2255233 8.34722111,32.2255233 C8.53215261,32.2255233 8.68207042,32.3756877 8.68207042,32.5606192 L8.68207042,34.6170575 L8.68207042,34.6180438 L8.68083754,34.6180438 C8.68083754,34.7793041 8.74765946,34.9267562 8.85541289,35.0345096 C8.96242659,35.1412767 9.10963207,35.2080986 9.27138549,35.2080986 L9.27138549,35.2068658 L9.27163207,35.2068658 L10.1962896,35.2068658 Z\\\" id=\\\"multibanco_l\\\" fill=\\\"#373535\\\"></path><path d=\\\"M7.03114987,32.5605205 C7.03114987,32.375589 7.18106768,32.2256712 7.36599919,32.2256712 C7.5509307,32.2256712 7.70109508,32.375589 7.70109508,32.5605205 L7.70109508,34.371863 L7.70109508,34.3723562 L7.69961563,34.3723562 C7.69961563,34.7863562 7.53021837,35.1626301 7.25775261,35.4350959 C6.98627316,35.7065753 6.61073891,35.8749863 6.19698549,35.8752329 L6.19698549,35.8767123 L6.19624576,35.8767123 L6.19575261,35.8767123 L6.19575261,35.8752329 C5.78175261,35.8752329 5.40547864,35.7060822 5.13301289,35.4333699 C4.86153344,35.1618904 4.69312248,34.7863562 4.6928759,34.3728493 L4.69139645,34.3728493 L4.69139645,34.371863 L4.69139645,32.5605205 C4.69139645,32.375589 4.84156083,32.2256712 5.02649234,32.2256712 C5.21142385,32.2256712 5.36134165,32.375589 5.36134165,32.5605205 L5.36134165,34.371863 L5.36134165,34.3728493 L5.36010878,34.3728493 C5.36010878,34.6014247 5.45454713,34.810274 5.60668412,34.962411 C5.75808138,35.1135616 5.96668412,35.208 6.19575261,35.208 L6.19575261,35.2067671 L6.19624576,35.2067671 L6.19698549,35.2067671 L6.19698549,35.208 C6.42580741,35.208 6.6349033,35.1135616 6.78679371,34.9614247 C6.93819097,34.8100274 7.03238275,34.6014247 7.03238275,34.3723562 L7.03114987,34.3723562 L7.03114987,34.371863 L7.03114987,32.5605205 Z\\\" id=\\\"multibanco_u\\\" fill=\\\"#373535\\\"></path><path d=\\\"M4.56719645,35.5025589 C4.58889508,35.686011 4.45747042,35.8524493 4.27426494,35.8741479 C4.09056631,35.8956 3.92412796,35.7646685 3.90242933,35.5809699 L3.61541563,33.1692164 L2.59212796,35.542011 C2.51914165,35.7119014 2.32237453,35.7903123 2.1527307,35.717326 C2.07062111,35.6823123 2.00996357,35.6179562 1.97741563,35.542011 L1.97741563,35.542011 L0.954127956,33.1692164 L0.666867682,35.5809699 C0.645169051,35.7646685 0.478730695,35.8956 0.29527864,35.8741479 C0.111826586,35.8524493 -0.0193514965,35.686011 0.00234713363,35.5025589 L0.335470421,32.7022027 C0.357169051,32.5192438 0.468621106,32.3690795 0.628155353,32.2867233 C0.649114257,32.2756274 0.671059462,32.266011 0.693251243,32.2576274 C0.70188138,32.2541753 0.710264942,32.2512164 0.719141654,32.2485041 C0.747497819,32.2396274 0.780538914,32.2322301 0.817771791,32.2272986 L0.817771791,32.2275452 L0.82048412,32.2272986 L0.823443024,32.2268055 C0.998264942,32.2046137 1.17062111,32.2610795 1.29119645,32.3745041 C1.31536083,32.3974356 1.33829234,32.4238192 1.35949782,32.4531616 C1.37379919,32.4733808 1.38711426,32.4943397 1.39845672,32.5160384 C1.40560741,32.5281205 1.41177179,32.5402027 1.41719645,32.5532712 L2.2846485,34.5645863 L3.15210056,32.5532712 C3.22385398,32.387326 3.37130604,32.2739014 3.54390878,32.2359288 C3.57694987,32.2287781 3.60999097,32.2238466 3.64229234,32.2223671 C3.66719645,32.2211342 3.69185398,32.2211342 3.71527864,32.2226137 L3.71749782,32.2228603 L3.71749782,32.2228603 C3.7256348,32.2233534 3.73377179,32.2240932 3.74215535,32.2250795 L3.74486768,32.2255726 L3.74462111,32.2265589 L3.74610056,32.2268055 C3.92511426,32.2494904 4.07749782,32.3500932 4.16305946,32.4943397 L4.16281289,32.4943397 C4.18081289,32.5244219 4.19536083,32.5564767 4.20719645,32.5897644 C4.21434713,32.6107233 4.22075809,32.6324219 4.22544302,32.6553534 C4.22889508,32.6696548 4.23160741,32.6842027 4.23333344,32.6992438 L4.23382659,32.7022027 L4.56719645,35.5025589 Z\\\" id=\\\"multibanco_m\\\" fill=\\\"#373535\\\"></path></g></g></g></svg>\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-account.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"51217d9a\", content, true, {});","module.exports = \"{% block sw_order_detail_content_tabs_general %}\\n    {% parent %}\\n\\n    <sw-tabs-item v-if=\\\"isPayPalPayment\\\"\\n                  :route=\\\"{ name: 'swag.paypal.payment.detail', params: { id: $route.params.id } }\\\"\\n                  :title=\\\"$tc('swag-paypal.header')\\\">\\n        {{ $tc('swag-paypal.header') }}\\n    </sw-tabs-item>\\n{% endblock %}\\n\\n\\n{% block sw_order_detail_actions_slot_smart_bar_actions %}\\n    <template v-if=\\\"isEditable\\\">\\n        {% parent %}\\n    </template>\\n{% endblock %}\\n\";","module.exports = \"<svg width=\\\"42px\\\" height=\\\"28px\\\" viewBox=\\\"0 0 42 28\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><title>Sofort</title><desc>Created with Sketch.</desc><defs></defs><g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><g id=\\\"SPB_&amp;_AltPay_NewAssets\\\" transform=\\\"translate(-101.000000, -159.000000)\\\"><g id=\\\"Sofort\\\" transform=\\\"translate(101.000000, 159.000000)\\\"><path d=\\\"M2.625,28 L39.375,28 C40.8247475,28 42,26.8247475 42,25.375 L42,2.625 C42,1.17525253 40.8247475,-2.66314289e-16 39.375,0 L2.625,0 C1.17525253,2.66314289e-16 -1.7754286e-16,1.17525253 0,2.625 L0,25.375 C1.7754286e-16,26.8247475 1.17525253,28 2.625,28 Z\\\" id=\\\"Fill-1\\\" fill=\\\"#EB6F93\\\"></path><path d=\\\"M30.4616812,24.9935 C30.8116812,24.9935 31.0986812,24.7065 31.0986812,24.3565 C31.0986812,24.0065 30.8116812,23.7195 30.4616812,23.7195 C30.1116813,23.7195 29.8246812,24.0065 29.8246812,24.3565 C29.8246812,24.7065 30.1116813,24.9935 30.4616812,24.9935 M28.4058688,23.2085 L28.4058688,22.3825 C28.6158688,22.6065 28.9168687,22.7185 29.2948687,22.7185 L29.2948687,21.8085 C28.7768688,21.7945 28.4058688,21.4515 28.4058688,20.9895 L28.4058688,20.4575 L27.4538688,20.4575 L27.4538688,23.2575 C27.4538688,24.1675 28.0208688,24.9375 29.1828688,24.9375 L29.3228688,24.9375 L29.3228688,24.0415 C28.7908688,24.0625 28.4058688,23.7965 28.4058688,23.2085 M25.9794937,21.9345 L25.9794937,21.5495 L25.0554938,21.5495 L25.0554938,24.9375 L26.0074938,24.9375 L26.0074938,23.3905 C26.0074938,22.8305 26.3364938,22.5155 26.9104938,22.5155 L26.9104938,21.4935 C26.4764938,21.4795 26.1684938,21.6265 25.9794937,21.9345 M22.7126813,24.1325 C23.2026813,24.1325 23.5876813,23.7475 23.5876813,23.2435 C23.5876813,22.7395 23.2026813,22.3545 22.7126813,22.3545 C22.2226813,22.3545 21.8376813,22.7395 21.8376813,23.2435 C21.8376813,23.7475 22.2226813,24.1325 22.7126813,24.1325 M22.7126813,25.0285 C21.7046813,25.0285 20.8856812,24.2235 20.8856812,23.2435 C20.8856812,22.2635 21.7046813,21.4585 22.7126813,21.4585 C23.7206812,21.4585 24.5396813,22.2635 24.5396813,23.2435 C24.5396813,24.2235 23.7206812,25.0285 22.7126813,25.0285 M20.6358688,20.9335 L20.6358688,20.0375 L20.4958688,20.0375 C19.3338688,20.0375 18.7668688,20.8075 18.7668688,21.7175 L18.7668688,24.9375 L19.7188688,24.9375 L19.7188688,23.5235 C19.7188688,23.0545 20.0828688,22.7185 20.6078688,22.7045 L20.6078688,21.7945 C20.2298688,21.7945 19.9288687,21.9065 19.7188688,22.1305 L19.7188688,21.7665 C19.7188688,21.1785 20.1038688,20.9125 20.6358688,20.9335 M16.4524938,24.1325 C16.9424938,24.1325 17.3274938,23.7475 17.3274938,23.2435 C17.3274938,22.7395 16.9424938,22.3545 16.4524938,22.3545 C15.9624938,22.3545 15.5774938,22.7395 15.5774938,23.2435 C15.5774938,23.7475 15.9624938,24.1325 16.4524938,24.1325 M16.4524938,25.0285 C15.4444938,25.0285 14.6254938,24.2235 14.6254938,23.2435 C14.6254938,22.2635 15.4444938,21.4585 16.4524938,21.4585 C17.4604938,21.4585 18.2794938,22.2635 18.2794938,23.2435 C18.2794938,24.2235 17.4604938,25.0285 16.4524938,25.0285 M12.6046813,25.0285 C13.5566813,25.0285 14.2846813,24.3915 14.2846813,23.4535 C14.2846813,22.5855 13.6686813,22.2075 12.9126813,21.9835 C12.4296813,21.8435 12.1286812,21.7385 12.1286812,21.3955 C12.1286812,21.1085 12.3386813,20.8845 12.6676812,20.8845 C12.9476813,20.8845 13.1576813,21.0455 13.3046813,21.2905 L14.0956813,20.7935 C13.8506813,20.2475 13.2976813,19.9675 12.6956812,19.9675 C11.7436813,19.9675 11.1416813,20.6535 11.1416813,21.4445 C11.1416813,22.0745 11.5196813,22.5645 12.4576813,22.8375 C12.9686813,22.9845 13.2906813,23.0825 13.2906813,23.4885 C13.2906813,23.8665 13.0176813,24.1045 12.6186813,24.1045 C12.1916813,24.1045 11.8696813,23.8315 11.6736813,23.5795 L11.0156813,24.2445 C11.3656813,24.7205 11.9396813,25.0285 12.6046813,25.0285\\\" id=\\\"Fill-3\\\" fill=\\\"#FFFFFF\\\"></path><path d=\\\"M19.4911063,13.0137 C19.7877313,13.3055125 19.7938563,13.781075 19.5051063,14.080325 L19.4473563,14.1411375 C19.1586063,14.4368875 18.6808563,14.4438875 18.3802938,14.1547 L16.7007313,12.49045 C16.2382938,12.0262625 16.1717938,11.4540125 16.4662313,11.1517 L16.5252938,11.0900125 C16.7676688,10.8402 17.1631688,10.81395 17.4387938,11.03095 C17.5700438,11.1342 17.7599188,11.11145 17.8631688,10.9806375 C17.9664188,10.8493875 17.9441063,10.6595125 17.8128563,10.5562625 C17.2935438,10.148075 16.5497938,10.1975125 16.0895438,10.671325 L16.0304813,10.7330125 C15.4853563,11.2930125 15.5951688,12.2367 16.2737313,12.9178875 L17.9576688,14.5865125 C18.5006063,15.109325 19.3589813,15.0962 19.8822313,14.5607 L19.9417313,14.4981375 C20.4592938,13.9617625 20.4479188,13.1068875 19.9150438,12.5832 C19.7960438,12.4663875 19.6048563,12.4677 19.4876063,12.5867 C19.3707938,12.7057 19.3721063,12.8968875 19.4911063,13.0137\\\" id=\\\"Fill-5\\\" fill=\\\"#FFFFFF\\\"></path><path d=\\\"M18.485775,3.99105 L19.1730875,9.6448625 C19.1932125,9.8102375 19.34415,9.9283625 19.509525,9.9082375 C19.6753375,9.8881125 19.7934625,9.7376125 19.7733375,9.5718 L19.0838375,3.9004875 L19.0768375,3.8637375 C18.95915,3.3938625 19.2518375,2.8662375 19.6412125,2.78355 C19.859525,2.7367375 20.0874625,2.7796125 20.2738375,2.90255 C20.4602125,3.0254875 20.589275,3.2179875 20.6325875,3.4367375 L21.8295875,8.55155 C21.86765,8.7138625 22.0299625,8.8144875 22.1927125,8.7768625 C22.355025,8.7388 22.4560875,8.57605 22.418025,8.4137375 L21.2232125,3.3098625 C21.1514625,2.9423625 20.9283375,2.6103 20.606775,2.39855 C20.2852125,2.1863625 19.8919,2.112425 19.5152125,2.192925 C18.7824,2.348675 18.30115,3.2074875 18.485775,3.99105\\\" id=\\\"Fill-7\\\" fill=\\\"#FFFFFF\\\"></path><path d=\\\"M24.8038875,10.6347062 L26.1632,3.85739375 C26.3211375,3.12808125 25.8871375,2.39570625 25.1670125,2.18176875 C24.3602625,1.97789375 23.5522,2.45258125 23.341325,3.24401875 L21.836325,8.40083125 C21.78995,8.56095625 21.881825,8.72851875 22.04195,8.77533125 C22.202075,8.82214375 22.370075,8.73026875 22.4168875,8.57014375 L23.9236375,3.40633125 C24.05095,2.92770625 24.533075,2.64420625 25.0068875,2.76408125 C25.4120125,2.88439375 25.663575,3.30876875 25.5717,3.73445625 L24.211075,10.5161437 C24.1782625,10.6797687 24.284575,10.8385812 24.4482,10.8713937 C24.611825,10.9042062 24.771075,10.7983312 24.8038875,10.6347062\\\" id=\\\"Fill-9\\\" fill=\\\"#FFFFFF\\\"></path><path d=\\\"M21.380275,17.1639563 C19.2255875,17.1639563 17.4257125,15.5832688 17.4257125,13.3371437 C17.4257125,13.1704562 17.290525,13.0352688 17.1234,13.0352688 C16.9567125,13.0352688 16.8210875,13.1704562 16.8210875,13.3371437 C16.8210875,15.9354563 18.9079625,17.7681438 21.380275,17.7681438 C21.5474,17.7681438 21.6825875,17.6329562 21.6825875,17.4658313 C21.6825875,17.2991438 21.5474,17.1639563 21.380275,17.1639563\\\" id=\\\"Fill-11\\\" fill=\\\"#FFFFFF\\\"></path><path d=\\\"M20.3143062,11.8811875 C20.2674937,12.0505 20.1620562,12.1979375 20.0172437,12.29725 L19.9524937,12.340125 C19.6051187,12.57375 19.1352438,12.4831875 18.9003062,12.138 L17.5786188,10.1714375 C17.2181187,9.6245625 17.2653687,9.0488125 17.6123062,8.8108125 L17.6770562,8.7679375 C18.1219937,8.51025 18.5004312,8.7058125 18.8893687,9.2715 L19.9940562,10.9165 C20.0872437,11.0551875 20.2749312,11.0919375 20.4136187,10.9991875 C20.5523062,10.906 20.5890562,10.7183125 20.4958687,10.5800625 L19.3894313,8.9324375 C18.8425563,8.136625 18.1653063,7.786625 17.3576812,8.255625 L17.2736812,8.31075 C16.6239937,8.756125 16.5465562,9.70375 17.0754937,10.506125 L18.3993687,12.4761875 C18.8224312,13.097875 19.6663687,13.260625 20.2889312,12.8419375 L20.3558687,12.7973125 C20.6214312,12.6153125 20.8117437,12.348875 20.8966188,12.042625 C20.9412437,11.8820625 20.8471812,11.715375 20.6861813,11.67075 C20.5256187,11.6265625 20.3589312,11.720625 20.3143062,11.8811875\\\" id=\\\"Fill-13\\\" fill=\\\"#FFFFFF\\\"></path><path d=\\\"M22.3156063,12.8815313 C21.6877938,13.2319688 21.2971062,13.8921563 21.2485437,14.8905313 C21.2406688,15.0572188 21.3692937,15.1989688 21.5359812,15.2068438 C21.7026687,15.2151562 21.8444188,15.0865313 21.8522938,14.9198438 C21.8964813,14.0155313 22.2477937,13.5277188 22.8165438,13.3137813 C23.1210438,13.1991563 23.4522313,13.1764063 23.7436063,13.2074688 C23.7829812,13.2114062 23.8087938,13.2153438 23.8192937,13.2170938 C24.2086688,13.2897188 24.3267938,12.7117813 23.9404812,12.6255938 L21.6164812,12.1067188 C20.5284188,11.8092188 20.3643563,11.4067187 20.5660437,10.7360313 C20.6526688,10.4433438 20.8316063,10.2932813 21.1011063,10.2337813 C21.2787312,10.1939688 21.4786688,10.1992188 21.6685438,10.2324688 C21.7236687,10.2420938 21.7621688,10.2508438 21.7792313,10.2560938 L25.3072313,11.0794688 C25.3304187,11.0838437 25.3470438,11.0882187 25.3759188,11.1013437 C25.4341062,11.1275938 25.4949188,11.1700313 25.5544187,11.2334688 C25.7906688,11.4859063 25.9210438,11.9623438 25.8549813,12.7445937 C25.6248563,15.4877188 24.3460437,17.1904688 21.3146062,17.1637812 C21.1479188,17.1624688 21.0114188,17.2963438 21.0101062,17.4634688 C21.0083563,17.6301562 21.1426688,17.7666563 21.3093563,17.7679688 C24.7161688,17.7977188 26.2041063,15.8167187 26.4574188,12.7953438 C26.5370438,11.8547187 26.3602938,11.2102813 25.9954188,10.8209063 C25.7946063,10.6060938 25.5824188,10.5098438 25.4192313,10.4862188 L21.9314813,9.67159375 C21.9096063,9.66503125 21.8501062,9.65103125 21.7731062,9.63746875 C21.5114812,9.59153125 21.2362938,9.58496875 20.9698562,9.64403125 C20.4964812,9.74903125 20.1394813,10.0491562 19.9867938,10.5632188 C19.6958563,11.5314063 20.0064813,12.2926563 21.4707938,12.6929688 L22.3156063,12.8815313 Z\\\" id=\\\"Fill-15\\\" fill=\\\"#FFFFFF\\\"></path></g></g></g></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"32\\\" height=\\\"40\\\" viewBox=\\\"0 0 48 48\\\"><g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><path fill=\\\"#013088\\\" d=\\\"M1.36196923,45.9634625 C0.525969231,45.9634625 -0.113723077,45.2159 0.0165846154,44.3907125 L6.62843077,2.599775 C6.80104615,1.4978375 7.75381538,0.6878375 8.87073846,0.6878375 L24.7445846,0.6878375 C30.2124308,0.6878375 34.4855077,1.8387125 36.8530462,4.5269 C39.0005846,6.9687125 39.6284308,9.6653375 39.0056615,13.6259 C39.8924308,14.0946875 40.6522769,14.670125 41.2648923,15.3636875 C43.2888923,17.66375 43.6848923,20.934125 42.9199692,24.8508125 C41.0888923,34.2265625 34.8239692,37.4665625 26.8210462,37.4665625 L25.5856615,37.4665625 C24.6075077,37.4665625 23.7748923,38.1753125 23.6225846,39.1405625 L23.5227385,39.6805625 L21.9675077,49.5220625 L21.8862769,49.9405625 C21.7322769,50.9024375 20.9013538,51.6111875 19.9232,51.6111875 L11.6630462,51.6111875 C10.9319692,51.6111875 10.3735077,50.9598125 10.4868923,50.2375625 L11.1620698,45.9634625 L1.36196923,45.9634625 Z\\\"></path><path fill=\\\"#019CDE\\\" d=\\\"M39.0039692,13.6255625 C38.9565846,13.927625 38.9024308,14.2364375 38.8415077,14.5536875 C36.7481231,25.271 29.5862769,28.973375 20.4393538,28.973375 L15.7821231,28.973375 C14.6635077,28.973375 13.7208923,29.783375 13.5465846,30.883625 L11.1621231,45.963125 L10.4868923,50.2375625 C10.3735077,50.9598125 10.9319692,51.6111875 11.6630462,51.6111875 L19.9232,51.6111875 C20.9013538,51.6111875 21.7322769,50.9024375 21.8862769,49.9405625 L21.9675077,49.5220625 L23.5227385,39.6805625 L23.6225846,39.1405625 C23.7748923,38.1753125 24.6075077,37.4665625 25.5856615,37.4665625 L26.8210462,37.4665625 C34.8239692,37.4665625 41.0888923,34.2265625 42.9199692,24.8508125 C43.6848923,20.934125 43.2888923,17.66375 41.2648923,15.3636875 C40.6522769,14.670125 39.8924308,14.0946875 39.0039692,13.6255625\\\"></path><path fill=\\\"#012269\\\" d=\\\"M36.8142923,12.7546437 C36.4944462,12.6618312 36.1644462,12.5774562 35.8259846,12.5015187 C35.4858308,12.4272687 35.1372154,12.3614562 34.7784462,12.3040812 C33.5227538,12.1015812 32.1469077,12.0053937 30.6729077,12.0053937 L18.2310615,12.0053937 C17.9247538,12.0053937 17.6336769,12.0745812 17.3730615,12.1994562 C16.7993692,12.4745187 16.3729077,13.0162062 16.2696769,13.6793937 L13.6229077,30.3957687 L13.5467538,30.8834562 C13.7210615,29.7832062 14.6636769,28.9732062 15.7822923,28.9732062 L20.4395231,28.9732062 C29.5864462,28.9732062 36.7482923,25.2691437 38.8416769,14.5535187 C38.9042923,14.2362687 38.9567538,13.9274562 39.0041385,13.6253937 C38.4744462,13.3452687 37.9007538,13.1056437 37.2830615,12.9014562 C37.1307538,12.8508312 36.9733692,12.8018937 36.8142923,12.7546437\\\"></path></g></svg>\"","module.exports = \"{% block swag_paypal_pos_getting_started %}\\n    <sw-card :title=\\\"$tc('swag-paypal-pos.gettingStarted.cardTitle')\\\">\\n\\n        {% block swag_paypal_pos_getting_started_reader %}\\n            <sw-container\\n                    class=\\\"swag-paypal-pos-getting-started__container-reader\\\"\\n                    columns=\\\"1fr 3fr\\\"\\n                    justify=\\\"left\\\"\\n                    align=\\\"center\\\">\\n\\n                {% block swag_paypal_pos_getting_started_reader_image %}\\n                    <img class=\\\"swag-paypal-pos-getting-started__image\\\"\\n                         :src=\\\"'swagpaypal/static/img/paypal-pos-reader.png' | asset\\\"\\n                         :alt=\\\"$tc('swag-paypal-pos.gettingStarted.readerImageAlt')\\\"/>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_getting_started_reader_description %}\\n                    <div class=\\\"swag-paypal-pos-getting-started__description\\\">\\n\\n                        {% block swag_paypal_pos_getting_started_reader_description_headline %}\\n                            <div class=\\\"swag-paypal-pos-getting-started__description-headline\\\">\\n                                {{ $tc('swag-paypal-pos.gettingStarted.readerHeadline') }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_pos_getting_started_reader_description_text %}\\n                            <div class=\\\"swag-paypal-pos-getting-started__description-text\\\">\\n                                {{ $tc('swag-paypal-pos.gettingStarted.readerText') }}\\n\\n                                {% block swag_paypal_pos_getting_started_reader_description_link %}\\n                                    <sw-external-link :href=\\\"$tc('swag-paypal-pos.gettingStarted.readerLinkTarget')\\\"\\n                                                      class=\\\"swag-paypal-pos-getting-started__description-text-link\\\">\\n                                        {{ $tc('swag-paypal-pos.gettingStarted.readerLinkText') }}\\n                                    </sw-external-link>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </sw-container>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_getting_started_app %}\\n            <sw-container\\n                    class=\\\"swag-paypal-pos-getting-started__container-app\\\"\\n                    columns=\\\"1fr 3fr\\\"\\n                    justify=\\\"left\\\"\\n                    align=\\\"center\\\">\\n\\n                {% block swag_paypal_pos_getting_started_app_image %}\\n                    <img class=\\\"swag-paypal-pos-getting-started__image\\\"\\n                         :src=\\\"'swagpaypal/static/img/paypal-pos-app.png' | asset\\\"\\n                         :alt=\\\"$tc('swag-paypal-pos.gettingStarted.appImageAlt')\\\"/>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_getting_started_app_description %}\\n                    <div class=\\\"swag-paypal-pos-getting-started__description \\\">\\n\\n                        {% block swag_paypal_pos_getting_started_app_description_headline %}\\n                            <div class=\\\"swag-paypal-pos-getting-started__description-headline\\\">\\n                                {{ $tc('swag-paypal-pos.gettingStarted.appHeadline') }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_pos_getting_started_app_description_text %}\\n                            <div v-html=\\\"$tc('swag-paypal-pos.gettingStarted.appText')\\\"\\n                                 class=\\\"swag-paypal-pos-getting-started__description-text\\\">\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </sw-container>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_content_card_channel_config_behavior %}\\n    <sw-card :title=\\\"$tc('swag-paypal.settingForm.behavior.cardTitle')\\\">\\n\\n        {% block swag_paypal_content_card_channel_config_behavior_settings %}\\n            <div v-if=\\\"actualConfigData\\\" class=\\\"swag-paypal-settings-behavior-field\\\">\\n\\n                {# @deprecated tag:v6.0.0 - Will be removed without replacement #}\\n                {% block swag_paypal_content_card_channel_config_behavior_settings_merchant_location %}\\n                    <sw-inherit-wrapper v-model=\\\"actualConfigData['SwagPayPal.settings.merchantLocation']\\\"\\n                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.merchantLocation']\\\"\\n                                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\"\\n                                        :label=\\\"$tc('swag-paypal.settingForm.behavior.merchantLocation.label')\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-single-select name=\\\"SwagPayPal.settings.merchantLocation\\\"\\n                                              labelProperty=\\\"name\\\"\\n                                              valueProperty=\\\"id\\\"\\n                                              :options=\\\"merchantLocationOptions\\\"\\n                                              :isInherited=\\\"props.isInherited\\\"\\n                                              :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                              :value=\\\"props.currentValue\\\"\\n                                              @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-single-select>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_behavior_settings_intent %}\\n                    <sw-inherit-wrapper v-model=\\\"actualConfigData['SwagPayPal.settings.intent']\\\"\\n                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.intent']\\\"\\n                                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\"\\n                                        :label=\\\"$tc('swag-paypal.settingForm.behavior.intent.label')\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-single-select name=\\\"SwagPayPal.settings.intent\\\"\\n                                              labelProperty=\\\"name\\\"\\n                                              valueProperty=\\\"id\\\"\\n                                              :options=\\\"intentOptions\\\"\\n                                              :isInherited=\\\"props.isInherited\\\"\\n                                              :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                              :value=\\\"props.currentValue\\\"\\n                                              @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-single-select>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_behavior_settings_submit_cart %}\\n                    <sw-inherit-wrapper v-model=\\\"actualConfigData['SwagPayPal.settings.submitCart']\\\"\\n                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.submitCart']\\\"\\n                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-switch-field name=\\\"SwagPayPal.settings.submitCart\\\"\\n                                             bordered\\n                                             :mapInheritance=\\\"props\\\"\\n                                             :label=\\\"$tc('swag-paypal.settingForm.behavior.submitCart.label')\\\"\\n                                             :helpText=\\\"$tc('swag-paypal.settingForm.behavior.submitCart.helpText')\\\"\\n                                             :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                             :value=\\\"props.currentValue\\\"\\n                                             @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-switch-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_behavior_settings_brand_name %}\\n                    <sw-inherit-wrapper v-model=\\\"actualConfigData['SwagPayPal.settings.brandName']\\\"\\n                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.brandName']\\\"\\n                                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-text-field name=\\\"SwagPayPal.settings.brandName\\\"\\n                                           :mapInheritance=\\\"props\\\"\\n                                           :label=\\\"$tc('swag-paypal.settingForm.behavior.brandName.label')\\\"\\n                                           :helpText=\\\"$tc('swag-paypal.settingForm.behavior.brandName.tooltipText')\\\"\\n                                           :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                           :value=\\\"props.currentValue\\\"\\n                                           @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-text-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_behavior_settings_landing_page %}\\n                    <sw-inherit-wrapper v-model=\\\"actualConfigData['SwagPayPal.settings.landingPage']\\\"\\n                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.landingPage']\\\"\\n                                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\"\\n                                        :label=\\\"$tc('swag-paypal.settingForm.behavior.landingPage.label')\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-single-select name=\\\"SwagPayPal.settings.landingPage\\\"\\n                                              labelProperty=\\\"name\\\"\\n                                              valueProperty=\\\"id\\\"\\n                                              :options=\\\"landingPageOptions\\\"\\n                                              :isInherited=\\\"props.isInherited\\\"\\n                                              :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                              :value=\\\"props.currentValue\\\"\\n                                              @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-single-select>\\n\\n                            {% block swag_paypal_content_card_channel_config_behaviour_settings_landing_page_hint %}\\n                                <swag-paypal-settings-hint :hintText=\\\"landingPageHint\\\"></swag-paypal-settings-hint>\\n                            {% endblock %}\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_behavior_settings_send_order_number %}\\n                    <sw-inherit-wrapper v-model=\\\"actualConfigData['SwagPayPal.settings.sendOrderNumber']\\\"\\n                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.sendOrderNumber']\\\"\\n                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-switch-field name=\\\"SwagPayPal.settings.sendOrderNumber\\\"\\n                                             bordered\\n                                             :mapInheritance=\\\"props\\\"\\n                                             :label=\\\"$tc('swag-paypal.settingForm.behavior.sendOrderNumber.label')\\\"\\n                                             :helpText=\\\"$tc('swag-paypal.settingForm.behavior.sendOrderNumber.helpText')\\\"\\n                                             :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                             :value=\\\"props.currentValue\\\"\\n                                             @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-switch-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n\\n\\n                {% block swag_paypal_content_card_channel_config_behavior_settings_order_number %}\\n                    <sw-container columns=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n\\n                        {% block swag_paypal_content_card_channel_config_behavior_settings_order_number_prefix %}\\n                            <sw-inherit-wrapper v-model=\\\"actualConfigData['SwagPayPal.settings.orderNumberPrefix']\\\"\\n                                                :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.orderNumberPrefix']\\\"\\n                                                :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                <template #content=\\\"props\\\">\\n                                    <sw-text-field name=\\\"SwagPayPal.settings.orderNumberPrefix\\\"\\n                                                   :mapInheritance=\\\"props\\\"\\n                                                   :label=\\\"$tc('swag-paypal.settingForm.behavior.orderNumberPrefix.label')\\\"\\n                                                   :helpText=\\\"$tc('swag-paypal.settingForm.behavior.orderNumberPrefix.tooltipText')\\\"\\n                                                   :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                                   :value=\\\"props.currentValue\\\"\\n                                                   @change=\\\"props.updateCurrentValue\\\">\\n                                    </sw-text-field>\\n                                </template>\\n                            </sw-inherit-wrapper>\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_content_card_channel_config_behavior_settings_order_number_suffix %}\\n                            <sw-inherit-wrapper v-model=\\\"actualConfigData['SwagPayPal.settings.orderNumberSuffix']\\\"\\n                                                :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.orderNumberSuffix']\\\"\\n                                                :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                <template #content=\\\"props\\\">\\n                                    <sw-text-field name=\\\"SwagPayPal.settings.orderNumberSuffix\\\"\\n                                                   :mapInheritance=\\\"props\\\"\\n                                                   :label=\\\"$tc('swag-paypal.settingForm.behavior.orderNumberSuffix.label')\\\"\\n                                                   :helpText=\\\"$tc('swag-paypal.settingForm.behavior.orderNumberSuffix.tooltipText')\\\"\\n                                                   :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                                   :value=\\\"props.currentValue\\\"\\n                                                   @change=\\\"props.updateCurrentValue\\\">\\n                                    </sw-text-field>\\n                                </template>\\n                            </sw-inherit-wrapper>\\n                        {% endblock %}\\n\\n                    </sw-container>\\n                {% endblock %}\\n\\n                {% block swag_paypal_content_card_channel_config_behavior_settings_logging_level %}\\n                    <sw-single-select v-model=\\\"allConfigs['null']['SwagPayPal.settings.loggingLevel']\\\"\\n                                      :options=\\\"loggingLevelOptions\\\"\\n                                      :label=\\\"$tc('swag-paypal.settingForm.behavior.loggingLevel.label')\\\"\\n                                      :helpText=\\\"$tc('swag-paypal.settingForm.behavior.loggingLevel.tooltipText')\\\"\\n                                      :disabled=\\\"!acl.can('swag_paypal.editor')\\\">\\n                    </sw-single-select>\\n                {% endblock %}\\n\\n            </div>\\n        {% endblock %}\\n\\n    </sw-card>\\n{% endblock %}\\n\";","module.exports = \"<svg width=\\\"24px\\\" height=\\\"21px\\\" viewBox=\\\"0 0 24 21\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><title>iDEAL logo</title><desc>Created with Sketch.</desc><defs></defs><g id=\\\"SPB_&amp;_AltPay_VX\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><g id=\\\"SPB_&amp;_AltPay_NewAssets\\\" transform=\\\"translate(-100.000000, -159.000000)\\\"><g id=\\\"iDEAL-logo\\\" transform=\\\"translate(100.000000, 159.000000)\\\"><g id=\\\"Group-6\\\"><path d=\\\"M13.6553485,0.0389108662 L-1.17893429e-05,0.0389108662 L-1.17893429e-05,20.5358047 L13.6553485,20.5358047 L13.6553485,20.5319152 C16.6381702,20.4916975 19.0011475,19.7582875 20.6780244,18.3462323 C22.7174235,16.6289266 23.7514275,13.9174958 23.7514275,10.2873578 C23.7514275,8.55204364 23.4794474,6.99557009 22.9430715,5.66111097 C22.4299207,4.38452806 21.6715909,3.29911559 20.6892242,2.43497853 C18.9590203,0.913082916 16.5302977,0.0901748823 13.6553485,0.043422722 L13.6553485,0.0389108662 Z\\\" id=\\\"Path\\\" fill=\\\"#000000\\\"></path><path d=\\\"M13.3969654,1.40024665 C16.0434764,1.40024665 18.2491446,2.10993044 19.7755502,3.45259648 C21.501117,4.97036919 22.3760041,7.2698987 22.3760041,10.2873578 C22.3760041,16.2674336 19.4389251,19.174469 13.3969654,19.174469 L1.37541157,19.174469 L1.37541157,1.40024665 L13.3969654,1.40024665 Z\\\" id=\\\"Path\\\" fill=\\\"#FFFFFF\\\"></path><path d=\\\"M13.021294,17.8381857 L8.19359736,17.8381857 L8.19359736,3.05754072 L13.021294,3.05754072 L12.8264555,3.05754072 C16.8525947,3.05754072 21.1381388,4.63019471 21.1381388,10.4672914 C21.1381388,16.6381098 16.8525947,17.8381857 12.8264555,17.8381857 L13.021294,17.8381857 Z\\\" id=\\\"Fill-7\\\" fill=\\\"#CD0067\\\"></path><polygon id=\\\"Fill-1\\\" fill=\\\"#000000\\\" points=\\\"2.64010548 17.8312039 6.4461377 17.8312039 6.4461377 11.5761383 2.64010548 11.5761383\\\"></polygon><path d=\\\"M6.73349115,8.44882327 C6.73349115,9.62637872 5.7688478,10.5816086 4.5790673,10.5816086 C3.3893261,10.5816086 2.42464345,9.62637872 2.42464345,8.44882327 C2.42464345,7.27122892 3.3893261,6.3164269 4.5790673,6.3164269 C5.7688478,6.3164269 6.73349115,7.27122892 6.73349115,8.44882327\\\" id=\\\"Fill-2\\\" fill=\\\"#000000\\\"></path></g><g id=\\\"IDEAL-text\\\" transform=\\\"translate(7.230797, 6.766850)\\\" fill=\\\"#FFFFFF\\\"><path d=\\\"M0.855246103,0.709022571 L0.855246103,3.0597772 L1.39806676,3.0597772 C1.60107924,3.0597772 1.74762078,3.04845867 1.83769136,3.02586049 C1.95558479,2.9968057 2.05339704,2.94760313 2.1312067,2.8782139 C2.20893777,2.80878578 2.27244303,2.69462805 2.32156529,2.53562403 C2.37068756,2.37665891 2.39524869,2.16001204 2.39524869,1.88560564 C2.39524869,1.61123814 2.37068756,1.40062004 2.32156529,1.25375136 C2.27244303,1.10688268 2.20367186,0.9922971 2.11525179,0.909994628 C2.02679242,0.827692156 1.91463647,0.771994075 1.77874464,0.742900385 C1.6771991,0.720341106 1.47827359,0.709022571 1.1819288,0.709022571 L0.855246103,0.709022571 Z M0.130712376,0.106145296 L1.45618822,0.106145296 C1.75508736,0.106145296 1.98297536,0.128782365 2.13981292,0.174056504 C2.35048848,0.235511091 2.53098333,0.344729116 2.68125815,0.501593893 C2.83153298,0.658458671 2.94585031,0.850562598 3.02424944,1.07775009 C3.10264857,1.30497648 3.14186779,1.58517828 3.14186779,1.91835549 C3.14186779,2.21108158 3.10512433,2.46335655 3.03163743,2.67525819 C2.94180263,2.93402867 2.81357388,3.14347991 2.64699046,3.30357299 C2.52119817,3.42488746 2.35131374,3.51951974 2.13733716,3.58743095 C1.97723788,3.637567 1.76326131,3.66265448 1.49540743,3.66265448 L0.130712376,3.66265448 L0.130712376,0.106145296 Z\\\" id=\\\"Fill-10\\\"></path><path d=\\\"M1.45618822,0.203383566 C1.74439836,0.203383566 1.96513416,0.224931567 2.11226516,0.267405243 C2.30486373,0.323570068 2.47239029,0.424931241 2.60997192,0.568493823 C2.74971494,0.714390124 2.85782321,0.89630348 2.93131012,1.1092164 C3.00585806,1.32524094 3.04362326,1.5974692 3.04362326,1.91835549 C3.04362326,2.19890735 3.00833383,2.44293651 2.93869811,2.6436752 C2.85436501,2.88665419 2.73317056,3.08521473 2.57853368,3.23383371 C2.46417705,3.3441019 2.30568898,3.43188862 2.10735293,3.49486012 C1.95794266,3.54161228 1.75194354,3.56541621 1.49540743,3.56541621 L0.228956902,3.56541621 L0.228956902,0.203383566 L1.45618822,0.203383566 Z M0.0324678508,0.00890702556 L0.0324678508,3.75989275 L1.49540743,3.75989275 C1.77206401,3.75989275 1.99802642,3.73301609 2.16696771,3.68011847 C2.39489501,3.60781209 2.57935893,3.50458395 2.71552584,3.37323449 C2.89240529,3.2032231 3.03006552,2.97899165 3.12453745,2.70684118 C3.20124678,2.48572135 3.24011231,2.22041645 3.24011231,1.91835549 C3.24011231,1.57607678 3.19877101,1.28268947 3.11722806,1.04632268 C3.03458476,0.806805376 2.9118577,0.601010301 2.75254438,0.434693963 C2.59087319,0.265927222 2.39406975,0.146829788 2.16755718,0.0807855549 C1.99995202,0.0323997917 1.76734828,0.00890702556 1.45618822,0.00890702556 L0.0324678508,0.00890702556 Z\\\" id=\\\"Fill-12\\\"></path><path d=\\\"M1.18190915,0.806260842 C1.54014799,0.806260842 1.6925056,0.823413673 1.75722909,0.837804937 C1.8755548,0.863125782 1.97313126,0.911200383 2.04791499,0.980822984 C2.12387766,1.05153465 2.18459278,1.15367373 2.22829194,1.28428418 C2.2738774,1.42061223 2.29698451,1.62294563 2.29698451,1.88560564 C2.29698451,2.14904356 2.27364162,2.35818364 2.22758458,2.50719156 C2.18400331,2.64830374 2.12941865,2.74884811 2.06540252,2.80598532 C2.00008956,2.86425049 1.91548137,2.90649079 1.81393583,2.93153937 C1.73184271,2.95211499 1.5920211,2.96253893 1.39804711,2.96253893 L0.953510277,2.96253893 L0.953510277,0.806260842 L1.18190915,0.806260842 Z M0.756981929,0.611784301 L0.756981929,3.15701547 L1.39804711,3.15701547 C1.61127702,3.15701547 1.76296657,3.14491903 1.86183986,3.12014272 C1.99454857,3.08743177 2.10745118,3.03029456 2.19697159,2.9504036 C2.28908565,2.86817891 2.36056837,2.74180806 2.41550671,2.5640565 C2.46796929,2.39427848 2.49347357,2.17234185 2.49347357,1.88560564 C2.49347357,1.59813042 2.4677335,1.38148355 2.41479935,1.22317965 C2.36072556,1.06149185 2.28256222,0.93228164 2.18254929,0.839166272 C2.08135743,0.744961836 1.95249991,0.680628997 1.79951354,0.647879147 C1.69050141,0.62364737 1.48823558,0.611784301 1.18190915,0.611784301 L0.756981929,0.611784301 Z\\\" id=\\\"Fill-14\\\"></path><polygon id=\\\"Fill-16\\\" points=\\\"3.96169084 3.66263503 3.96169084 0.106125848 6.62164172 0.106125848 6.62164172 0.709003124 4.68622457 0.709003124 4.68622457 1.49663311 6.48657515 1.49663311 6.48657515 2.09951039 4.68622457 2.09951039 4.68622457 3.05975775 6.69041289 3.05975775 6.69041289 3.66263503\\\"></polygon><path d=\\\"M6.52341684,0.203383566 L6.52341684,0.611784301 L4.58799969,0.611784301 L4.58799969,1.59389083 L6.38835027,1.59389083 L6.38835027,2.00229157 L4.58799969,2.00229157 L4.58799969,3.15701547 L6.59218801,3.15701547 L6.59218801,3.56541621 L4.05995502,3.56541621 L4.05995502,0.203383566 L6.52341684,0.203383566 Z M3.86346597,0.00890702556 L3.86346597,3.75989275 L6.78867706,3.75989275 L6.78867706,2.96253893 L4.78448874,2.96253893 L4.78448874,2.19676811 L6.58483932,2.19676811 L6.58483932,1.39941429 L4.78448874,1.39941429 L4.78448874,0.806260842 L6.7199059,0.806260842 L6.7199059,0.00890702556 L3.86346597,0.00890702556 Z\\\" id=\\\"Fill-18\\\"></path><path d=\\\"M9.41230498,2.25268011 L8.91699538,0.93510155 L8.43162812,2.25268011 L9.41230498,2.25268011 Z M10.7479982,3.66263503 L9.95866243,3.66263503 L9.6451445,2.85555739 L8.20959549,2.85555739 L7.91218967,3.66263503 L7.14242416,3.66263503 L8.53879325,0.106125848 L9.31103452,0.106125848 L10.7479982,3.66263503 Z\\\" id=\\\"Fill-20\\\"></path><path d=\\\"M9.24452298,0.203383566 C9.29042282,0.316957866 10.504843,3.32274838 10.6028911,3.56541621 L10.0261564,3.56541621 C9.98493302,3.45923202 9.71259919,2.75833856 9.71259919,2.75833856 L8.14084398,2.75833856 C8.14084398,2.75833856 7.88336472,3.45701498 7.84347745,3.56541621 L7.28599871,3.56541621 C7.38066714,3.32430419 8.56078038,0.318591469 8.60601216,0.203383566 L9.24452298,0.203383566 Z M8.47153505,0.00890702556 L6.99884961,3.75989275 L7.98094119,3.75989275 C7.98094119,3.75989275 8.23838114,3.06117743 8.27830772,2.95281511 L9.57768981,2.95281511 C9.61887392,3.0589604 9.89120774,3.75989275 9.89120774,3.75989275 L10.8931054,3.75989275 L9.37754606,0.00890702556 L8.47153505,0.00890702556 Z\\\" id=\\\"Fill-22\\\"></path><path d=\\\"M8.91789923,1.21642742 C9.02557523,1.50285247 9.20764198,1.98709906 9.27091146,2.15543795 L8.5719999,2.15543795 C8.63377606,1.98779917 8.81222741,1.50339701 8.91789923,1.21642742 L8.91789923,1.21642742 Z M8.29125634,2.34991449 L9.5536985,2.34991449 L8.91605223,0.653767897 L8.29125634,2.34991449 Z\\\" id=\\\"Fill-24\\\"></path><polygon id=\\\"Fill-26\\\" points=\\\"11.3541316 3.66263503 11.3541316 0.135297329 12.0786653 0.135297329 12.0786653 3.05975775 13.8839281 3.05975775 13.8839281 3.66263503\\\"></polygon><path d=\\\"M11.9804405,0.232555047 L11.9804405,3.15701547 L13.7857033,3.15701547 L13.7857033,3.56541621 L11.4523565,3.56541621 L11.4523565,0.232555047 L11.9804405,0.232555047 Z M11.2559067,0.0380785066 L11.2559067,3.75989275 L13.9821923,3.75989275 L13.9821923,2.96253893 L12.1769295,2.96253893 L12.1769295,0.0380785066 L11.2559067,0.0380785066 Z\\\" id=\\\"Fill-28\\\"></path></g></g></g></g></svg>\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-sales-channel-modal-grid.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0e20e19b\", content, true, {});","Shopware.Service('privileges').addPrivilegeMappingEntry({\n    category: 'permissions',\n    parent: 'swag_paypal',\n    key: 'swag_paypal',\n    roles: {\n        viewer: {\n            privileges: [\n                'sales_channel:read',\n                'sales_channel_payment_method:read',\n                'system_config:read',\n            ],\n            dependencies: [],\n        },\n        editor: {\n            privileges: [\n                'sales_channel:update',\n                'sales_channel_payment_method:create',\n                'sales_channel_payment_method:update',\n                'system_config:update',\n                'system_config:create',\n                'system_config:delete',\n            ],\n            dependencies: [\n                'swag_paypal.viewer',\n            ],\n        },\n    },\n});\n\nShopware.Service('privileges').addPrivilegeMappingEntry({\n    category: 'permissions',\n    parent: null,\n    key: 'sales_channel',\n    roles: {\n        viewer: {\n            privileges: [\n                'swag_paypal_pos_sales_channel:read',\n                'swag_paypal_pos_sales_channel_run:read',\n                'swag_paypal_pos_sales_channel_run:update',\n                'swag_paypal_pos_sales_channel_run:create',\n                'swag_paypal_pos_sales_channel_run_log:read',\n                'sales_channel_payment_method:read',\n            ],\n        },\n        editor: {\n            privileges: [\n                'swag_paypal_pos_sales_channel:update',\n                'swag_paypal_pos_sales_channel_run:delete',\n                'payment_method:update',\n            ],\n        },\n        creator: {\n            privileges: [\n                'swag_paypal_pos_sales_channel:create',\n                'payment_method:create',\n                'shipping_method:create',\n                'delivery_time:create',\n            ],\n        },\n        deleter: {\n            privileges: [\n                'swag_paypal_pos_sales_channel:delete',\n            ],\n        },\n    },\n});\n","module.exports = \"{% block swag_paypal_pos_account %}\\n    <sw-card class=\\\"swag-paypal-pos-account\\\"\\n             :title=\\\"$tc('sw-sales-channel.detail.titleAccount')\\\"\\n             :isLoading=\\\"isLoading\\\">\\n\\n        {% block swag_paypal_pos_account_grid %}\\n            <sw-container columns=\\\"min-content 1fr\\\" align=\\\"center\\\">\\n\\n                {% block swag_paypal_pos_account_grid_logo %}\\n                    <img class=\\\"swag-paypal-pos-account__logo\\\"\\n                         alt=\\\"Zettle Logo\\\"\\n                         :src=\\\"'/swagpaypal/static/img/paypal-pos-logo.svg' | asset\\\">\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_account_grid_container %}\\n                    <div class=\\\"swag-paypal-pos-account__container\\\">\\n\\n                        {% block swag_paypal_pos_account_grid_container_info %}\\n                            <div class=\\\"swag-paypal-pos-account__account-info\\\">\\n\\n                                {% block swag_paypal_pos_account_grid_container_info_name %}\\n                                    <div class=\\\"swag-paypal-pos-account__name\\\">\\n                                        {{ accountName }}\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block swag_paypal_pos_account_grid_container_info_email %}\\n                                    <div class=\\\"swag-paypal-pos-account__email\\\">\\n                                        {{ accountEmail }}\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block swag_paypal_pos_account_grid_container_info_link %}\\n                                    <sw-external-link href=\\\"https://my.zettle.com\\\"\\n                                                      class=\\\"swag-paypal-pos-account__manage-link\\\">\\n\\n                                        {% block swag_paypal_pos_account_grid_container_info_link_text %}\\n                                            {{ $tc('swag-paypal-pos.account.manageAccount') }}\\n                                        {% endblock %}\\n\\n                                    </sw-external-link>\\n                                {% endblock %}\\n\\n                                {% block swag_paypal_pos_account_grid_container_info_edit_button %}\\n                                    {# ToDo PPI-109 - Implement edit connection functionality #}\\n                                    <sw-button v-if=\\\"false\\\"\\n                                               class=\\\"swag-paypal-pos-account__edit-connection-button\\\"\\n                                               size=\\\"small\\\"\\n                                               block>\\n                                        {{ $tc('swag-paypal-pos.account.editConnection') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_pos_account_grid_container_status %}\\n                            <div class=\\\"swag-paypal-pos-account__status-container\\\">\\n\\n                                {% block swag_paypal_pos_account_grid_container_status_label %}\\n                                    <sw-label class=\\\"swag-paypal-pos-account__status-label\\\"\\n                                              size=\\\"medium\\\"\\n                                              appearance=\\\"pill\\\"\\n                                              :variant=\\\"connectionStatusVariant\\\"\\n                                              :ghost=\\\"false\\\"\\n                                              :caps=\\\"false\\\">\\n\\n                                        {% block swag_paypal_pos_account_grid_container_status_label_badge %}\\n                                            <sw-color-badge class=\\\"swag-paypal-pos-account__status-color-badge\\\"\\n                                                            rounded\\n                                                            :variant=\\\"connectionStatusVariant\\\">\\n                                            </sw-color-badge>\\n                                        {% endblock %}\\n\\n                                        {% block swag_paypal_pos_account_grid_container_status_label_text %}\\n                                            <span class=\\\"swag-paypal-pos-account__status-text\\\">\\n                                                {{ connectionStatusText }}\\n                                            </span>\\n                                        {% endblock %}\\n                                    </sw-label>\\n                                {% endblock %}\\n\\n                                {% block swag_paypal_pos_account_grid_container_status_updated %}\\n                                    <div v-if=\\\"lastRun\\\"\\n                                         class=\\\"swag-paypal-pos-account__status-updated\\\">\\n                                        {{ $tc('swag-paypal-pos.account.lastUpdated') }} {{ lastRun.updatedAt | date({\\n                                            hour: '2-digit',\\n                                            minute: '2-digit',\\n                                            second: '2-digit',\\n                                            day: '2-digit',\\n                                            month: 'short',\\n                                            year: 'numeric'\\n                                        }) }}\\n                                    </div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </sw-container>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-continue-setup.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"41521fbb\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-detail-runs.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7f0bcc6e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-wizard-sync-prices.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"47cdf892\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-settings-payment-list.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"333a4132\", content, true, {});","module.exports = \"<svg width=\\\"70px\\\" height=\\\"22px\\\" viewBox=\\\"0 0 70 22\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><title>Group 23</title><desc>Created with Sketch.</desc><defs><polygon id=\\\"path-1\\\" points=\\\"0.0103141832 0.0376094598 8.42702073 0.0376094598 8.42702073 10.4348955 0.0103141832 10.4348955\\\"></polygon><polygon id=\\\"path-3\\\" points=\\\"0.0163296552 0.144733127 4.23050511 0.144733127 4.23050511 4.4 0.0163296552 4.4\\\"></polygon></defs><g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><g id=\\\"SPB_&amp;_AltPay_NewAssets\\\" transform=\\\"translate(-100.000000, -159.000000)\\\"><g id=\\\"Group-23\\\" transform=\\\"translate(100.000000, 159.000000)\\\"><path d=\\\"M57.9530181,6.77372667 C58.0233808,6.75539333 58.0971891,6.75631 58.1704534,6.75539333 C58.8242098,6.75667667 59.4772409,6.75502667 60.1309974,6.75631 C60.2972927,6.75906 60.4775518,6.76016 60.6211788,6.85861 C60.7218264,6.93249333 60.7421373,7.06852667 60.7428627,7.18604333 C60.7428627,10.36266 60.7425,13.5390933 60.7428627,16.7153433 C60.7421373,16.84936 60.7318005,16.9985933 60.6360492,17.10181 C60.5343135,17.19916 60.3876036,17.2160267 60.2541321,17.2165767 C59.5459715,17.2160267 58.8374482,17.2176767 58.1294689,17.2158433 C58.0048834,17.2110767 57.863614,17.2141933 57.7655052,17.12491 C57.6782772,17.00666 57.6904275,16.84991 57.6857124,16.7105767 C57.6853497,13.5363433 57.6857124,10.3619267 57.6857124,7.18714333 C57.6715674,7.00857667 57.776386,6.82212667 57.9530181,6.77372667\\\" id=\\\"Fill-1\\\" fill=\\\"#020202\\\"></path><path d=\\\"M20.3658109,6.94398833 C20.6247746,6.89118833 20.8913549,6.905855 21.1544896,6.90383833 C21.7431425,6.914655 22.3307073,6.90154646 22.9199041,6.90347167 C23.3788938,6.91813833 23.8380648,6.893205 24.2974171,6.907505 C24.5192047,6.92858833 24.7413549,6.888805 24.9636865,6.91263833 C25.3952927,6.91703833 25.8263549,6.91098833 26.2577798,6.903105 C26.6892047,6.90897167 27.1206295,6.89393833 27.5516917,6.91263833 C27.9025984,6.905855 28.2565881,6.88202167 28.6051373,6.936105 C28.7476762,6.95792167 28.8847746,7.07342167 28.8791528,7.22888833 C28.8838679,7.83682167 28.8787902,8.44438833 28.8818731,9.05232167 C28.8773394,9.138855 28.8913031,9.241705 28.8265622,9.31027167 C28.7513031,9.38727167 28.6374171,9.399555 28.536044,9.401205 C27.8282461,9.403955 27.1202668,9.39918833 26.4128316,9.40322167 C26.2891528,9.39717167 26.1348264,9.45987167 26.1491528,9.60947167 C26.1438938,11.977405 26.1482461,14.3455217 26.146614,16.713455 C26.1408109,16.8502217 26.1272098,17.0097217 26.0086088,17.0982717 C25.8550078,17.2093717 25.6564326,17.2121217 25.4750855,17.216155 C24.7798005,17.2168883 24.0846969,17.216155 23.3894119,17.2165217 C23.2191269,17.2121217 23.0405,17.2223883 22.8812772,17.1510717 C22.7434534,17.0942383 22.7091788,16.9272217 22.7100855,16.792655 C22.7091788,14.411155 22.7120803,12.030205 22.7088161,9.648705 C22.7225984,9.51578833 22.6185052,9.401205 22.4853964,9.40762167 C21.793013,9.391305 21.0989974,9.411105 20.4062513,9.39808833 C20.2586347,9.40432167 20.1059404,9.29322167 20.1188161,9.13262167 C20.1122876,8.510205 20.1153705,7.88797167 20.117728,7.26573833 C20.1090233,7.11338833 20.2181943,6.97332167 20.3658109,6.94398833\\\" id=\\\"Fill-3\\\" fill=\\\"#020202\\\"></path><path d=\\\"M53.4974456,8.01104333 C53.9424715,7.94156 54.3849585,7.85392667 54.8314352,7.79471 C54.9973679,7.76427667 55.2260466,7.81377667 55.239285,8.02021 C55.2715648,8.56434333 55.2441813,9.11104333 55.2539741,9.65646 C55.5600881,9.65829333 55.8665648,9.65352667 56.1728601,9.65829333 C56.3115907,9.65719333 56.4323679,9.75637667 56.4913057,9.87866 C56.5622124,10.0280767 56.5790777,10.19766 56.5770829,10.3619267 C56.5758135,10.67946 56.5770829,10.99681 56.5767202,11.3143433 C56.5732746,11.4281933 56.5687409,11.55451 56.4954767,11.64801 C56.4245699,11.7273933 56.3119534,11.73931 56.2125751,11.7385767 C55.9264093,11.7385767 55.6396995,11.73821 55.3535337,11.73821 C55.3528083,12.7615767 55.3522642,13.7851267 55.3540777,14.8084933 C55.344285,14.9426933 55.4356839,15.0653433 55.5551917,15.1161267 C55.7249326,15.1914767 55.9142591,15.17406 56.0946995,15.1615933 C56.1779378,15.2336433 56.1977047,15.3509767 56.2290777,15.45181 C56.3237409,15.85056 56.3737927,16.2601267 56.3931969,16.67006 C56.3953731,16.81966 56.407342,16.9723767 56.3766943,17.1201433 C56.175399,17.2495767 55.922057,17.2609433 55.694285,17.3161267 C54.8791295,17.4462933 53.9821865,17.51211 53.2335855,17.0939267 C52.6318756,16.7661267 52.2800622,16.0811933 52.2671865,15.40176 C52.2548549,14.1668267 52.2622902,12.9318933 52.2671865,11.6967767 C52.0606321,11.6885267 51.8515389,11.7158433 51.6477047,11.67991 C51.4250104,11.6195933 51.3865648,11.3552267 51.3914611,11.15796 C51.394544,10.79496 51.385114,10.43141 51.3959948,10.0685933 C51.3959948,9.88581 51.5135078,9.70119333 51.700658,9.67186 C51.9385855,9.64014333 52.1803212,9.66397667 52.4198808,9.65682667 C52.4229637,9.32261 52.4182487,8.98857667 52.4216943,8.65436 C52.4191554,8.46296 52.5533523,8.30071 52.7118497,8.21179333 C52.9501399,8.07172667 53.2328601,8.06219333 53.4974456,8.01104333\\\" id=\\\"Fill-5\\\" fill=\\\"#020202\\\"></path><path d=\\\"M45.7866373,9.817885 C46.6879326,9.40446833 47.6974922,9.330585 48.6745907,9.361935 C49.1888912,9.39255167 49.7160674,9.398785 50.2082435,9.569835 C50.3063523,9.589635 50.3623886,9.67946833 50.3694611,9.77590167 C50.4120777,10.1838183 50.3366373,10.5965017 50.2216632,10.986635 C50.1594611,11.157685 50.1014301,11.3604517 49.9335026,11.4545017 C49.6157824,11.4495517 49.3027772,11.376585 48.9870518,11.3437683 C48.6163782,11.3052683 48.2333731,11.2449517 47.8672332,11.3401017 C47.7156269,11.369435 47.5712746,11.5599183 47.6838912,11.701635 C47.8246166,11.8499517 48.0166632,11.9330017 48.1952902,12.0257683 C48.788114,12.3007683 49.3921813,12.5801683 49.8887098,13.017235 C50.2086062,13.2981017 50.4829845,13.6433183 50.6349534,14.0470183 C50.7404974,14.3112017 50.7829326,14.5959183 50.7970777,14.8791683 C50.800886,15.4038683 50.6969741,15.9511183 50.3821554,16.379935 C49.9855492,16.9328683 49.3201865,17.203835 48.6754974,17.320435 C47.7910674,17.4720517 46.8861451,17.4192517 45.9989948,17.3189683 C45.4518705,17.2403183 44.8960415,17.164235 44.3777513,16.9605517 C44.2990466,16.742385 44.2887098,16.508635 44.2691244,16.2796517 C44.2542539,15.958085 44.2518964,15.633585 44.3106528,15.3164183 C44.3374922,15.1994517 44.3665078,15.064885 44.4716891,14.9930183 C44.5485803,14.974685 44.6252902,15.0100683 44.7009119,15.0251017 C45.2641762,15.1811183 45.8502902,15.2407017 46.4335026,15.2377683 C46.7347202,15.2328183 47.0557047,15.2594017 47.3337098,15.1195183 C47.4880363,15.0482017 47.5480622,14.811335 47.4015337,14.7009683 C47.1779326,14.5084683 46.8885026,14.422485 46.6259119,14.298185 C46.1973886,14.1137517 45.7677772,13.919235 45.3909378,13.6391017 C45.0093834,13.356035 44.6867668,12.9730517 44.5391503,12.512885 C44.3610674,11.952985 44.3661451,11.308385 44.6601088,10.7884517 C44.9089171,10.3429517 45.3341762,10.0281683 45.7866373,9.817885\\\" id=\\\"Fill-7\\\" fill=\\\"#020202\\\"></path><path d=\\\"M31.1743912,9.64921833 C31.8377591,9.622635 32.5023964,9.642435 33.1664896,9.63216833 C33.6505052,9.63601833 34.1348834,9.62336833 34.618899,9.63051833 C34.7394948,9.62226833 34.8662565,9.71155167 34.863899,9.84171833 C34.8673446,10.4005183 34.8655311,10.9598683 34.8646244,11.519035 C34.868614,11.6611183 34.7688731,11.8079683 34.6212565,11.817135 C34.1843912,11.838585 33.7371891,11.8222683 33.3121114,11.9438183 C33.0451684,12.0369517 32.772785,12.1731683 32.6070337,12.4131517 C32.4721114,12.613535 32.4383808,12.8628683 32.4391062,13.1001017 C32.4387435,14.276735 32.4391062,15.4533683 32.4387435,16.6300017 C32.4367487,16.783635 32.4218782,16.9510183 32.3232254,17.0760517 C32.2318264,17.1827517 32.085842,17.218135 31.9512824,17.2161183 C31.3094948,17.216485 30.6671632,17.2174017 30.025013,17.2157517 C29.8433031,17.2141017 29.6474482,17.1633183 29.5241321,17.020135 C29.4060751,16.8811683 29.3805052,16.6886683 29.3825,16.5117517 C29.3835881,14.765685 29.381956,13.019985 29.3832254,11.2739183 C29.3828627,10.8616017 29.4829663,10.4183017 29.7907124,10.1266183 C30.1619301,9.779385 30.6860233,9.679835 31.1743912,9.64921833\\\" id=\\\"Fill-9\\\" fill=\\\"#020202\\\"></path><path d=\\\"M36.1322047,9.67501333 C36.237386,9.63174667 36.3527228,9.63614667 36.464614,9.63688 C37.0811943,9.63963 37.6985,9.63486333 38.315443,9.63926333 C38.6204689,9.64879667 38.9517902,9.87576333 38.9604948,10.20723 C38.9619456,11.4357467 38.9601321,12.6648133 38.9612202,13.89333 C38.9623083,14.1120467 39.0081891,14.3621133 39.190443,14.50218 C39.4341736,14.6680967 39.8213497,14.61438 39.9794845,14.3522133 C40.0556503,14.2275467 40.0853912,14.0783133 40.0877487,13.9331133 C40.0877487,12.71523 40.0870233,11.4971633 40.0881114,10.27928 C40.0924637,10.11043 40.0908316,9.91939667 40.2056244,9.78299667 C40.2966606,9.66988 40.4486295,9.63926333 40.5864534,9.63724667 C41.2146399,9.63724667 41.8431891,9.63761333 42.4717383,9.63724667 C42.6494585,9.64091333 42.8409611,9.67703 42.9747953,9.80481333 C43.1102617,9.93773 43.1445363,10.13848 43.1452617,10.3214467 C43.1445363,11.8828967 43.144899,13.4441633 43.1452617,15.0057967 C43.1345622,15.4831967 43.0651062,15.9752633 42.8293549,16.3967467 C42.6278782,16.76103 42.2856762,17.04593 41.8867124,17.1594133 C41.5798731,17.2578633 41.2547176,17.2332967 40.9380855,17.23568 L38.5832927,17.23568 C37.9979041,17.22523 37.3807798,17.2974633 36.8331114,17.0402467 C36.3991477,16.8514133 36.0756244,16.4565133 35.9309093,16.0066133 C35.7408575,15.46853 35.7863756,14.89103 35.7820233,14.3307633 C35.7827487,12.9953633 35.7809352,11.6595967 35.7831114,10.3241967 C35.7938109,10.07468 35.8817642,9.77694667 36.1322047,9.67501333\\\" id=\\\"Fill-11\\\" fill=\\\"#020202\\\"></path><g id=\\\"Group-15\\\" transform=\\\"translate(61.476684, 9.598600)\\\"><mask id=\\\"mask-2\\\" fill=\\\"white\\\"><use xlink:href=\\\"#path-1\\\"></use></mask><g id=\\\"Clip-14\\\"></g><path d=\\\"M0.065738342,0.1661 C0.16511658,0.0570166667 0.323795337,0.0462 0.461619171,0.03905 C1.15599741,0.0383166667 1.85037565,0.0396 2.54475389,0.0386833333 C2.6867487,0.04015 2.83708549,0.0227333333 2.9701943,0.0878166667 C3.18490933,0.192316667 3.34703368,0.393066667 3.42591969,0.618933333 C3.75959845,1.56841667 4.08656736,2.52083333 4.4240544,3.4694 C4.73832902,2.6697 5.05895078,1.8733 5.37485751,1.07451667 C5.46516839,0.8646 5.53081606,0.643133333 5.64306995,0.44385 C5.77055699,0.23595 5.9771114,0.0399666667 6.23335492,0.03905 C6.82182642,0.03905 7.41066062,0.03795 7.99949482,0.0396 C8.13840674,0.0515166667 8.31159326,0.0553666667 8.40299223,0.181133333 C8.44923575,0.281966667 8.42130829,0.4015 8.38286269,0.50105 C7.08876943,3.5761 5.79340674,6.65041667 4.49949482,9.72546667 C4.38252591,10.0419 4.16037565,10.39775 3.79641192,10.4327667 C3.22534974,10.4338667 2.65410622,10.4379 2.08340674,10.43075 C1.94050518,10.42195 1.74156736,10.3906 1.70910622,10.2202833 C1.69641192,10.1097333 1.74555699,10.0059667 1.78472798,9.90641667 C2.11840674,9.10965 2.44900259,8.3116 2.78286269,7.5152 C2.80226684,7.46991667 2.81876943,7.42023333 2.79229275,7.37421667 C1.88428756,5.104 0.976463731,2.8336 0.0682772021,0.563383333 C0.0205829016,0.44 -0.0327331606,0.27885 0.065738342,0.1661\\\" id=\\\"Fill-13\\\" fill=\\\"#020202\\\" mask=\\\"url(#mask-2)\\\"></path></g><path d=\\\"M5.64392228,6.89753167 C5.66314508,6.26649833 5.63920725,5.636015 5.6616943,5.00534833 C5.70195337,4.226365 6.02275648,3.467915 6.54358549,2.89389833 C7.05679793,2.32043167 7.7651399,1.92864833 8.52117617,1.80764833 C9.37931088,1.662815 10.2893109,1.86649833 11.0049067,2.367915 C11.8978601,2.976765 12.4681969,4.03423167 12.4906839,5.12323167 C12.4926788,5.71539833 12.4906839,6.30738167 12.4914093,6.89954833 C10.2087927,6.898265 7.92653886,6.90303167 5.64392228,6.89753167 M11.3588964,10.277465 C11.3668756,10.3702317 11.2665907,10.410015 11.1904249,10.410015 C10.7760466,10.4222983 10.3607617,10.4002983 9.94656477,10.421565 C9.93042487,10.4928817 9.9159171,10.565115 9.91646114,10.6389983 C9.91827461,11.7628317 9.9159171,12.8870317 9.91754922,14.010865 C9.91428497,14.1353483 9.92843005,14.2629483 9.90177202,14.385965 C9.85788601,14.5005483 9.72278238,14.5175983 9.61723834,14.5199817 C9.30205699,14.5260317 8.98723834,14.5199817 8.67205699,14.522365 C8.49488083,14.5199817 8.30881865,14.541065 8.1436114,14.4620483 C8.12674611,14.3663483 8.11187565,14.269915 8.11187565,14.1727483 C8.11387047,13.0476317 8.11133161,11.9223317 8.11296373,10.797215 C8.11133161,10.685015 8.12166839,10.570615 8.10172021,10.459515 C8.0128601,10.378115 7.87666839,10.4250483 7.7678601,10.4118483 C7.43581347,10.3980983 7.09705699,10.4499817 6.77008808,10.3749983 C6.74143523,10.013465 6.75956995,9.64918167 6.75757513,9.286915 C6.74107254,9.13933167 6.91135751,9.099915 7.02415544,9.104315 C8.3728342,9.103215 9.7216943,9.104315 11.0703731,9.10394833 C11.1779119,9.10229833 11.3400363,9.11788167 11.3565389,9.25354833 C11.3668756,9.594365 11.3625233,9.936465 11.3588964,10.277465 M17.8946477,7.30544833 C17.5986891,7.006615 17.1638187,6.912565 16.7590518,6.90028167 C15.9665648,6.89863167 15.173715,6.90064833 14.3806839,6.89954833 C14.3830415,6.40069833 14.3748808,5.90148167 14.3873938,5.40263167 C14.4019016,4.26138167 14.0348549,3.12123167 13.3660466,2.20218167 C12.6558912,1.21823167 11.607342,0.488565 10.4407358,0.180198333 C9.59565803,-0.0475016667 8.69599482,-0.0590516667 7.84456995,0.144081667 C6.71078756,0.411565 5.67420725,1.07229833 4.9428342,1.98694833 C4.18716062,2.919565 3.76371503,4.11618167 3.75428497,5.32049833 L3.75428497,6.899915 C2.9601658,6.90064833 2.16604663,6.898265 1.37192746,6.90064833 C0.942860104,6.915315 0.468637306,7.025315 0.186823834,7.37969833 C-0.00866839378,7.61693167 -0.0289792746,7.947665 0.0274196891,8.239165 C0.60519171,10.850015 1.18115026,13.4615983 1.75892228,16.0724483 C1.83907772,16.445165 2.04780829,16.802665 2.37640933,17.0013983 C2.64879275,17.1740983 2.97775648,17.2252483 3.29456995,17.2144317 C7.18120207,17.2133317 11.0676528,17.214065 14.9541036,17.2138817 C15.3244145,17.2180983 15.7106839,17.1038817 15.9783523,16.835665 C16.1994145,16.6259317 16.3305285,16.337915 16.3927306,16.0418317 C16.9674197,13.4359317 17.5446477,10.8305817 18.1200622,8.22449833 C18.1929637,7.90549833 18.1302176,7.54249833 17.8946477,7.30544833\\\" id=\\\"Fill-16\\\" fill=\\\"#64CC07\\\"></path><path d=\\\"M5.15798446,17.6518833 C5.64272539,17.57085 6.15466839,17.66545 6.57666321,17.9208333 C7.1854456,18.2827333 7.59692228,18.9696833 7.60472021,19.68725 C7.62466839,20.1604333 7.47668912,20.6363667 7.19723316,21.0164167 C6.87806218,21.4575167 6.3831658,21.7647833 5.84927979,21.8515 C5.30233679,21.9486667 4.72021244,21.8087833 4.2704715,21.48025 C3.83197409,21.16125 3.51951295,20.6686333 3.4273886,20.12945 C3.32601554,19.5726667 3.45712953,18.97665 3.78482383,18.5174 C4.10472021,18.0594333 4.61031606,17.7408 5.15798446,17.6518833\\\" id=\\\"Fill-18\\\" fill=\\\"#64CC07\\\"></path><g id=\\\"Group-22\\\" transform=\\\"translate(10.518135, 17.481933)\\\"><mask id=\\\"mask-4\\\" fill=\\\"white\\\"><use xlink:href=\\\"#path-3\\\"></use></mask><g id=\\\"Clip-21\\\"></g><path d=\\\"M1.78171762,0.16951 C2.21695078,0.106443333 2.6739456,0.160893333 3.06728756,0.366043333 C3.5901114,0.629126667 3.99632902,1.12027667 4.15228756,1.69007667 C4.31513731,2.27436 4.22210622,2.92904333 3.88806477,3.43559333 C3.57959326,3.91647667 3.07037047,4.26096 2.51182124,4.36271 C1.96342746,4.47124333 1.37495596,4.33961 0.917779793,4.01602667 C0.465862694,3.69702667 0.142520725,3.19542667 0.0494896373,2.64487667 C-0.0529715026,2.07929333 0.0848523316,1.47447667 0.423608808,1.01247667 C0.7455,0.56716 1.24275389,0.25696 1.78171762,0.16951\\\" id=\\\"Fill-20\\\" fill=\\\"#64CC07\\\" mask=\\\"url(#mask-4)\\\"></path></g></g></g></g></svg>\"","module.exports = \"{% block swag_paypal_pos_boolean_radio %}\\n    <sw-radio-field\\n        v-model=\\\"castedValue\\\"\\n        v-bind=\\\"$attrs\\\"\\n        class=\\\"swag-paypal-pos-boolean-radio\\\"\\n        :name=\\\"name\\\"\\n        :options=\\\"options\\\">\\n    </sw-radio-field>\\n{% endblock %}\\n\";","module.exports = \"<svg width=\\\"34\\\" height=\\\"24\\\" viewBox=\\\"0 0 34 24\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"0.5\\\" y=\\\"0.5\\\" width=\\\"33\\\" height=\\\"23\\\" rx=\\\"3.5\\\" fill=\\\"white\\\" stroke=\\\"#D1D9E0\\\"></rect><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M17.179 16.8294C15.9949 17.8275 14.459 18.43 12.7807 18.43C9.03582 18.43 6 15.4303 6 11.73C6 8.02966 9.03582 5.02997 12.7807 5.02997C14.459 5.02997 15.9949 5.63247 17.179 6.63051C18.363 5.63247 19.8989 5.02997 21.5773 5.02997C25.3221 5.02997 28.358 8.02966 28.358 11.73C28.358 15.4303 25.3221 18.43 21.5773 18.43C19.8989 18.43 18.363 17.8275 17.179 16.8294Z\\\" fill=\\\"#ED0006\\\"></path><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M17.1787 16.8294C18.6366 15.6005 19.5611 13.7719 19.5611 11.73C19.5611 9.68801 18.6366 7.85941 17.1787 6.63051C18.3628 5.63247 19.8987 5.02997 21.577 5.02997C25.3219 5.02997 28.3577 8.02966 28.3577 11.73C28.3577 15.4303 25.3219 18.43 21.577 18.43C19.8987 18.43 18.3628 17.8275 17.1787 16.8294Z\\\" fill=\\\"#F9A000\\\"></path><path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M17.1793 16.8294C18.6372 15.6005 19.5616 13.7719 19.5616 11.73C19.5616 9.68805 18.6372 7.85946 17.1793 6.63055C15.7213 7.85946 14.7969 9.68805 14.7969 11.73C14.7969 13.7719 15.7213 15.6005 17.1793 16.8294Z\\\" fill=\\\"#FF5E00\\\"></path></svg>\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-sales-channel-modal-detail.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1fc829da\", content, true, {});","module.exports = \"{% block swag_paypal_settings_icon %}\\n    <sw-icon name=\\\"paypal-multicolor\\\" multicolor></sw-icon>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-boolean-radio.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"dad0b1d0\", content, true, {});","module.exports = \"{% block swag_paypal_pos_detail_logs %}\\n    {% block swag_paypal_pos_detail_logs_grid %}\\n        <sw-data-grid identifier=\\\"swag-paypal-pos-detail-logs\\\"\\n                      :columns=\\\"columns\\\"\\n                      :dataSource=\\\"logs\\\"\\n                      :isLoading=\\\"isLoading || loadingLogs\\\"\\n                      :showActions=\\\"true\\\"\\n                      :showSelection=\\\"false\\\"\\n                      :showSettings=\\\"true\\\"\\n                      :allowColumnEdit=\\\"true\\\"\\n                      :sortBy=\\\"sortBy\\\"\\n                      :sortDirection=\\\"sortDirection\\\"\\n                      :skeletonItemAmount=\\\"limit\\\"\\n                      @column-sort=\\\"onSortColumn\\\">\\n\\n            {% block swag_paypal_pos_detail_logs_grid_pagination %}\\n                <template #pagination>\\n                    <sw-pagination :limit=\\\"limit\\\"\\n                                   :page=\\\"page\\\"\\n                                   :total=\\\"total\\\"\\n                                   :total-visible=\\\"7\\\"\\n                                   @page-change=\\\"onPageChange\\\">\\n                    </sw-pagination>\\n                </template>\\n            {% endblock %}\\n\\n            {% block swag_paypal_pos_detail_logs_grid_column_date %}\\n                <template #column-date=\\\"{ item }\\\">\\n\\n                    {% block swag_paypal_pos_detail_logs_grid_column_date_formatted %}\\n                        <template v-if=\\\"item.createdAt\\\">\\n                            {{ item.createdAt | date({\\n                                hour: '2-digit',\\n                                minute: '2-digit',\\n                                day: '2-digit',\\n                                month: '2-digit',\\n                                year: '2-digit'\\n                            })\\n                            }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_paypal_pos_detail_logs_grid_column_date_empty %}\\n                        <template v-else>\\n                            {{ $tc('swag-paypal-pos.detail.logs.noEntry') }}\\n                        </template>\\n                    {% endblock %}\\n\\n                </template>\\n            {% endblock %}\\n\\n            {% block swag_paypal_pos_detail_logs_grid_column_state %}\\n                <template #column-state=\\\"{ item }\\\">\\n\\n                    {% block swag_paypal_pos_detail_logs_grid_column_state_label %}\\n                        <sw-label v-if=\\\"item.level\\\"\\n                                  appearance=\\\"pill\\\"\\n                                  :variant=\\\"getLabelVariantForItem(item)\\\">\\n                            {{ $tc(getLabelForItem(item)) }}\\n                        </sw-label>\\n                    {% endblock %}\\n\\n                </template>\\n            {% endblock %}\\n\\n        </sw-data-grid>\\n    {% endblock %}\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_pos_wizard_finish %}\\n    <div class=\\\"swag-paypal-pos-wizard-finish\\\">\\n\\n        {% block swag_paypal_pos_wizard_finish_content %}\\n            <div class=\\\"swag-paypal-pos-wizard-finish__content\\\">\\n\\n                {% block swag_paypal_pos_wizard_finish_content_icon %}\\n                    <div class=\\\"swag-paypal-pos-wizard-finish__icon-wrapper\\\">\\n                        <sw-icon class=\\\"swag-paypal-pos-wizard-finish__icon\\\"\\n                                 name=\\\"default-basic-checkmark-line\\\"\\n                                 size=\\\"80px\\\"\\n                                 color=\\\"#37D046\\\">\\n                        </sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_wizard_finish_content_header %}\\n                    <div class=\\\"swag-paypal-pos-wizard-finish__content-header\\\">\\n                        {{ $tc('swag-paypal-pos.wizard.finish.header') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_wizard_finish_content_description %}\\n                    <div class=\\\"swag-paypal-pos-wizard-finish__content-description\\\">\\n                        <p class=\\\"swag-paypal-pos-wizard-finish__first-paragraph\\\">\\n                            {{ $tc('swag-paypal-pos.wizard.finish.firstParagraph') }}\\n                        </p>\\n\\n                        <p class=\\\"swag-paypal-pos-wizard-finish__second-paragraph\\\">\\n                            {{ $tc('swag-paypal-pos.wizard.finish.secondParagraph') }}\\n                        </p>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_block_field %}\\n    <sw-block-field\\n            v-bind=\\\"$attrs\\\"\\n            class=\\\"sw-field--textarea\\\"\\n            :name=\\\"formFieldName\\\">\\n\\n        <template #sw-field-input=\\\"{identification, helpText, error, disabled, setFocusClass, removeFocusClass }\\\">\\n            <textarea v-bind=\\\"$attrs\\\"\\n                      :id=\\\"identification\\\"\\n                      :name=\\\"identification\\\"\\n                      :placeholder=\\\"placeholder\\\"\\n                      :disabled=\\\"disabled\\\"\\n                      :value=\\\"currentValue\\\"\\n                      @change=\\\"onChange\\\"\\n                      @input=\\\"onInput\\\"\\n                      @focus=\\\"setFocusClass\\\"\\n                      @blur=\\\"removeFocusClass\\\">\\n            </textarea>\\n        </template>\\n    </sw-block-field>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal-pos-wizard-connection-success.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"24536bbd\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./swag-paypal.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"298bafb6\", content, true, {});","module.exports = \"{% block swag_paypal_pos_wizard_customization %}\\n    <div v-if=\\\"!isLoading\\\"\\n         class=\\\"swag-paypal-pos-wizard-customization\\\">\\n\\n        {% block swag_paypal_pos_wizard_customization_name %}\\n            <sw-text-field v-model=\\\"salesChannel.name\\\"\\n                           class=\\\"swag-paypal-pos-wizard-customization__name-field\\\"\\n                           validation=\\\"required\\\"\\n                           required\\n                           :label=\\\"$tc('swag-paypal-pos.wizard.customization.salesChannelLabel')\\\"\\n                           :placeholder=\\\"$tc('sw-sales-channel.detail.placeholderName')\\\"\\n                           @input=\\\"forceUpdate\\\">\\n            </sw-text-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_wizard_customization_language %}\\n            <sw-entity-single-select v-model=\\\"salesChannel.languageId\\\"\\n                                     entity=\\\"language\\\"\\n                                     required\\n                                     :label=\\\"$tc('global.entities.language')\\\"\\n                                     @change=\\\"changeLanguage\\\">\\n            </sw-entity-single-select>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_wizard_customization_media_domain %}\\n            <sw-url-field v-model=\\\"salesChannel.extensions.paypalPosSalesChannel.mediaDomain\\\"\\n                          class=\\\"swag-paypal-pos-wizard-customization__domain-field\\\"\\n                          required\\n                          :label=\\\"$tc('swag-paypal-pos.wizard.customization.labelDomain')\\\"\\n                          :placeholder=\\\"$tc('swag-paypal-pos.wizard.customization.placeholderDomain')\\\"\\n                          @input=\\\"forceUpdate\\\">\\n            </sw-url-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_wizard_connection_success_disclaimer %}\\n            <div class=\\\"swag-paypal-pos-wizard-customization__subtitle\\\">\\n                {{ $tc('swag-paypal-pos.wizard.customization.subtitle') }}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_pos_detail_runs %}\\n    <div class=\\\"swag-paypal-pos-detail-runs\\\">\\n\\n        {% block swag_paypal_pos_detail_runs_card %}\\n            <sw-card :title=\\\"$tc('swag-paypal-pos.detail.runs.title')\\\"\\n                     :isLoading=\\\"isLoading\\\">\\n\\n                {% block swag_paypal_pos_detail_runs_card_grid %}\\n                    <template #grid>\\n\\n                        <sw-data-grid v-if=\\\"total > 0\\\"\\n                                      identifier=\\\"swag-paypal-pos-detail-runs\\\"\\n                                      :columns=\\\"columns\\\"\\n                                      :dataSource=\\\"runs\\\"\\n                                      :isLoading=\\\"isLoading || total === 0\\\"\\n                                      :showActions=\\\"true\\\"\\n                                      :showSelection=\\\"false\\\"\\n                                      :showSettings=\\\"true\\\"\\n                                      :allowColumnEdit=\\\"true\\\"\\n                                      :sortBy=\\\"sortBy\\\"\\n                                      :sortDirection=\\\"sortDirection\\\"\\n                                      :skeletonItemAmount=\\\"limit\\\"\\n                                      @column-sort=\\\"onSortColumn\\\">\\n\\n                            {% block swag_paypal_pos_detail_runs_card_grid_pagination %}\\n                                <template #pagination>\\n                                    <sw-pagination :limit=\\\"limit\\\"\\n                                                   :page=\\\"page\\\"\\n                                                   :total=\\\"total\\\"\\n                                                   :total-visible=\\\"7\\\"\\n                                                   @page-change=\\\"onPageChange\\\">\\n                                    </sw-pagination>\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_pos_detail_runs_other_grid_column_log %}\\n                                <template #column-task=\\\"{ item }\\\">\\n                                    {{ $tc(`swag-paypal-pos.detail.runs.${item.task}Task`) }}\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_pos_detail_runs_card_grid_column_state %}\\n                                <template #column-state=\\\"{ item }\\\">\\n\\n                                    {% block swag_paypal_pos_detail_runs_card_grid_column_state_label %}\\n                                        <sw-label appearance=\\\"pill\\\"\\n                                                  :variant=\\\"getLabelVariant(item)\\\">\\n                                            {{ $tc(getLabel(item)) }}\\n                                        </sw-label>\\n                                    {% endblock %}\\n\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_pos_detail_runs_card_grid_column_date %}\\n                                <template #column-date=\\\"{ item }\\\">\\n\\n                                    {% block swag_paypal_pos_detail_runs_card_grid_column_date_formatted %}\\n                                        {{ item.finishedAt | date({\\n                                            hour: '2-digit',\\n                                            minute: '2-digit',\\n                                            day: '2-digit',\\n                                            month: '2-digit',\\n                                            year: '2-digit'\\n                                        }) }}\\n                                    {% endblock %}\\n\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block swag_paypal_pos_detail_runs_card_grid_actions %}\\n                                <template #actions=\\\"{ item }\\\">\\n\\n                                    {% block swag_paypal_pos_detail_runs_card_grid_actions_details %}\\n                                        <sw-context-menu-item :disabled=\\\"item.logs.length <= 0\\\"\\n                                                              @click=\\\"onShowModal(item.id)\\\">\\n                                            {{ $tc('swag-paypal-pos.detail.runs.actions.showDetails') }}\\n                                        </sw-context-menu-item>\\n                                    {% endblock %}\\n\\n                                </template>\\n                            {% endblock %}\\n\\n                        </sw-data-grid>\\n                    </template>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_detail_runs_card_empty_state %}\\n                    <template #default>\\n                        <sw-empty-state v-if=\\\"total < 1\\\"\\n                                        class=\\\"swag-paypal-pos-detail-runs__empty-state\\\"\\n                                        :title=\\\"$tc('swag-paypal-pos.detail.runs.emptyState.title')\\\"\\n                                        :subline=\\\"$tc('swag-paypal-pos.detail.runs.emptyState.message')\\\">\\n                        </sw-empty-state>\\n                    </template>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_detail_runs_card_toolbar %}\\n                    <template #toolbar v-if=\\\"total > 0\\\">\\n\\n                        {% block swag_paypal_pos_detail_runs_card_toolbar_container %}\\n                            <sw-container columns=\\\"1fr min-content\\\"\\n                                          align=\\\"center\\\">\\n\\n                                {% block swag_paypal_pos_detail_runs_card_toolbar_container_text %}\\n                                    <p>{{ $tc('swag-paypal-pos.detail.runs.toolbarText') }}</p>\\n                                {% endblock %}\\n\\n                                {% block swag_paypal_pos_detail_runs_card_toolbar_container_button %}\\n                                    <sw-button\\n                                            :disabled=\\\"!acl.can('sales_channel.editor')\\\"\\n                                            @click=\\\"onClearLogs\\\">\\n                                        {{ $tc('swag-paypal-pos.detail.cleanLog') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                            </sw-container>\\n                        {% endblock %}\\n\\n                    </template>\\n                {% endblock %}\\n\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_paypal_pos_detail_runs_log_modal %}\\n            <sw-modal v-if=\\\"showModal\\\"\\n                      class=\\\"swag-paypal-pos-detail-runs__modal\\\"\\n                      :title=\\\"$tc('swag-paypal-pos.detail.runs.title')\\\"\\n                      :isLoading=\\\"isLoading\\\"\\n                      variant=\\\"large\\\"\\n                      @modal-close=\\\"onCloseModal\\\">\\n\\n                {% block swag_paypal_pos_detail_runs_log_modal_logs %}\\n                    <swag-paypal-pos-detail-logs :runId=\\\"currentRunId\\\"></swag-paypal-pos-detail-logs>\\n                {% endblock %}\\n\\n                {% block swag_paypal_pos_detail_runs_log_modal_footer %}\\n                    <template #modal-footer>\\n\\n                        {% block swag_paypal_pos_detail_runs_log_modal_footer_close_modal_button %}\\n                            <sw-button variant=\\\"primary\\\"\\n                                       @click=\\\"onCloseModal\\\">\\n                                {{ $tc('global.default.cancel') }}\\n                            </sw-button>\\n                        {% endblock %}\\n\\n                    </template>\\n                {% endblock %}\\n\\n            </sw-modal>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_content_card_channel_config_pui %}\\n    <sw-card :title=\\\"$tc('swag-paypal.settingForm.pui.cardTitle')\\\">\\n\\n        {% block swag_paypal_content_card_channel_config_pui_settings %}\\n            <div v-if=\\\"actualConfigData\\\" class=\\\"swag-paypal-settings-pui-fields\\\">\\n\\n                {% block swag_paypal_content_card_channel_config_pui_settings_customer_service_instructions %}\\n                    <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['SwagPayPal.settings.puiCustomerServiceInstructions']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['SwagPayPal.settings.puiCustomerServiceInstructions']\\\"\\n                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                        <template #content=\\\"props\\\">\\n                            <sw-text-field name=\\\"SwagPayPal.settings.spbButtonLanguageIso\\\"\\n                                           :mapInheritance=\\\"props\\\"\\n                                           :label=\\\"$tc('swag-paypal.settingForm.pui.customerServiceInstructions.label')\\\"\\n                                           :helpText=\\\"$tc('swag-paypal.settingForm.pui.customerServiceInstructions.helpText')\\\"\\n                                           :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                           :value=\\\"props.currentValue\\\"\\n                                           @change=\\\"props.updateCurrentValue\\\">\\n                            </sw-text-field>\\n                        </template>\\n                    </sw-inherit-wrapper>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","module.exports = \"<svg width=\\\"43px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 43 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><title>MyBank</title><desc>Created with Sketch.</desc><defs><polygon id=\\\"path-1\\\" points=\\\"3.086436e-05 0.00960615385 42.6159033 0.00960615385 42.6159033 24 3.086436e-05 24\\\"></polygon></defs><g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><g id=\\\"SPB_&amp;_AltPay_NewAssets\\\" transform=\\\"translate(-100.000000, -159.000000)\\\"><g id=\\\"MyBank\\\" transform=\\\"translate(100.000000, 159.000000)\\\"><path d=\\\"M29.010016,14.6206556 C29.010016,14.6206556 27.947442,14.8389924 27.9585564,14.0777038 C27.9698571,13.3164773 29.8942008,13.3619719 30.0914038,13.4236258 C30.0914038,13.4236258 30.1519432,14.2874637 29.010016,14.6206556 M29.3297879,9.81836571 C27.677716,9.80301439 26.9053582,10.753926 26.9053582,10.753926 C26.4037199,11.2864986 26.7253546,12.0076376 27.2173686,12.0597202 C27.924406,12.1345501 27.9170171,11.5413802 29.0022546,11.2784811 C29.9542434,11.0477763 29.9954723,11.9305703 29.9954723,11.9305703 C25.9352386,11.8295126 26.1290887,15.239929 27.5113104,15.9642377 C28.8367183,16.658714 30.0756326,15.7825701 30.0756326,15.7825701 C30.0756326,15.7825701 30.1222013,16.2545455 30.777951,16.2545455 C31.5283904,16.2545455 31.5272727,15.5049412 31.5272727,15.5049412 L31.5242302,12.1853897 C31.4748674,9.75671183 29.3297879,9.81836571 29.3297879,9.81836571\\\" id=\\\"Fill-1\\\" fill=\\\"#1A4B67\\\"></path><path d=\\\"M42.4169651,14.9132636 L40.766254,12.4266353 L41.9794586,11.2784792 C41.9794586,11.2784792 42.5394372,10.7597112 42.0797024,10.2455911 C41.5701862,9.67606803 40.9629029,10.2382165 40.9629029,10.2382165 L39.4383789,11.6556411 L39.4383789,8.81056644 C39.4383789,8.40291433 39.1083605,8.07272727 38.7011934,8.07272727 C38.2936547,8.07272727 37.9636364,8.40291433 37.9636364,8.81056644 L37.9636364,15.5050966 C37.9636364,15.9126248 38.2936547,16.2429358 38.7011934,16.2429358 C39.1083605,16.2429358 39.4383789,15.9126248 39.4383789,15.5050966 L39.4383789,13.7227806 L39.7172538,13.4440304 L41.2106953,15.7865117 C41.2106953,15.7865117 41.697426,16.5998328 42.4143027,16.0821803 C42.9532914,15.6931198 42.4169651,14.9132636 42.4169651,14.9132636\\\" id=\\\"Fill-3\\\" fill=\\\"#1A4B67\\\"></path><path d=\\\"M37.0887651,12.0920353 C37.0887651,9.6760941 35.0962232,9.33568291 33.7411943,10.1020724 C33.7401529,10.1029393 33.7389278,10.1056016 33.7382539,10.1063446 C33.6363205,9.81249385 33.362313,9.6 33.0365425,9.6 C32.6248269,9.6 32.2909091,9.93768691 32.2909091,10.3541303 L32.2909091,15.3913243 C32.2909091,15.8078915 32.6248269,16.1454545 33.0365425,16.1454545 C33.4485644,16.1454545 33.7826048,15.8078915 33.7826048,15.3913243 L33.7723134,11.9929705 C33.7723134,11.9929705 33.9532086,11.7752139 34.2436332,11.5669922 C34.9412403,11.0671487 35.6063806,11.2374162 35.6063806,12.0917257 L35.6234716,15.4035835 C35.6234716,15.8135877 35.9518762,16.1454545 36.3573435,16.1454545 C36.7625045,16.1454545 37.0909091,15.8135877 37.0909091,15.4035835 L37.0887651,12.0920353 Z\\\" id=\\\"Fill-5\\\" fill=\\\"#1A4B67\\\"></path><path d=\\\"M15.5613016,16.2862697 C15.7330634,15.9971851 15.762994,15.7935853 15.762994,15.7935853 L14.0695172,11.3349218 C14.0695172,11.3349218 13.7622674,10.4721348 14.4393994,10.2166114 C15.1567468,9.94557914 15.4157136,10.6357839 15.4696009,10.7805123 C15.5234881,10.9252407 16.5395249,13.6504516 16.5395249,13.6504516 L17.5177483,10.7867779 C17.5177483,10.7867779 17.7979621,9.89638514 18.5815138,10.2138818 C19.2290232,10.4764773 18.8964002,11.3498103 18.8964002,11.3498103 C18.8964002,11.3498103 17.8952671,14.3335844 17.0561037,16.4983684 C16.5548597,17.7916804 16.1267792,17.9191009 15.6376676,18.0403799 C14.9830758,18.2027884 13.7454545,18.1223286 13.7454545,17.30247 C13.7454545,16.655814 14.4027561,16.615491 14.6992284,16.6251065 C14.7151175,16.6254167 15.3279543,16.6788911 15.5613016,16.2862697\\\" id=\\\"Fill-7\\\" fill=\\\"#00C0EE\\\"></path><path d=\\\"M11.5669215,8.85710249 L10.0137262,13.1590392 L8.3203761,8.88327934 C8.3203761,8.88327934 8.06948196,8.07272727 7.36345596,8.07272727 C6.54545455,8.07272727 6.57202708,8.72317872 6.55361169,8.88327934 C6.53525811,9.04350403 6.55361169,15.569481 6.55361169,15.569481 C6.55361169,15.569481 6.54545455,16.2545455 7.29591229,16.2545455 C8.06280792,16.2545455 8.02603896,15.56334 8.03209502,15.56334 C8.03821288,15.56334 8.03209502,12.1182301 8.03209502,12.1182301 L9.27754342,15.56334 C9.27754342,15.56334 9.46151186,16.2407127 10.0381976,16.2283686 C10.6148833,16.2161486 10.7804982,15.56334 10.7804982,15.56334 L11.823501,12.1244331 L11.823501,15.56334 C11.823501,15.56334 11.823501,16.2545455 12.5780991,16.2545455 C13.3081022,16.2545455 13.3081022,15.56334 13.3081022,15.56334 L13.3090909,8.88948239 C13.3090909,8.88948239 13.3090909,8.07272727 12.5166733,8.07663519 C11.8595284,8.07973672 11.609932,8.71207526 11.5669215,8.85710249 C11.5619778,8.8740368 11.5596913,8.88327934 11.5596913,8.88327934\\\" id=\\\"Fill-9\\\" fill=\\\"#00C0EE\\\"></path><g id=\\\"Group-13\\\"><mask id=\\\"mask-2\\\" fill=\\\"white\\\"><use xlink:href=\\\"#path-1\\\"></use></mask><g id=\\\"Clip-12\\\"></g><path d=\\\"M42.6159341,18.6971754 L29.5208652,18.6971754 L19.9057529,18.6956369 L19.9124196,18.7062215 C18.0119775,20.9263446 15.1892466,22.3382831 12.0318843,22.3382831 C6.30740974,22.3382831 1.66682976,17.7116369 1.66682976,12.0048677 C1.66682976,6.29803692 6.30740974,1.67182154 12.0318843,1.67182154 C15.2027652,1.67182154 18.0390147,3.09182154 19.9398272,5.32819077 L22.0210727,5.32819077 C19.8613082,2.12277538 16.1963507,0.00960615385 12.0318843,0.00960615385 C5.38703452,0.00960615385 3.086436e-05,5.38012923 3.086436e-05,12.0048677 C3.086436e-05,18.6296062 5.38703452,24.0000062 12.0318843,24.0000062 C15.5178286,24.0000062 18.6504994,22.5164985 20.846622,20.1542215 L41.6296327,20.1336062 L42.6159341,18.6971754 Z\\\" id=\\\"Fill-11\\\" fill=\\\"#00C0EE\\\" mask=\\\"url(#mask-2)\\\"></path></g><path d=\\\"M23.5642714,14.6942333 L21.476941,14.6942333 L21.476941,12.703212 L23.5642714,12.703212 C24.0691167,12.729228 24.5593003,12.986305 24.5593003,13.698846 C24.5593003,14.4306215 24.1135333,14.6942333 23.5642714,14.6942333 Z M21.476941,9.5856756 L23.4225205,9.5856756 C23.8122278,9.59572442 24.2213404,9.80372869 24.2213404,10.3852036 C24.2213404,10.9910915 23.8636056,11.1846082 23.4225205,11.1846082 L21.476941,11.1846082 L21.476941,9.5856756 Z M25.2086687,11.7878453 C25.2484033,11.7332241 25.7477042,11.3284357 25.7082776,10.252103 C25.6287468,8.0729285 23.7375637,8.09777311 23.3189641,8.08507338 C22.644646,8.06479081 22.2387368,8.0729285 21.0010496,8.08507338 C19.9559983,8.09543044 19.9636372,9.0459372 19.9636372,9.0459372 L19.9636364,16.1454545 L23.4862807,16.1454545 C25.3714882,16.1454545 26.0727273,15.1069128 26.0727273,13.6549518 C26.0727273,12.1940516 25.2086687,11.7878453 25.2086687,11.7878453 Z\\\" id=\\\"Fill-14\\\" fill=\\\"#1A4B67\\\"></path></g></g></g></svg>\"","module.exports = \"{% block swag_paypal_payment_action_capture %}\\n    <sw-modal variant=\\\"small\\\"\\n              :title=\\\"$tc(`swag-paypal-payment.modal.title.capture`)\\\"\\n              @modal-close=\\\"$emit('modal-close')\\\">\\n\\n        {% block swag_paypal_payment_action_capture_max_amount %}\\n            <sw-text-field v-model=\\\"maxCaptureValue\\\"\\n                           :label=\\\"$tc('swag-paypal-payment.captureAction.maxAmount')\\\"\\n                           :disabled=\\\"true\\\">\\n            </sw-text-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_capture_value %}\\n            <sw-number-field v-model=\\\"captureValue\\\"\\n                             :max=\\\"maxCaptureValue\\\"\\n                             :min=\\\"0\\\"\\n                             :label=\\\"$tc('swag-paypal-payment.captureAction.currentAmount')\\\">\\n                <template #suffix>\\n                    {{ currency }}\\n                </template>\\n            </sw-number-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_capture_is_final_capture %}\\n            <sw-checkbox-field v-model=\\\"isFinalCapture\\\"\\n                               :label=\\\"$tc('swag-paypal-payment.captureAction.isFinal')\\\">\\n            </sw-checkbox-field>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_capture_hint %}\\n            <sw-alert v-if=\\\"showHint\\\">\\n                {{ $tc('swag-paypal-payment.captureAction.isFinalHint') }}\\n            </sw-alert>\\n        {% endblock %}\\n\\n        {% block swag_paypal_payment_action_capture_submit_button %}\\n            <template #modal-footer>\\n                <sw-button variant=\\\"primary\\\"\\n                           @click=\\\"capture\\\">\\n                    {{ $tc('swag-paypal-payment.captureAction.button.text') }}\\n                </sw-button>\\n            </template>\\n        {% endblock %}\\n\\n        <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n    </sw-modal>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_payment_actions_v2 %}\\n    <div>\\n        <div class=\\\"swag-paypal-payment-actions-v2__button-container\\\">\\n            <div>\\n                {% block swag_paypal_payment_actions_v2_void %}\\n                    <sw-button v-if=\\\"showVoidButton\\\"\\n                               size=\\\"small\\\"\\n                               :disabled=\\\"!acl.can('order.editor')\\\"\\n                               @click=\\\"spawnModal('void')\\\">\\n                        {{ $tc('swag-paypal-payment.buttons.label.void') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block swag_paypal_payment_actions_v2_capture %}\\n                    <sw-button v-if=\\\"captureableAmount > 0\\\"\\n                               size=\\\"small\\\"\\n                               :disabled=\\\"!acl.can('order.editor')\\\"\\n                               @click=\\\"spawnModal('capture')\\\">\\n                        {{ $tc('swag-paypal-payment.buttons.label.capture') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </div>\\n\\n            {% block swag_paypal_payment_actions_v2_refund %}\\n                <sw-button variant=\\\"primary\\\"\\n                           size=\\\"small\\\"\\n                           :disabled=\\\"refundableAmount <= 0 || !acl.can('order.editor')\\\"\\n                           @click=\\\"spawnModal('refund')\\\">\\n                    {{ $tc('swag-paypal-payment.buttons.label.refund') }}\\n                </sw-button>\\n            {% endblock %}\\n\\n        </div>\\n\\n        {% block swag_paypal_payment_actions_v2_modal %}\\n            {% block swag_paypal_payment_actions_v2_modal_refund %}\\n                <swag-paypal-payment-action-v2-refund\\n                        v-if=\\\"modalType === 'refund'\\\"\\n                        :orderTransactionId=\\\"orderTransactionId\\\"\\n                        :paypalOrder=\\\"paypalOrder\\\"\\n                        :paypalPartnerAttributionId=\\\"paypalPartnerAttributionId\\\"\\n                        @modal-close=\\\"closeModal\\\">\\n                </swag-paypal-payment-action-v2-refund>\\n            {% endblock %}\\n\\n            {% block swag_paypal_payment_actions_v2_modal_capture %}\\n                <swag-paypal-payment-action-v2-capture\\n                        v-if=\\\"modalType === 'capture'\\\"\\n                        :orderTransactionId=\\\"orderTransactionId\\\"\\n                        :paypalOrder=\\\"paypalOrder\\\"\\n                        :paypalPartnerAttributionId=\\\"paypalPartnerAttributionId\\\"\\n                        :captureableAmount=\\\"captureableAmount\\\"\\n                        @modal-close=\\\"closeModal\\\">\\n                </swag-paypal-payment-action-v2-capture>\\n            {% endblock %}\\n\\n            {% block swag_paypal_payment_actions_v2_modal_void %}\\n                <swag-paypal-payment-action-v2-void\\n                        v-if=\\\"modalType === 'void'\\\"\\n                        :orderTransactionId=\\\"orderTransactionId\\\"\\n                        :paypalOrder=\\\"paypalOrder\\\"\\n                        :paypalPartnerAttributionId=\\\"paypalPartnerAttributionId\\\"\\n                        @modal-close=\\\"closeModal\\\">\\n                </swag-paypal-payment-action-v2-void>\\n            {% endblock %}\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block swag_paypal_content_card_channel_config_credentials %}\\n                {% block swag_paypal_content_card_channel_config_credentials_card_container_settings %}\\n                    <div v-if=\\\"actualConfigData\\\" class=\\\"swag-paypal-settings-credentials-fields\\\">\\n\\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_client_id %}\\n                            <sw-inherit-wrapper v-model=\\\"actualConfigData['SwagPayPal.settings.clientId']\\\"\\n                                                :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['SwagPayPal.settings.clientId']\\\"\\n                                                :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                <template #content=\\\"props\\\">\\n                                    <sw-text-field name=\\\"SwagPayPal.settings.clientId\\\"\\n                                                   :mapInheritance=\\\"props\\\"\\n                                                   :label=\\\"$tc('swag-paypal.settingForm.credentials.clientId.label')\\\"\\n                                                   :helpText=\\\"$tc('swag-paypal.settingForm.credentials.clientId.tooltipText')\\\"\\n                                                   :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                                   :value=\\\"props.currentValue\\\"\\n                                                   :error=\\\"clientIdErrorState\\\"\\n                                                   @change=\\\"props.updateCurrentValue\\\">\\n                                    </sw-text-field>\\n                                </template>\\n                            </sw-inherit-wrapper>\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_client_secret %}\\n                            <sw-inherit-wrapper v-model=\\\"actualConfigData['SwagPayPal.settings.clientSecret']\\\"\\n                                                :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['SwagPayPal.settings.clientSecret']\\\"\\n                                                :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                <template #content=\\\"props\\\">\\n                                    <sw-text-field name=\\\"SwagPayPal.settings.clientSecret\\\"\\n                                                   :mapInheritance=\\\"props\\\"\\n                                                   :label=\\\"$tc('swag-paypal.settingForm.credentials.clientSecret.label')\\\"\\n                                                   :helpText=\\\"$tc('swag-paypal.settingForm.credentials.clientSecret.tooltipText')\\\"\\n                                                   :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                                   :value=\\\"props.currentValue\\\"\\n                                                   :error=\\\"clientSecretErrorState\\\"\\n                                                   @change=\\\"props.updateCurrentValue\\\">\\n                                    </sw-text-field>\\n                                </template>\\n                            </sw-inherit-wrapper>\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_merchant_id %}\\n                            <sw-inherit-wrapper v-model=\\\"actualConfigData['SwagPayPal.settings.merchantPayerId']\\\"\\n                                                :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['SwagPayPal.settings.merchantPayerId']\\\"\\n                                                :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                <template #content=\\\"props\\\">\\n                                    <sw-text-field name=\\\"SwagPayPal.settings.merchantPayerId\\\"\\n                                                   :mapInheritance=\\\"props\\\"\\n                                                   :label=\\\"$tc('swag-paypal.settingForm.credentials.merchantPayerId.label')\\\"\\n                                                   :helpText=\\\"$tc('swag-paypal.settingForm.credentials.merchantPayerId.tooltipText')\\\"\\n                                                   :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                                   :value=\\\"props.currentValue\\\"\\n                                                   @change=\\\"props.updateCurrentValue\\\">\\n                                    </sw-text-field>\\n                                </template>\\n                            </sw-inherit-wrapper>\\n                        {% endblock %}\\n\\n                        {# @deprecated tag:v6.0.0 - Will be removed without replacement #}\\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_actions_get_credentials %}\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_actions_test %}\\n                            <sw-button-process v-model=\\\"isTestLiveSuccessful\\\"\\n                                               class=\\\"swag-paypal-settings-credentials-fields__test-button\\\"\\n                                               :isLoading=\\\"isTestingLive\\\"\\n                                               :disabled=\\\"testLiveButtonDisabled\\\"\\n                                               @click=\\\"onTest(false)\\\">\\n                                {{ $tc('swag-paypal.settingForm.testLive') }}\\n                            </sw-button-process>\\n                        {% endblock %}\\n\\n                        {# @deprecated tag:v6.0.0 - Will be removed without replacement #}\\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_sandbox %}\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_client_id_sandbox %}\\n                            <sw-inherit-wrapper v-model=\\\"actualConfigData['SwagPayPal.settings.clientIdSandbox']\\\"\\n                                                :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['SwagPayPal.settings.clientIdSandbox']\\\"\\n                                                :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                <template #content=\\\"props\\\">\\n                                    <sw-text-field name=\\\"SwagPayPal.settings.clientIdSandbox\\\"\\n                                                   :mapInheritance=\\\"props\\\"\\n                                                   :label=\\\"$tc('swag-paypal.settingForm.credentials.clientIdSandbox.label')\\\"\\n                                                   :helpText=\\\"$tc('swag-paypal.settingForm.credentials.clientIdSandbox.tooltipText')\\\"\\n                                                   :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                                   :value=\\\"props.currentValue\\\"\\n                                                   :error=\\\"clientIdSandboxErrorState\\\"\\n                                                   @change=\\\"props.updateCurrentValue\\\">\\n                                    </sw-text-field>\\n                                </template>\\n                            </sw-inherit-wrapper>\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_client_secret_sandbox %}\\n                            <sw-inherit-wrapper v-model=\\\"actualConfigData['SwagPayPal.settings.clientSecretSandbox']\\\"\\n                                                :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['SwagPayPal.settings.clientSecretSandbox']\\\"\\n                                                :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                <template #content=\\\"props\\\">\\n                                    <sw-text-field name=\\\"SwagPayPal.settings.clientSecretSandbox\\\"\\n                                                   :mapInheritance=\\\"props\\\"\\n                                                   :label=\\\"$tc('swag-paypal.settingForm.credentials.clientSecretSandbox.label')\\\"\\n                                                   :helpText=\\\"$tc('swag-paypal.settingForm.credentials.clientSecretSandbox.tooltipText')\\\"\\n                                                   :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                                   :value=\\\"props.currentValue\\\"\\n                                                   :error=\\\"clientSecretSandboxErrorState\\\"\\n                                                   @change=\\\"props.updateCurrentValue\\\">\\n                                    </sw-text-field>\\n                                </template>\\n                            </sw-inherit-wrapper>\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_merchant_id_sandbox %}\\n                            <sw-inherit-wrapper v-model=\\\"actualConfigData['SwagPayPal.settings.merchantPayerIdSandbox']\\\"\\n                                                :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['SwagPayPal.settings.merchantPayerIdSandbox']\\\"\\n                                                :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                <template #content=\\\"props\\\">\\n                                    <sw-text-field name=\\\"SwagPayPal.settings.merchantPayerIdSandbox\\\"\\n                                                   :mapInheritance=\\\"props\\\"\\n                                                   :label=\\\"$tc('swag-paypal.settingForm.credentials.merchantPayerIdSandbox.label')\\\"\\n                                                   :helpText=\\\"$tc('swag-paypal.settingForm.credentials.merchantPayerIdSandbox.tooltipText')\\\"\\n                                                   :disabled=\\\"props.isInherited || !acl.can('swag_paypal.editor')\\\"\\n                                                   :value=\\\"props.currentValue\\\"\\n                                                   @change=\\\"props.updateCurrentValue\\\">\\n                                    </sw-text-field>\\n                                </template>\\n                            </sw-inherit-wrapper>\\n                        {% endblock %}\\n\\n                        {# @deprecated tag:v6.0.0 - Will be removed without replacement #}\\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_actions_get_credentials_sandbox %}\\n                        {% endblock %}\\n\\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_actions_test_sandbox %}\\n                            <sw-button-process v-model=\\\"isTestSandboxSuccessful\\\"\\n                                               :isLoading=\\\"isTestingSandbox\\\"\\n                                               :disabled=\\\"testSandboxButtonDisabled\\\"\\n                                               @click=\\\"onTest(true)\\\">\\n                                {{ $tc('swag-paypal.settingForm.testSandbox') }}\\n                            </sw-button-process>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n{% endblock %}\\n\";","module.exports = \"<svg width=\\\"42px\\\" height=\\\"20px\\\" viewBox=\\\"0 0 42 20\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><title>logo OXXO</title><desc>Created with Sketch.</desc><defs></defs><g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><g id=\\\"SPB_&amp;_AltPay_NewAssets\\\" transform=\\\"translate(-100.000000, -159.000000)\\\"><g id=\\\"logo-OXXO\\\" transform=\\\"translate(100.000000, 159.000000)\\\"><path d=\\\"M0.142456528,1.48437917 C0.142456528,0.77043992 0.728159303,0.186243119 1.44446761,0.186243119 L40.6503931,0.186243119 C41.3667014,0.186243119 41.9524042,0.77043992 41.9524042,1.48437917 L41.9524042,18.1011373 C41.9524042,18.8150765 41.3667014,19.3990362 40.6503931,19.3990362 L1.44446761,19.3990362 C0.728159303,19.3990362 0.142456528,18.8150765 0.142456528,18.1011373 L0.142456528,1.48437917 Z\\\" id=\\\"Fill-2\\\" fill=\\\"#EDA42D\\\"></path><polygon id=\\\"Fill-4\\\" fill=\\\"#FEFEFE\\\" points=\\\"0.142480318 17.5124813 41.952428 17.5124813 41.952428 2.07265562 0.142480318 2.07265562\\\"></polygon><path d=\\\"M35.5752619,6.08262231 C33.662331,6.08262231 32.1029152,7.63763417 32.1029152,9.54463469 C32.1029152,11.4511608 33.662331,13.0064099 35.5752619,13.0064099 C37.4877171,13.0064099 39.0471329,11.4511608 39.0471329,9.54463469 C39.0471329,7.63763417 37.4877171,6.08262231 35.5752619,6.08262231\\\" id=\\\"Fill-6\\\" fill=\\\"#EC1D24\\\"></path><path d=\\\"M6.95585459,6.08262231 C5.04268574,6.08262231 3.48326994,7.63763417 3.48326994,9.54463469 C3.48326994,11.4511608 5.04268574,13.0064099 6.95585459,13.0064099 C8.86807185,13.0064099 10.4277255,11.4511608 10.4277255,9.54463469 C10.4277255,7.63763417 8.86807185,6.08262231 6.95585459,6.08262231\\\" id=\\\"Fill-7\\\" fill=\\\"#EC1D24\\\"></path><path d=\\\"M35.5752619,15.0141446 C32.5537303,15.0141446 30.0893537,12.5573397 30.0893537,9.54480072 C30.0893537,6.53155015 32.5537303,4.07521964 35.5752619,4.07521964 C38.5970315,4.07521964 41.0609322,6.53155015 41.0609322,9.54480072 C41.0609322,12.5573397 38.5970315,15.0141446 35.5752619,15.0141446 Z M12.4411918,9.54480072 C12.4411918,12.5573397 9.97729109,15.0141446 6.95575943,15.0141446 C3.93351408,15.0141446 1.46985124,12.5573397 1.46985124,9.54480072 C1.46985124,6.53155015 3.93351408,4.07521964 6.95575943,4.07521964 C9.97729109,4.07521964 12.4411918,6.53155015 12.4411918,9.54480072 Z M35.3028697,3.03585692 C32.0884035,2.9620911 30.5772808,5.01709763 28.384107,7.55170056 L26.3151155,9.94232969 L29.591435,13.8526295 C30.3719756,15.0542296 28.8822636,16.2465793 27.9580332,15.1472077 L24.9288888,11.5447794 L21.9772989,14.9562705 C21.0373673,16.0421223 19.5645461,14.8288999 20.3617394,13.6386849 L23.5659761,9.92382894 L21.4667717,7.42693908 L22.8173138,5.75949957 L24.9522028,8.31639828 L26.7923372,6.18217058 C27.6953948,5.13569219 28.6162946,3.74884741 29.8098246,3.03585692 L0.142385159,3.03585692 L0.142385159,16.549707 L7.07875226,16.549707 C10.2934564,16.549707 11.7529554,14.6332189 13.8866549,12.0492806 L15.8999784,9.61097649 L12.5334959,5.77752594 C11.726073,4.59418943 13.1874752,3.36815887 14.1371606,4.44594623 L17.2483795,7.9779294 L20.1209875,4.49931378 C21.0354641,3.39164059 22.5356435,4.57118208 21.7662842,5.77942346 L18.6486421,9.56757088 L20.8051797,12.0153626 L19.4463112,13.6197098 L17.2997653,11.2058361 L15.5095892,13.3813347 C14.6310351,14.4484486 13.7415376,15.8094397 12.5646605,16.549707 L41.9523328,16.549707 L41.9523328,3.03585692 L35.3028697,3.03585692 Z\\\" id=\\\"Fill-8\\\" fill=\\\"#EC1D24\\\"></path></g></g></g></svg>\""],"sourceRoot":""}