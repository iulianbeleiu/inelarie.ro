!function(e){var n={};function t(a){if(n[a])return n[a].exports;var s=n[a]={i:a,l:!1,exports:{}};return e[a].call(s.exports,s,s.exports,t),s.l=!0,s.exports}t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var s in e)t.d(a,s,function(n){return e[n]}.bind(null,s));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/bundles/administration/",t(t.s="R7U6")}({"+B3i":function(e,n){e.exports='{% block swag_paypal_pos_account %}\n    <sw-card class="swag-paypal-pos-account"\n             :title="$tc(\'sw-sales-channel.detail.titleAccount\')"\n             :isLoading="isLoading">\n\n        {% block swag_paypal_pos_account_grid %}\n            <sw-container columns="min-content 1fr" align="center">\n\n                {% block swag_paypal_pos_account_grid_logo %}\n                    <img class="swag-paypal-pos-account__logo"\n                         alt="Zettle Logo"\n                         :src="\'/swagpaypal/static/img/paypal-pos-logo.svg\' | asset">\n                {% endblock %}\n\n                {% block swag_paypal_pos_account_grid_container %}\n                    <div class="swag-paypal-pos-account__container">\n\n                        {% block swag_paypal_pos_account_grid_container_info %}\n                            <div class="swag-paypal-pos-account__account-info">\n\n                                {% block swag_paypal_pos_account_grid_container_info_name %}\n                                    <div class="swag-paypal-pos-account__name">\n                                        {{ accountName }}\n                                    </div>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_account_grid_container_info_email %}\n                                    <div class="swag-paypal-pos-account__email">\n                                        {{ accountEmail }}\n                                    </div>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_account_grid_container_info_link %}\n                                    <sw-external-link href="https://my.zettle.com"\n                                                      class="swag-paypal-pos-account__manage-link">\n\n                                        {% block swag_paypal_pos_account_grid_container_info_link_text %}\n                                            {{ $tc(\'swag-paypal-pos.account.manageAccount\') }}\n                                        {% endblock %}\n\n                                    </sw-external-link>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_account_grid_container_info_edit_button %}\n                                    {# ToDo PPI-109 - Implement edit connection functionality #}\n                                    <sw-button v-if="false"\n                                               class="swag-paypal-pos-account__edit-connection-button"\n                                               size="small"\n                                               block>\n                                        {{ $tc(\'swag-paypal-pos.account.editConnection\') }}\n                                    </sw-button>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_account_grid_container_status %}\n                            <div class="swag-paypal-pos-account__status-container">\n\n                                {% block swag_paypal_pos_account_grid_container_status_label %}\n                                    <sw-label class="swag-paypal-pos-account__status-label"\n                                              size="medium"\n                                              appearance="pill"\n                                              :variant="connectionStatusVariant"\n                                              :ghost="false"\n                                              :caps="false">\n\n                                        {% block swag_paypal_pos_account_grid_container_status_label_badge %}\n                                            <sw-color-badge class="swag-paypal-pos-account__status-color-badge"\n                                                            rounded\n                                                            :variant="connectionStatusVariant">\n                                            </sw-color-badge>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_pos_account_grid_container_status_label_text %}\n                                            <span class="swag-paypal-pos-account__status-text">\n                                                {{ connectionStatusText }}\n                                            </span>\n                                        {% endblock %}\n                                    </sw-label>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_account_grid_container_status_updated %}\n                                    <div v-if="lastRun"\n                                         class="swag-paypal-pos-account__status-updated">\n                                        {{ $tc(\'swag-paypal-pos.account.lastUpdated\') }} {{ lastRun.updatedAt | date({\n                                            hour: \'2-digit\',\n                                            minute: \'2-digit\',\n                                            second: \'2-digit\',\n                                            day: \'2-digit\',\n                                            month: \'short\',\n                                            year: \'numeric\'\n                                        }) }}\n                                    </div>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </sw-container>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n'},"+M/s":function(e,n,t){var a=t("qM/F");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("302d720e",a,!0,{})},"+Mrb":function(e,n){e.exports='{% block sw_sales_channel_grid_columns_icon %}\n    <sw-grid-column\n            v-if="isPayPalPosSalesChannel(item.id)"\n            class="sw-sales-channel-modal-grid__icon-column"\n            flex="85px"\n            dataIndex="icon">\n        <span class="sw-sales-channel-modal-grid__icon" @click="onOpenDetail(item.id)">\n             <img class="swag-paypal-pos-modal-grid__icon"\n                  :src="\'swagpaypal/static/img/paypal-pos-logo.svg\' | asset">\n        </span>\n    </sw-grid-column>\n\n    <template v-else>\n        {% parent %}\n    </template>\n{% endblock %}\n'},"+TPH":function(e,n){e.exports='{% block swag_paypal_pos_wizard_sync_prices %}\n    <div class="swag-paypal-pos-wizard-sync-prices">\n\n        {% block swag_paypal_pos_wizard_sync_prices_header %}\n            <div class="swag-paypal-pos-wizard-sync-prices__headline">\n                {{ $tc(\'swag-paypal-pos.wizard.syncPrices.header\') }}\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_sync_prices_description_input %}\n            <swag-paypal-pos-boolean-radio\n                v-model="salesChannel.extensions.paypalPosSalesChannel.syncPrices"\n                :label="$tc(\'swag-paypal-pos.wizard.syncPrices.description\')"\n                :optionTrue="optionTrue"\n                :optionFalse="optionFalse">\n            </swag-paypal-pos-boolean-radio>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_sync_prices_disclaimer %}\n            <div class="swag-paypal-pos-wizard-sync-prices__disclaimer">\n                {{ $tc(\'swag-paypal-pos.wizard.syncPrices.disclaimer\') }}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},"1Sl5":function(e,n,t){},"29Gb":function(e,n,t){var a=t("iJwy");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("50ad58bd",a,!0,{})},"3Q6Q":function(e,n,t){var a=t("52Xg");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("867403d8",a,!0,{})},"3e5x":function(e,n){e.exports='{% block swag_paypal_content_card_channel_config_behavior %}\n    <sw-card :title="$tc(\'swag-paypal.settingForm.behavior.cardTitle\')">\n\n        {% block swag_paypal_content_card_channel_config_behavior_settings %}\n            <div v-if="actualConfigData" class="swag-paypal-settings-behavior-field">\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_merchant_location %}\n                    <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.merchantLocation\']"\n                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.merchantLocation\']"\n                                        :customInheritationCheckFunction="checkTextFieldInheritance"\n                                        :label="$tc(\'swag-paypal.settingForm.behavior.merchantLocation.label\')">\n                        <template #content="props">\n                            <sw-single-select name="SwagPayPal.settings.merchantLocation"\n                                              labelProperty="name"\n                                              valueProperty="id"\n                                              :options="merchantLocationOptions"\n                                              :isInherited="props.isInherited"\n                                              :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                              :value="props.currentValue"\n                                              @change="props.updateCurrentValue">\n                            </sw-single-select>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_intent %}\n                    <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.intent\']"\n                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.intent\']"\n                                        :customInheritationCheckFunction="checkTextFieldInheritance"\n                                        :label="$tc(\'swag-paypal.settingForm.behavior.intent.label\')">\n                        <template #content="props">\n                            <sw-single-select name="SwagPayPal.settings.intent"\n                                              labelProperty="name"\n                                              valueProperty="id"\n                                              :options="intentOptions"\n                                              :isInherited="props.isInherited"\n                                              :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                              :value="props.currentValue"\n                                              @change="props.updateCurrentValue">\n                            </sw-single-select>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_submit_cart %}\n                    <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.submitCart\']"\n                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.submitCart\']"\n                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.submitCart"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.behavior.submitCart.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.behavior.submitCart.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_brand_name %}\n                    <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.brandName\']"\n                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.brandName\']"\n                                        :customInheritationCheckFunction="checkTextFieldInheritance">\n                        <template #content="props">\n                            <sw-text-field name="SwagPayPal.settings.brandName"\n                                           :mapInheritance="props"\n                                           :label="$tc(\'swag-paypal.settingForm.behavior.brandName.label\')"\n                                           :helpText="$tc(\'swag-paypal.settingForm.behavior.brandName.tooltipText\')"\n                                           :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                           :value="props.currentValue"\n                                           @change="props.updateCurrentValue">\n                            </sw-text-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_landing_page %}\n                    <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.landingPage\']"\n                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.landingPage\']"\n                                        :customInheritationCheckFunction="checkTextFieldInheritance"\n                                        :label="$tc(\'swag-paypal.settingForm.behavior.landingPage.label\')">\n                        <template #content="props">\n                            <sw-single-select name="SwagPayPal.settings.landingPage"\n                                              labelProperty="name"\n                                              valueProperty="id"\n                                              :options="landingPageOptions"\n                                              :isInherited="props.isInherited"\n                                              :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                              :value="props.currentValue"\n                                              @change="props.updateCurrentValue">\n                            </sw-single-select>\n\n                            {% block swag_paypal_content_card_channel_config_behaviour_settings_landing_page_hint %}\n                                <swag-paypal-settings-hint :hintText="landingPageHint"></swag-paypal-settings-hint>\n                            {% endblock %}\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_send_order_number %}\n                    <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.sendOrderNumber\']"\n                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.sendOrderNumber\']"\n                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.sendOrderNumber"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.behavior.sendOrderNumber.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.behavior.sendOrderNumber.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_order_number %}\n                    <sw-container columns="1fr 1fr" gap="0px 30px">\n\n                        {% block swag_paypal_content_card_channel_config_behavior_settings_order_number_prefix %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.orderNumberPrefix\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.orderNumberPrefix\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="SwagPayPal.settings.orderNumberPrefix"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'swag-paypal.settingForm.behavior.orderNumberPrefix.label\')"\n                                                   :helpText="$tc(\'swag-paypal.settingForm.behavior.orderNumberPrefix.tooltipText\')"\n                                                   :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_behavior_settings_order_number_suffix %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.orderNumberSuffix\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.orderNumberSuffix\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="SwagPayPal.settings.orderNumberSuffix"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'swag-paypal.settingForm.behavior.orderNumberSuffix.label\')"\n                                                   :helpText="$tc(\'swag-paypal.settingForm.behavior.orderNumberSuffix.tooltipText\')"\n                                                   :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                    </sw-container>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_logging_level %}\n                    <sw-single-select v-model="allConfigs[\'null\'][\'SwagPayPal.settings.loggingLevel\']"\n                                      :options="loggingLevelOptions"\n                                      :label="$tc(\'swag-paypal.settingForm.behavior.loggingLevel.label\')"\n                                      :helpText="$tc(\'swag-paypal.settingForm.behavior.loggingLevel.tooltipText\')"\n                                      :disabled="!acl.can(\'swag_paypal.editor\')">\n                    </sw-single-select>\n                {% endblock %}\n\n            </div>\n        {% endblock %}\n\n    </sw-card>\n{% endblock %}\n'},"4m17":function(e,n){e.exports='{% block swag_paypal_paymemnt_action_void %}\n    <sw-modal variant="small"\n              :title="$tc(`swag-paypal-payment.modal.title.void`)"\n              @modal-close="closeModal">\n\n        {% block swag_paypal_paymemnt_action_void_headline %}\n            <p>{{ $tc(\'swag-paypal-payment.voidAction.confirm.message\') }}</p>\n        {% endblock %}\n\n        <template #modal-footer>\n\n            {% block swag_paypal_paymemnt_action_void_cancel_button %}\n                <sw-button @click="closeModal">\n                    {{ $tc(\'global.default.no\') }}\n                </sw-button>\n            {% endblock %}\n\n            {% block swag_paypal_paymemnt_action_void_confirm_button %}\n                <sw-button variant="primary"\n                           @click="voidPayment">\n                    {{ $tc(\'swag-paypal-payment.voidAction.confirm.button.confirm\') }}\n                </sw-button>\n            {% endblock %}\n\n        </template>\n\n        <sw-loader v-if="isLoading"\n                   size="43px">\n        </sw-loader>\n    </sw-modal>\n{% endblock %}\n'},"52Xg":function(e,n,t){},"56rz":function(e,n){e.exports='{% block swag_paypal_payment_action_capture_v2 %}\n    <sw-modal variant="small"\n              :title="$tc(`swag-paypal-payment.modal.title.capture`)"\n              @modal-close="$emit(\'modal-close\')">\n\n        {% block swag_paypal_payment_action_capture_v2_max_amount %}\n            <sw-text-field v-model="captureableAmount"\n                           :label="$tc(\'swag-paypal-payment.captureAction.maxAmount\')"\n                           :disabled="true">\n                <template #suffix v-if="currencyCode">\n                    {{ currencyCode }}\n                </template>\n            </sw-text-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_v2_amount %}\n            <sw-number-field v-model="captureAmount"\n                             :max="captureableAmount"\n                             :min="0"\n                             :label="$tc(\'swag-paypal-payment.captureAction.currentAmount\')">\n                <template #suffix v-if="currencyCode">\n                    {{ currencyCode }}\n                </template>\n            </sw-number-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_v2_invoice_number %}\n            <swag-paypal-text-field\n                    v-model="captureInvoiceNumber"\n                    maxLength="127"\n                    :label="$tc(\'swag-paypal-payment.captureAction.captureInvoiceNumber.label\')"\n                    :placeholder="$tc(\'swag-paypal-payment.captureAction.captureInvoiceNumber.placeholder\')">\n            </swag-paypal-text-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_v2_note_to_payer %}\n            <swag-paypal-textarea-field\n                    v-model="captureNoteToPayer"\n                    maxLength="255"\n                    :placeholder="$tc(\'swag-paypal-payment.captureAction.captureNoteToPayer.placeholder\')"\n                    :label="$tc(\'swag-paypal-payment.captureAction.captureNoteToPayer.label\')">\n            </swag-paypal-textarea-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_v2_is_final_capture %}\n            <sw-checkbox-field\n                    v-model="isFinalCapture"\n                    :label="$tc(\'swag-paypal-payment.captureAction.isFinal\')">\n            </sw-checkbox-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_v2_hint %}\n            <sw-alert v-if="showHint">\n                {{ $tc(\'swag-paypal-payment.captureAction.isFinalHint\') }}\n            </sw-alert>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_v2_confirm_button %}\n            <template #modal-footer>\n                <sw-button variant="primary"\n                           @click="capture">\n                    {{ $tc(\'swag-paypal-payment.captureAction.button.text\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        <sw-loader v-if="isLoading"></sw-loader>\n    </sw-modal>\n{% endblock %}\n'},"5Ejy":function(e,n){e.exports='{% block swag_paypal_pos_wizard_sync_library %}\n    <div class="swag-paypal-pos-wizard-sync-library">\n\n        {% block swag_paypal_pos_wizard_sync_library_header %}\n            <i18n class="swag-paypal-pos-wizard-sync-library__headline"\n                  path="swag-paypal-pos.wizard.syncLibrary.header"\n                  tag="div">\n                <template #shopwareProducts>\n                    <span>{{ $tc(\'swag-paypal-pos.wizard.syncLibrary.shopwareProducts\', shopwareProductsCount) }}</span>\n                </template>\n                <template #posProducts>\n                    <span>{{ $tc(\'swag-paypal-pos.wizard.syncLibrary.posProducts\', posProductsCount) }}</span>\n                </template>\n            </i18n>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_sync_library_description_input %}\n            <sw-radio-field\n                v-model="salesChannel.extensions.paypalPosSalesChannel.replace"\n                class="swag-paypal-pos-boolean-radio"\n                :label="$tc(\'swag-paypal-pos.wizard.syncLibrary.description\')"\n                :options="options">\n            </sw-radio-field>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_sync_library_disclaimer %}\n            <div class="swag-paypal-pos-wizard-sync-library__disclaimer">\n                {{ $tc(\'swag-paypal-pos.wizard.syncLibrary.disclaimer\') }}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},"5Px7":function(e,n){e.exports='{% block swag_paypal_disputes_list %}\n    <sw-page class="swag-paypal-disputes-list">\n\n        {% block swag_paypal_disputes_list_smart_bar_header %}\n            <template #smart-bar-header>\n\n                {% block swag_paypal_disputes_list_smart_bar_header_title %}\n                    <h2>\n\n                        {% block swag_paypal_disputes_list_smart_bar_header_title_text %}\n                            {{ $tc(\'swag-paypal-disputes.list.title\') }}\n                        {% endblock %}\n\n                        {% block swag_paypal_disputes_list_smart_bar_header_amount %}\n                            <template v-if="!isLoading">\n                                ({{ total }})\n                            </template>\n                        {% endblock %}\n\n                    </h2>\n                {% endblock %}\n\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_disputes_list_content %}\n            <template #content>\n                <sw-loader v-if="isLoading"></sw-loader>\n                <template v-else>\n\n                    {% block swag_paypal_disputes_list_content_grid %}\n                        <sw-data-grid v-if="disputes.length > 0"\n                                      :dataSource="visibleDisputes"\n                                      :columns="disputesColumns"\n                                      :showActions="false"\n                                      :showSelection="false">\n\n                            {% block swag_paypal_disputes_list_content_grid_column_update_time %}\n                                <template #column-update_time="{ item }">\n                                    <div>\n                                        <div>{{ formatUpdateDate(item.update_time) }}</div>\n                                        <div>{{ formatUpdateTime(item.update_time) }}</div>\n                                    </div>\n                                </template>\n                            {% endblock %}\n\n\n                            {% block swag_paypal_disputes_list_content_grid_column_seller_response_due_date %}\n                                <template #column-response_due_date="{ item }">\n                                    <template v-if="item.seller_response_due_date">\n                                        <strong>{{ $tc(\'swag-paypal-disputes.common.response_due_date.seller\') }}</strong>:\n                                        {{ formatDate(item.seller_response_due_date) }}\n                                    </template>\n                                    <template v-else-if="item.buyer_response_due_date">\n                                        <strong>{{ $tc(\'swag-paypal-disputes.common.response_due_date.buyer\') }}</strong>:\n                                        {{ formatDate(item.buyer_response_due_date) }}\n                                    </template>\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_disputes_list_content_grid_column_status %}\n                                <template #column-status="{ item }">\n                                    <div>\n                                        <div>\n                                            {{ formatTechnicalText(item.dispute_state) }}\n                                            <template v-if="item.dispute_state !== item.status"> ({{ formatTechnicalText(item.status) }})</template>\n                                        </div>\n                                        <div class="swag-paypal-disputes-list__reason">\n                                            {{ formatTechnicalText(item.reason) }}\n                                        </div>\n                                    </div>\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_disputes_list_content_grid_column_dispute_id %}\n                                <template #column-dispute_id="{ item }">\n                                    <router-link :to="{ name: \'swag.paypal.disputes.detail\', params: { disputeId: item.dispute_id , salesChannelId} }">\n                                        {{ item.dispute_id }}\n                                    </router-link>\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_disputes_list_content_grid_column_dispute_life_cycle_stage %}\n                                <template #column-dispute_life_cycle_stage="{ item }">\n                                    <div v-if="item.dispute_life_cycle_stage === \'INQUIRY\'"\n                                          class="swag-paypal-disputes-list__stage-inquiry">\n                                        {{ formatTechnicalText(item.dispute_life_cycle_stage) }}\n                                    </div>\n                                    <div v-else\n                                          class="swag-paypal-disputes-list__stage-other">\n                                        {{ formatTechnicalText(item.dispute_life_cycle_stage) }}\n                                    </div>\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_disputes_list_content_grid_column_dispute_amount %}\n                                <template #column-dispute_amount="{ item }">\n                                    {{ item.dispute_amount.value }} {{ item.dispute_amount.currency_code }}\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_disputes_list_content_grid_pagination %}\n                                <template #pagination>\n                                    <sw-pagination\n                                        :page="page"\n                                        :limit="limit"\n                                        :total="total"\n                                        @page-change="onPageChange">\n                                    </sw-pagination>\n                                </template>\n                            {% endblock %}\n\n                        </sw-data-grid>\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_list_content_empty_state %}\n                        <sw-empty-state\n                            v-if="disputes.length === 0"\n                            :title="$tc(\'swag-paypal-disputes.list.emptyState.title\')"\n                            :subline="$tc(\'swag-paypal-disputes.list.emptyState.subline\')"\n                            icon="default-communication-speech-bubbles"\n                            color="#F88962">\n                        </sw-empty-state>\n                    {% endblock %}\n\n                </template>\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_disputes_list_sidebar %}\n            <template #sidebar>\n                <sw-sidebar class="swag-paypal-disputes-list__sidebar">\n\n                    {% block swag_paypal_disputes_list_sidebar_refresh %}\n                        <sw-sidebar-item\n                            icon="default-arrow-360-left"\n                            :title="$tc(\'swag-paypal-disputes.list.titleSidebarItemRefresh\')"\n                            @click="onRefresh">\n                        </sw-sidebar-item>\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_list_sidebar_filter %}\n                        <sw-sidebar-item icon="default-action-filter"\n                                         :title="$tc(\'swag-paypal-disputes.list.titleSidebarItemFilter\')">\n\n                            {% block swag_paypal_disputes_list_sidebar_filter_items %}\n                                {% block swag_paypal_disputes_list_sidebar_filter_sales_channel %}\n                                    <sw-sales-channel-switch :label="$tc(\'sw-settings.system-config.labelSalesChannelSelect\')"\n                                                             @change-sales-channel-id="onSalesChannelChanged">\n                                    </sw-sales-channel-switch>\n                                {% endblock %}\n\n                                {% block swag_paypal_disputes_list_sidebar_filter_dispute_state %}\n                                    <sw-multi-select\n                                        :label="$tc(\'swag-paypal-disputes.common.status\')"\n                                        :options="disputeStates"\n                                        :value="disputeStateFilter"\n                                        @change="onChangeDisputeStateFilter">\n                                    </sw-multi-select>\n                                {% endblock %}\n                            {% endblock %}\n\n                        </sw-sidebar-item>\n                    {% endblock %}\n\n                </sw-sidebar>\n            </template>\n        {% endblock %}\n\n    </sw-page>\n{% endblock %}\n'},"5z16":function(e,n){e.exports='{% block swag_paypal_pos_wizard_connection_disconnect %}\n    <div class="swag-paypal-pos-wizard-connection-disconnect">\n\n        {% block swag_paypal_pos_wizard_connection_disconnect_headline_content %}\n            <div class="swag-paypal-pos-wizard-connection-disconnect__content">\n\n                {% block swag_paypal_pos_wizard_connection_disconnect_icon %}\n                    <div class="swag-paypal-pos-wizard-connection-disconnect__icon-wrapper">\n                        <sw-icon class="swag-paypal-pos-wizard-connection-disconnect__icon"\n                                 name="default-badge-warning"\n                                 size="80px"\n                                 color="#de294c">\n                        </sw-icon>\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_disconnect_headline %}\n                    <div class="swag-paypal-pos-wizard-connection-disconnect__headline">\n                        {{ $tc(\'swag-paypal-pos.wizard.connectionDisconnect.headline\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_disconnect_info %}\n                    <div class="swag-paypal-pos-wizard-connection-disconnect__info">\n                        {{ $tc(\'swag-paypal-pos.wizard.connectionDisconnect.info\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_disconnect_user %}\n                    <sw-card class="swag-paypal-pos-wizard-connection-disconnect__user"\n                             :isLoading="isFetchingInformation">\n                        <sw-container class="swag-paypal-pos-wizard-connection-disconnect__user-container"\n                                      columns="30px auto 150px"\n                                      align="center"\n                                      gap="30px">\n\n                            {% block swag_paypal_pos_wizard_connection_disconnect_user_avatar %}\n                                <sw-avatar\n                                    class="swag-paypal-pos-wizard-connection-disconnect__user-avatar"\n                                    size="40px"\n                                    :firstName="posUser.firstName"\n                                    :lastName="posUser.lastName">\n                                </sw-avatar>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_wizard_connection_disconnect_user_information %}\n                                <div class="swag-paypal-pos-wizard-connection-disconnect__user-info">\n\n                                    {% block swag_paypal_pos_wizard_connection_disconnect_user_information_real %}\n                                        <div class="swag-paypal-pos-wizard-connection-disconnect__user-info-name">\n                                            {{ posUser.fullName }}\n                                        </div>\n                                        <div class="swag-paypal-pos-wizard-connection-disconnect__user-info-mail">\n                                            {{ posUser.mail }}\n                                        </div>\n                                    {% endblock %}\n                                </div>\n                            {% endblock %}\n                        </sw-container>\n                    </sw-card>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},"6/AX":function(e,n,t){var a=t("qIpu");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("885fe7f0",a,!0,{})},"69c+":function(e,n){Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:"swag_paypal",key:"swag_paypal_disputes",roles:{viewer:{privileges:["sales_channel:read"],dependencies:[]}}})},"6Lkv":function(e,n){e.exports='{% block swag_paypal_paymemnt_action_v2_void %}\n    <sw-modal variant="small"\n              :title="$tc(`swag-paypal-payment.modal.title.void`)"\n              @modal-close="closeModal">\n\n        {% block swag_paypal_paymemnt_action_v2_void_headline %}\n            <p>{{ $tc(\'swag-paypal-payment.voidAction.confirm.message\') }}</p>\n        {% endblock %}\n\n        <template #modal-footer>\n\n            {% block swag_paypal_paymemnt_action_v2_void_cancel_button %}\n                <sw-button @click="closeModal">\n                    {{ $tc(\'global.default.no\') }}\n                </sw-button>\n            {% endblock %}\n\n            {% block swag_paypal_paymemnt_action_v2_void_confirm_button %}\n                <sw-button variant="primary"\n                           @click="voidPayment">\n                    {{ $tc(\'swag-paypal-payment.voidAction.confirm.button.confirm\') }}\n                </sw-button>\n            {% endblock %}\n\n        </template>\n\n        <sw-loader v-if="isLoading" size="43px">\n        </sw-loader>\n    </sw-modal>\n{% endblock %}\n'},"6jJW":function(e,n,t){},"770j":function(e,n){e.exports='{% block sw_text_field %}\n    {% block swag_paypal_locale_field %}\n        <div class="swag-paypal-locale-field">\n\n            {% block swag_paypal_locale_field_contextual_field %}\n                <sw-contextual-field class="sw-field--text"\n                                     v-bind="$attrs"\n                                     :name="formFieldName"\n                                     :error="error"\n                                     @inheritance-restore="$emit(\'inheritance-restore\', $event)"\n                                     @inheritance-remove="$emit(\'inheritance-remove\', $event)"\n                                     v-on="$listeners">\n\n                    <template #sw-field-input="{ identification, error, disabled, size, setFocusClass, removeFocusClass, hasSuffix, hasPrefix }">\n                        <input type="text"\n                               :name="identification"\n                               :id="identification"\n                               :disabled="disabled"\n                               :value="currentValue"\n                               :placeHolder="placeholder"\n                               @input="onInput"\n                               @focus="setFocusClass"\n                               @blur="onBlur($event, removeFocusClass)"\n                               v-on="additionalListeners">\n                    </template>\n                </sw-contextual-field>\n            {% endblock %}\n\n            {% block swag_paypal_locale_field_information %}\n                <p class="swag-paypal-locale-field__text">\n\n                    {% block swag_paypal_locale_field_information_text %}\n                        {{ $tc(\'swag-paypal.settingForm.locale-field.infobox.text\') }}\n                    {% endblock %}\n\n                    {% block swag_paypal_locale_field_information_href %}\n                        <sw-external-link class="swag-paypal-locale-field__text-href"\n                                          href="https://developer.paypal.com/docs/api/reference/locale-codes/">\n                            {{ $tc(\'swag-paypal.settingForm.locale-field.infobox.href\') }}\n                        </sw-external-link>\n                    {% endblock %}\n\n                </p>\n            {% endblock %}\n\n        </div>\n    {% endblock %}\n\n{% endblock %}\n'},"7f4H":function(e,n){e.exports='{% block swag_paypal %}\n    <sw-page class="swag-paypal">\n\n        {% block swag_paypal_header %}\n            <template #smart-bar-header>\n                <h2>\n                    {{ $tc(\'sw-settings.index.title\') }}\n                    <sw-icon name="small-arrow-medium-right" small></sw-icon>\n                    {{ $tc(\'swag-paypal.header\') }}\n                </h2>\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_actions %}\n            <template #smart-bar-actions>\n                {% block swag_paypal_actions_save %}\n                    <sw-button-process v-model="isSaveSuccessful"\n                                       class="sw-settings-login-registration__save-action"\n                                       variant="primary"\n                                       :isLoading="isLoading"\n                                       :disabled="isLoading || savingDisabled || hasError || !acl.can(\'swag_paypal.editor\')"\n                                       @click="onSave">\n                        {{ $tc(\'global.default.save\') }}\n                    </sw-button-process>\n                {% endblock %}\n\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_content %}\n            <template #content>\n\n                {% block swag_paypal_content_card %}\n                    <sw-card-view>\n\n                        {% block swag_paypal_content_card_channel_config %}\n                            <sw-sales-channel-config v-model="config"\n                                                     ref="configComponent"\n                                                     domain="SwagPayPal.settings">\n\n                                {% block swag_paypal_content_card_channel_config_sales_channel %}\n                                    <template #select="{ onInput, selectedSalesChannelId }">\n\n                                        {% block swag_paypal_content_card_channel_config_sales_channel_card %}\n                                            <sw-card :title="$tc(\'global.entities.sales_channel\', 2)">\n\n                                                {% block swag_paypal_content_card_channel_config_sales_channel_card_title %}\n                                                    <sw-single-select v-model="selectedSalesChannelId"\n                                                                      labelProperty="translated.name"\n                                                                      valueProperty="id"\n                                                                      :isLoading="isLoading"\n                                                                      :options="salesChannels"\n                                                                      :disabled="!acl.can(\'swag_paypal.editor\')"\n                                                                      @change="onInput">\n                                                    </sw-single-select>\n                                                {% endblock %}\n\n                                                {% block swag_paypal_content_card_channel_config_sales_channel_card_footer %}\n                                                    <template #footer>\n\n                                                        {% block swag_paypal_content_card_channel_config_sales_channel_card_footer_container %}\n                                                        <sw-container columns="2fr 1fr"\n                                                                      gap="0px 30px">\n\n                                                            {% block swag_paypal_content_card_channel_config_sales_channel_card_footer_container_text %}\n                                                                <p>{{ $tc(\'swag-paypal.saleschannelCard.button.description\') }}</p>\n                                                            {% endblock %}\n\n                                                            {% block swag_paypal_content_card_channel_config_sales_channel_card_footer_container_button %}\n                                                                <sw-button-process v-model="isSetDefaultPaymentSuccessful"\n                                                                                   :isLoading="isSettingDefaultPaymentMethods"\n                                                                                   :disabled="!acl.can(\'swag_paypal.editor\')"\n                                                                                   @click="onSetPaymentMethodDefault">\n                                                                    {{ $tc(\'swag-paypal.saleschannelCard.button.label\') }}\n                                                                </sw-button-process>\n                                                            {% endblock %}\n\n                                                        </sw-container>\n                                                        {% endblock %}\n\n                                                    </template>\n                                                {% endblock %}\n\n                                            </sw-card>\n                                        {% endblock %}\n\n                                    </template>\n                                {% endblock %}\n\n                                {% block swag_paypal_content_card_channel_config_cards %}\n                                    <template #content="{ actualConfigData, allConfigs, selectedSalesChannelId }">\n                                        <div v-if="actualConfigData">\n\n                                            {% block swag_paypal_content_card_channel_config_credentials_card %}\n                                                <swag-paypal-credentials :actualConfigData="actualConfigData"\n                                                                       :allConfigs="allConfigs"\n                                                                       :selectedSalesChannelId="selectedSalesChannelId"\n                                                                       :clientIdErrorState="clientIdErrorState"\n                                                                       :clientSecretErrorState="clientSecretErrorState"\n                                                                       :clientIdSandboxErrorState="clientIdSandboxErrorState"\n                                                                       :clientSecretSandboxErrorState="clientSecretSandboxErrorState"\n                                                                       :clientIdFilled="clientIdFilled"\n                                                                       :clientSecretFilled="clientSecretFilled"\n                                                                       :clientIdSandboxFilled="clientIdSandboxFilled"\n                                                                       :clientSecretSandboxFilled="clientSecretSandboxFilled"\n                                                                       :isLoading="isLoading">\n                                                </swag-paypal-credentials>\n                                            {% endblock %}\n\n                                            {% block swag_paypal_content_card_channel_config_behavior %}\n                                                <swag-paypal-behavior :actualConfigData="actualConfigData"\n                                                                     :allConfigs="allConfigs"\n                                                                     :selectedSalesChannelId="selectedSalesChannelId">\n                                                </swag-paypal-behavior>\n                                            {% endblock %}\n\n                                            {% block swag_paypal_content_card_channel_config_express %}\n                                                <swag-paypal-express :actualConfigData="actualConfigData"\n                                                                   :allConfigs="allConfigs"\n                                                                   :selectedSalesChannelId="selectedSalesChannelId"\n                                                                   @preventSave="preventSave">\n                                                </swag-paypal-express>\n                                            {% endblock %}\n\n                                            {% block swag_paypal_content_card_channel_config_installment %}\n                                                <swag-paypal-installment :actualConfigData="actualConfigData"\n                                                                       :allConfigs="allConfigs"\n                                                                       :selectedSalesChannelId="selectedSalesChannelId">\n                                                </swag-paypal-installment>\n                                            {% endblock %}\n\n                                            {% block swag_paypal_content_card_channel_config_spb %}\n                                                <swag-paypal-spb v-if="showSPBCard"\n                                                               :actualConfigData="actualConfigData"\n                                                               :allConfigs="allConfigs"\n                                                               :selectedSalesChannelId="selectedSalesChannelId"\n                                                               @preventSave="preventSave">\n                                                </swag-paypal-spb>\n                                            {% endblock %}\n\n                                            {% block swag_paypal_content_card_channel_config_plus %}\n                                                <swag-paypal-plus v-if="showPlusCard"\n                                                                :actualConfigData="actualConfigData"\n                                                                :allConfigs="allConfigs"\n                                                                :selectedSalesChannelId="selectedSalesChannelId">\n                                                </swag-paypal-plus>\n                                            {% endblock %}\n\n                                        </div>\n                                    </template>\n                                {% endblock %}\n\n                            </sw-sales-channel-config>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_loading %}\n                            <sw-loader v-if="isLoading"></sw-loader>\n                        {% endblock %}\n\n                    </sw-card-view>\n                {% endblock %}\n\n            </template>\n        {% endblock %}\n\n    </sw-page>\n{% endblock %}\n'},"8+5b":function(e,n){e.exports='{% block swag_paypal_payment_action_capture %}\n    <sw-modal variant="small"\n              :title="$tc(`swag-paypal-payment.modal.title.capture`)"\n              @modal-close="$emit(\'modal-close\')">\n\n        {% block swag_paypal_payment_action_capture_max_amount %}\n            <sw-text-field v-model="maxCaptureValue"\n                           :label="$tc(\'swag-paypal-payment.captureAction.maxAmount\')"\n                           :disabled="true">\n            </sw-text-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_value %}\n            <sw-number-field v-model="captureValue"\n                             :max="maxCaptureValue"\n                             :min="0"\n                             :label="$tc(\'swag-paypal-payment.captureAction.currentAmount\')">\n                <template #suffix>\n                    {{ currency }}\n                </template>\n            </sw-number-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_is_final_capture %}\n            <sw-checkbox-field v-model="isFinalCapture"\n                               :label="$tc(\'swag-paypal-payment.captureAction.isFinal\')">\n            </sw-checkbox-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_hint %}\n            <sw-alert v-if="showHint">\n                {{ $tc(\'swag-paypal-payment.captureAction.isFinalHint\') }}\n            </sw-alert>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_submit_button %}\n            <template #modal-footer>\n                <sw-button variant="primary"\n                           @click="capture">\n                    {{ $tc(\'swag-paypal-payment.captureAction.button.text\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        <sw-loader v-if="isLoading"></sw-loader>\n    </sw-modal>\n{% endblock %}\n'},"9OLG":function(e,n,t){var a=t("D2Cs");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("d9b5eaae",a,!0,{})},"9lyR":function(e,n){e.exports='{% block sw_text_field %}\n    <sw-contextual-field\n            v-bind="$attrs"\n            v-on="$listeners"\n            class="sw-field--text"\n            :name="formFieldName"\n            @inheritance-restore="$emit(\'inheritance-restore\', $event)"\n            @inheritance-remove="$emit(\'inheritance-remove\', $event)">\n\n        <template v-if="hasPrefix" #sw-contextual-field-prefix="{ disabled, identification }">\n            <slot name="prefix" v-bind="{disabled, identification}"></slot>\n        </template>\n\n        <template #sw-field-input="{ identification, error, disabled, size, setFocusClass, removeFocusClass, hasSuffix, hasPrefix }">\n            <input v-bind="$attrs"\n                   v-on="additionalListeners"\n                   type="text"\n                   :name="identification"\n                   :id="identification"\n                   :disabled="disabled"\n                   :value="currentValue"\n                   :placeHolder="placeholder"\n                   @input="onInput"\n                   @change="onChange"\n                   @focus="setFocusClass"\n                   @blur="removeFocusClass">\n        </template>\n\n        <template v-if="copyable || hasSuffix" #sw-contextual-field-suffix="{disabled, identification}">\n            <slot name="suffix" v-bind="{ identification }"></slot>\n            <sw-field-copyable v-if="copyable"\n                               :displayName="identification"\n                               :copyableText="currentValue"\n                               :tooltip="copyableTooltip">\n            </sw-field-copyable>\n        </template>\n    </sw-contextual-field>\n{% endblock %}\n'},As2E:function(e,n,t){},BHCF:function(e,n,t){var a=t("IfGv");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("63cd7030",a,!0,{})},CA8G:function(e,n,t){var a=t("Zp9c");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("de8be3f6",a,!0,{})},CEzf:function(e){e.exports=JSON.parse('{"swag-paypal-frw-credentials":{"buttonGetCredentials":"Get API credentials","textIntroPayPal":"To get PayPal up and running you only need to provide your PayPal API credentials.","labelClientId":"Client ID","labelClientSecret":"Client secret","labelClientIdSandbox":"Sandbox client ID","labelClientSecretSandbox":"Sandbox client secret","labelSandbox":"Use sandbox","tooltipSandbox":"Depending on activation of the sandbox, separate credentials are saved.","labelSetDefault":"Set as default payment method","tooltipSetDefault":"PayPal will be set as default payment method of all Sales Channels. You can set individual default payment methods per Sales Channel in the settings module.","messageFetchedError":"Try again or use the advanced settings to provide your credentials.","textFetchedSuccessful":"Credentials have been fetched.","messageNoCredentials":"No credentials provided.","messageTestSuccess":"Credentials are valid."}}')},Cbh8:function(e,n,t){},"D+dM":function(e,n,t){var a=t("OyZE");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("428ef638",a,!0,{})},D2Cs:function(e,n,t){},DzBR:function(e,n,t){},EGIw:function(e,n){e.exports='{% block sw_first_run_wizard_paypal_credentials %}\n    <div class="sw-first-run-wizard-paypal-credentials">\n\n        {% block sw_first_run_wizard_paypal_credentials_inner %}\n            <sw-loader v-if="isLoading"></sw-loader>\n\n            {% block sw_first_run_wizard_paypal_credentials_intro %}\n                <p class="sw-first-run-wizard-paypal-credentials__headerText">\n                    {{ $tc(\'swag-paypal-frw-credentials.textIntroPayPal\') }}\n                </p>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_sandbox %}\n                <sw-switch-field v-model="config[\'SwagPayPal.settings.sandbox\']"\n                                 :label="$tc(\'swag-paypal-frw-credentials.labelSandbox\')"\n                                 :helpText="$tc(\'swag-paypal-frw-credentials.tooltipSandbox\')">\n                </sw-switch-field>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_button_container %}\n                <div class="sw-first-run-wizard-paypal-credentials__button-container">\n\n                    {% block sw_first_run_wizard_paypal_credentials_button %}\n                        <a class="sw-button sw-button--primary swag-paypal-frw__signup-button"\n                           target="_blank"\n                           :data-paypal-onboard-complete="onboardingCallback"\n                           :href="`${onboardingUrl}`"\n                           data-paypal-button="true">\n                            {{ $tc(\'swag-paypal-frw-credentials.buttonGetCredentials\') }}\n                        </a>\n                    {% endblock %}\n\n                    {% block sw_first_run_wizard_paypal_credentials_indicator %}\n                        <div class="sw-first-run-wizard-paypal-credentials__indicator">\n                            <template v-if="isGetCredentialsSuccessful">\n\n                                {% block sw_first_run_wizard_paypal_credentials_indicator_icon %}\n                                    <sw-icon name="small-default-checkmark-line-medium"\n                                             class="sw-first-run-wizard-paypal-credentials__icon-successful">\n                                    </sw-icon>\n                                {% endblock %}\n\n                                {% block sw_first_run_wizard_paypal_credentials_indicator_text %}\n                                    <span class="sw-first-run-wizard-paypal-credentials__text-indicator">\n                                        {{ $tc(\'swag-paypal-frw-credentials.textFetchedSuccessful\') }}\n                                    </span>\n                                {% endblock %}\n                            </template>\n                        </div>\n                    {% endblock %}\n                </div>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_client_id %}\n                <sw-text-field v-model="config[\'SwagPayPal.settings.clientId\']"\n                               v-show="!sandboxMode"\n                               :label="$tc(\'swag-paypal-frw-credentials.labelClientId\')"\n                               @change="onCredentialsChanged">\n                </sw-text-field>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_client_secret %}\n                <sw-text-field v-model="config[\'SwagPayPal.settings.clientSecret\']"\n                               v-show="!sandboxMode"\n                               :label="$tc(\'swag-paypal-frw-credentials.labelClientSecret\')"\n                               @change="onCredentialsChanged">\n                </sw-text-field>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_client_id_sandbox %}\n                <sw-text-field v-model="config[\'SwagPayPal.settings.clientIdSandbox\']"\n                               v-show="sandboxMode"\n                               :label="$tc(\'swag-paypal-frw-credentials.labelClientIdSandbox\')"\n                               @change="onCredentialsChanged">\n                </sw-text-field>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_client_secret_sandbox %}\n                <sw-text-field v-model="config[\'SwagPayPal.settings.clientSecretSandbox\']"\n                               v-show="sandboxMode"\n                               :label="$tc(\'swag-paypal-frw-credentials.labelClientSecretSandbox\')"\n                               @change="onCredentialsChanged">\n                </sw-text-field>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_set_default %}\n                <sw-switch-field v-model="setDefault"\n                                 :disabled="!credentialsProvided"\n                                 :label="$tc(\'swag-paypal-frw-credentials.labelSetDefault\')"\n                                 :helpText="$tc(\'swag-paypal-frw-credentials.tooltipSetDefault\')">\n                </sw-switch-field>\n            {% endblock %}\n        {% endblock %}\n    </div>\n{% endblock %}\n'},FEwq:function(e,n,t){},"G/Pn":function(e,n){e.exports='{% block sw_sales_channel_modal_detail_header_icon %}\n    <span v-if="isPayPalPosSalesChannel(detailType.id)"\n          class="sw-sales-channel-modal-detail__header-icon">\n         <img class="swag-paypal-pos-modal-detail__icon"\n              :src="\'swagpaypal/static/img/paypal-pos-logo.svg\' | asset">\n    </span>\n\n    <template v-else>\n        {% parent %}\n    </template>\n{% endblock %}\n\n{% block sw_sales_channel_modal_detail_header_meta %}\n    <div v-if="isPayPalPosSalesChannel(detailType.id)"\n         class="sw-sales-channel-modal-detail__header-meta">\n        <h4 class="sw-sales-channel-modal-detail__header-name">\n            {{ detailType.translated.name }}\n        </h4>\n        <div class="sw-sales-channel-modal-detail__header-manufacturer">\n            {{ $tc(\'swag-paypal-pos.general.salesChannelDetailDescription.manufacturer\') }}\n        </div>\n    </div>\n\n    <template v-else>\n        {% parent %}\n    </template>\n{% endblock %}\n\n{% block sw_sales_channel_modal_detail_description %}\n    <template v-if="isPayPalPosSalesChannel(detailType.id)">\n        <h4 class="sw-sales-channel-modal-detail__description-long-title">\n            {{ $tc(\'swag-paypal-pos.general.salesChannelDetailDescription.title\') }}\n        </h4>\n        <div v-if="detailType.translated.descriptionLong"\n             class="sw-sales-channel-modal-detail__description-long-text">\n            {{ detailType.translated.descriptionLong }}\n        </div>\n        <div v-else\n             class="sw-sales-channel-modal-detail__description-long-text">\n            {{ detailType.translated.description }}\n        </div>\n    </template>\n\n    <template v-else>\n        {% parent %}\n    </template>\n{% endblock %}\n'},GiWa:function(e,n){e.exports='{% block swag_paypal_payment_actions %}\n    <div>\n        <div class="swag-paypal-payment-actions__button-container">\n            <div class="swag-paypal-payment-actions__authorize-button-group">\n\n                {% block swag_paypal_payment_actions_void %}\n                    <sw-button v-if="showVoidButton"\n                               size="small"\n                               :disabled="!acl.can(\'order.editor\')"\n                               @click="spawnModal(\'void\')">\n                        {{ $tc(\'swag-paypal-payment.buttons.label.void\') }}\n                    </sw-button>\n                {% endblock %}\n\n                {% block swag_paypal_payment_actions_capture %}\n                    <sw-button v-if="captureableAmount > 0"\n                               size="small"\n                               :disabled="!acl.can(\'order.editor\')"\n                               @click="spawnModal(\'capture\')">\n                        {{ $tc(\'swag-paypal-payment.buttons.label.capture\') }}\n                    </sw-button>\n                {% endblock %}\n            </div>\n\n            {% block swag_paypal_payment_actions_refund %}\n                <sw-button variant="primary"\n                           size="small"\n                           :disabled="refundableAmount <= 0 || !acl.can(\'order.editor\')"\n                           @click="spawnModal(\'refund\')">\n                    {{ $tc(\'swag-paypal-payment.buttons.label.refund\') }}\n                </sw-button>\n            {% endblock %}\n\n        </div>\n\n        {% block swag_paypal_payment_actions_modal %}\n                {% block swag_paypal_payment_actions_modal_capture %}\n                    <swag-paypal-payment-action-capture v-if="modalType === \'capture\'"\n                                                        :orderId="orderId"\n                                                        :paymentResource="paymentResource"\n                                                        :maxCaptureValue="captureableAmount"\n                                                        @modal-close="closeModal">\n                    </swag-paypal-payment-action-capture>\n                {% endblock %}\n\n                {% block swag_paypal_payment_actions_modal_refund %}\n                    <swag-paypal-payment-action-refund v-if="modalType === \'refund\'"\n                                                       :orderId="orderId"\n                                                       :paymentResource="paymentResource"\n                                                       @modal-close="closeModal">\n                    </swag-paypal-payment-action-refund>\n                {% endblock %}\n\n                {% block swag_paypal_payment_actions_modal_void %}\n                    <swag-paypal-payment-action-void v-if="modalType === \'void\'"\n                                                     :orderId="orderId"\n                                                     :paymentResource="paymentResource"\n                                                     @modal-close="closeModal">\n                    </swag-paypal-payment-action-void>\n                {% endblock %}\n        {% endblock %}\n    </div>\n{% endblock %}\n'},IAVK:function(e,n,t){},IfGv:function(e,n,t){},"J+UQ":function(e,n,t){},Jc0m:function(e,n){e.exports='{% block swag_paypal_pos_detail_overview %}\n    <div class="sw-sales-channel-detail-overview">\n\n        {% block swag_paypal_pos_detail_overview_status %}\n            <swag-paypal-pos-status-view\n                    v-if="salesChannel.active"\n                    :isLoading="isLoading"\n                    :isSyncing="isSyncing"\n                    :lastCompleteRun="lastCompleteRun"\n                    :lastFinishedRun="lastRun"\n                    :salesChannel="salesChannel"\n                    :syncErrors="syncErrors">\n\n                {% block swag_paypal_pos_detail_overview_status_actions %}\n                    <template #actions>\n                        <sw-button-group v-if="salesChannel && salesChannel.active && !isSyncing">\n\n                            {% block swag_paypal_pos_detail_overview_status_actions_sync_button %}\n                                <sw-button class="swag-paypal-pos-detail-overview__sync-button"\n                                           variant="primary"\n                                           @click="onStartSync">\n                                    {{ $tc(\'swag-paypal-pos.detail.overview.buttonSync\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu %}\n                                <sw-context-button>\n\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_button %}\n                                        <template #button>\n                                            <sw-button class="swag-paypal-pos-detail-overview__sync-button-context"\n                                                       variant="primary"\n                                                       square\n                                                       :disabled="isSyncing">\n                                                <sw-icon name="small-arrow-medium-down" size="16"></sw-icon>\n                                            </sw-button>\n                                        </template>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_item_products %}\n                                        <sw-context-menu-item @click="onStartProductSync">\n                                            {{ $tc(\'swag-paypal-pos.detail.overview.buttonSyncProducts\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_item_image %}\n                                        <sw-context-menu-item @click="onStartImageSync">\n                                            {{ $tc(\'swag-paypal-pos.detail.overview.buttonSyncImages\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_item_inventory %}\n                                        <sw-context-menu-item @click="onStartInventorySync">\n                                            {{ $tc(\'swag-paypal-pos.detail.overview.buttonSyncInventory\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n                                </sw-context-button>\n                            {% endblock %}\n                        </sw-button-group>\n\n                        {% block swag_paypal_pos_detail_overview_status_actions_sync_abort_button %}\n                            <sw-button v-if="isSyncing"\n                                       @click="onSyncAbort">\n                                {{ $tc(\'swag-paypal-pos.detail.overview.buttonSyncAbort\') }}\n                            </sw-button>\n                        {% endblock %}\n                    </template>\n                {% endblock %}\n            </swag-paypal-pos-status-view>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_overview_setup %}\n            <swag-paypal-pos-continue-setup v-else>\n            </swag-paypal-pos-continue-setup>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_overview_getting_started %}\n            <swag-paypal-pos-getting-started>\n            </swag-paypal-pos-getting-started>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},"Jr/O":function(e,n){e.exports='{% block sw_order_detail_content_tabs_general %}\n    {% parent %}\n\n    <sw-tabs-item v-if="isPayPalPayment"\n                  :route="{ name: \'swag.paypal.payment.detail\', params: { id: $route.params.id } }"\n                  :title="$tc(\'swag-paypal.header\')">\n        {{ $tc(\'swag-paypal.header\') }}\n    </sw-tabs-item>\n{% endblock %}\n\n\n{% block sw_order_detail_actions_slot_smart_bar_actions %}\n    <template v-if="isEditable">\n        {% parent %}\n    </template>\n{% endblock %}\n'},KuGH:function(e,n){e.exports='{% block swag_paypal_settings_icon %}\n    <sw-icon name="paypal-multicolor" multicolor></sw-icon>\n{% endblock %}\n'},Lgxv:function(e,n){Shopware.Mixin.register("swag-paypal-pos-log-label",{methods:{getLabelVariant:function(e){return e>=400?"danger":e>=300?"warning":e>200?"info":"success"},getLabel:function(e){return e>=300?"swag-paypal-pos.detail.logs.states.failed":"swag-paypal-pos.detail.logs.states.success"}}})},Mge0:function(e,n){e.exports='{% block swag_paypal_payment_detail %}\n    <div class="swag-paypal-payment-detail">\n\n        {% block swag_paypal_payment_detail_components %}\n            <component v-if="!isLoading && showPayPalPayment"\n                       :is="\'swag-paypal-payment-details-v1\'"\n                       :paymentResource="paymentResource"\n                       :orderId="order.id">\n            </component>\n\n            <component v-if="!isLoading && showPayPalOrder"\n                       :is="\'swag-paypal-payment-details-v2\'"\n                       :paypalOrder="paypalOrder"\n                       :orderTransactionId="orderTransaction.id"\n                       :paypalPartnerAttributionId="orderTransaction.customFields.swag_paypal_partner_attribution_id">\n            </component>\n        {% endblock %}\n\n        {% block swag_paypal_payment_detail_error_page %}\n            {% block swag_paypal_payment_detail_error_page_canceled %}\n                <div v-if="showCanceledPaymentError">\n                    <sw-empty-state\n                            :title="$tc(\'swag-paypal-payment.errorPage.title\')"\n                            :subline="$tc(\'swag-paypal-payment.errorPage.canceledPaymentContent\')"\n                            icon="default-shopping-paper-bag"\n                            color="#A092F0">\n                    </sw-empty-state>\n                </div>\n            {% endblock %}\n\n            {% block swag_paypal_payment_detail_error_page_sandbox_live %}\n                <div v-if="showSandboxLiveError">\n                    <sw-empty-state\n                            :title="$tc(\'swag-paypal-payment.errorPage.title\')"\n                            :subline="$tc(\'swag-paypal-payment.errorPage.sandboxLiveContent\')"\n                            icon="default-shopping-paper-bag"\n                            color="#A092F0">\n                    </sw-empty-state>\n                </div>\n            {% endblock %}\n\n            {% block swag_paypal_payment_detail_error_page_other %}\n                <div v-if="showGeneralError">\n                    <sw-empty-state\n                            :title="$tc(\'swag-paypal-payment.errorPage.title\')"\n                            :subline="$tc(\'swag-paypal-payment.errorPage.other\')"\n                            icon="default-shopping-paper-bag"\n                            color="#A092F0">\n                    </sw-empty-state>\n                </div>\n            {% endblock %}\n        {% endblock %}\n\n        <sw-loader v-if="isLoading"></sw-loader>\n    </div>\n{% endblock %}\n'},"O/Fb":function(e,n){e.exports='{% block sw_first_run_wizard_modal %}\n    <div class="swag-paypal-pos-wizard">\n        <sw-modal v-if="showModal"\n                  class="swag-paypal-pos-wizard-modal"\n                  :title="title"\n                  :variant="variant"\n                  @modal-close="onCloseModal">\n\n            {% block swag_paypal_pos_wizard_modal_content %}\n                <div class="swag-paypal-pos-wizard__modal-content">\n                    <sw-container class="swag-paypal-pos-wizard__columns"\n                                  :class="{ \'swag-paypal-pos-wizard__columns--two\': showSteps }">\n\n                        {% block swag_paypal_pos_wizard_modal_content_steps %}\n                            <div v-if="showSteps"\n                                 class="swag-paypal-pos-wizard__steps">\n                                <sw-step-display :initialItemVariants="stepInitialItemVariants"\n                                                 :itemIndex="stepIndex"\n                                                 :itemVariant="stepVariant">\n                                    <sw-step-item v-for="pageName in displayStepperPages" :key="pageName">\n                                        {{ $tc(`swag-paypal-pos.wizard.stepItemTitle.${pageName}`) }}\n                                    </sw-step-item>\n                                </sw-step-display>\n                            </div>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_wizard_modal_content_page %}\n                            <div class="swag-paypal-pos-wizard__page">\n                                <router-view :salesChannel="salesChannel"\n                                             :cloneSalesChannelId="cloneSalesChannelId"\n                                             :saveSalesChannel="save"\n                                             :isLoading="isLoading"\n                                             @buttons-update="updateButtons"\n                                             @frw-set-title="setTitle"\n                                             @frw-finish="onFinishWizard"\n                                             @toggle-loading="toggleLoading"\n                                             @recreate-sales-channel="createNewSalesChannel"\n                                             @update-clone-sales-channel="updateCloneSalesChannel">\n                                </router-view>\n                            </div>\n                        {% endblock %}\n                    </sw-container>\n                </div>\n            {% endblock %}\n\n            {% block swag_paypal_pos_wizard_modal_footer %}\n                <template #modal-footer>\n                    <div class="swag-paypal-pos-wizard__footer">\n\n                        {% block swag_paypal_pos_wizard_modal_footer_left %}\n                            <div class="footer-left">\n                                <sw-button v-for="button in buttons.left"\n                                           size="small"\n                                           :key="button.key"\n                                           :disabled="button.disabled"\n                                           :isLoading="isLoading"\n                                           :variant="button.variant"\n                                           @click="onButtonClick(button.action)">\n                                    {{ button.label }}\n                                </sw-button>\n                            </div>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_wizard_modal_footer_right %}\n                            <div class="footer-right">\n                                <sw-button v-for="button in buttons.right"\n                                           size="small"\n                                           :key="button.key"\n                                           :disabled="button.disabled"\n                                           :isLoading="isLoading"\n                                           :variant="button.variant"\n                                           @click="onButtonClick(button.action)">\n                                    {{ button.label }}\n                                </sw-button>\n                            </div>\n                        {% endblock %}\n                    </div>\n                </template>\n            {% endblock %}\n        </sw-modal>\n    </div>\n{% endblock %}\n\n'},Oa8f:function(e,n){e.exports='{% block swag_paypal_disputes_detail %}\n    <sw-page class="swag-paypal-disputes-detail">\n\n        {% block swag_paypal_disputes_detail_smart_bar_header %}\n            <template #smart-bar-header>\n\n                {% block swag_paypal_disputes_detail_smart_bar_header_title %}\n                    <h2>\n\n                        {% block swag_paypal_disputes_detail_smart_bar_header_title %}\n                            {{ $tc(\'swag-paypal-disputes.detail.title\') }}\n                        {% endblock %}\n\n                        {% block swag_paypal_disputes_detail_smart_bar_header_dispute_id %}\n                            {{ disputeId }}\n                        {% endblock %}\n\n                        {% block swag_paypal_disputes_detail_smart_bar_header_title_addition %}\n                            {{ $tc(\'swag-paypal-disputes.detail.titleAddition\') }}\n                        {% endblock %}\n\n                    </h2>\n                {% endblock %}\n\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_disputes_detail_content %}\n            <template #content>\n                <sw-card-view>\n\n                    {% block swag_paypal_disputes_detail_content_details %}\n                        <sw-card :isLoading="isLoading"\n                                 :title="$tc(\'swag-paypal-disputes.detail.mainFieldsCardTitle\')">\n\n                            {% block swag_paypal_disputes_detail_content_details_fields %}\n                                <template v-if="dispute">\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_external_link %}\n                                        <div class="swag-paypal-disputes-detail__links">\n                                            <sw-external-link :href="getExternalDetailPageLink()">\n                                                {{ $tc(\'swag-paypal-disputes.detail.externalLinkText\') }}\n                                            </sw-external-link>\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_order_module_link %}\n                                        <div class="swag-paypal-disputes-detail__links">\n                                            <router-link v-if="orderModuleLink"\n                                                         :to="orderModuleLink"\n                                                         target="_blank"\n                                                         rel="noopener">\n                                                {{ $tc(\'swag-paypal-disputes.detail.orderModuleLinkText\') }}\n                                                <sw-icon name="default-action-external" size="12px"></sw-icon>\n                                            </router-link>\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_separator %}\n                                        <hr class="swag-paypal-disputes-detail__separator"/>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_id %}\n                                        <sw-text-field :value="dispute.dispute_id"\n                                                       :label="$tc(\'swag-paypal-disputes.common.dispute_id\')"\n                                                       disabled>\n                                        </sw-text-field>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_update_time %}\n                                        <sw-text-field :value="formatDate(dispute.update_time)"\n                                                       :label="$tc(\'swag-paypal-disputes.common.update_time\')"\n                                                       disabled>\n                                        </sw-text-field>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_due_date %}\n                                        <sw-text-field v-if="dispute.seller_response_due_date || dispute.buyer_response_due_date"\n                                                       :value="getDueDate(dispute.seller_response_due_date, dispute.buyer_response_due_date)"\n                                                       :label="$tc(\'swag-paypal-disputes.common.response_due_date.label\')"\n                                                       disabled>\n                                        </sw-text-field>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_status %}\n                                        <sw-text-field :value="`${formatTechnicalText(dispute.status)} (${formatTechnicalText(dispute.reason)})`"\n                                                       :label="$tc(\'swag-paypal-disputes.common.status\')"\n                                                       disabled>\n                                        </sw-text-field>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_dispute_life_cycle_stage %}\n                                        <sw-text-field :value="formatTechnicalText(dispute.dispute_life_cycle_stage)"\n                                                       :label="$tc(\'swag-paypal-disputes.common.dispute_life_cycle_stage\')"\n                                                       :class="getInquiryClass(dispute.dispute_life_cycle_stage)"\n                                                       disabled>\n                                        </sw-text-field>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_dispute_amount %}\n                                        <sw-text-field :value="`${dispute.dispute_amount.value} ${dispute.dispute_amount.currency_code}`"\n                                                       :label="$tc(\'swag-paypal-disputes.common.dispute_amount\')"\n                                                       disabled>\n                                        </sw-text-field>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                        </sw-card>\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_detail_content_raw_data %}\n                        <sw-card :isLoading="isLoading"\n                                 :title="$tc(\'swag-paypal-disputes.detail.rawDataCardTitle\')">\n\n                            {% block swag_paypal_disputes_detail_content_raw_data_content %}\n                                <template v-if="dispute">\n\n                                    {% block swag_paypal_disputes_detail_content_raw_data_text %}\n                                        <sw-textarea-field :value="JSON.stringify(dispute, null, 2)"\n                                                           disabled>\n                                        </sw-textarea-field>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_raw_data_copy_button %}\n                                        <sw-button @click="copyToClipboard">\n                                            {{ $tc(\'swag-paypal-disputes.detail.copyButtonLabel\') }}\n                                        </sw-button>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                        </sw-card>\n                    {% endblock %}\n\n                </sw-card-view>\n            </template>\n        {% endblock %}\n\n    </sw-page>\n{% endblock %}\n'},Okln:function(e,n){e.exports='{% block swag_paypal_pos_detail_runs %}\n    <div class="swag-paypal-pos-detail-runs">\n\n        {% block swag_paypal_pos_detail_runs_card %}\n            <sw-card :title="$tc(\'swag-paypal-pos.detail.runs.title\')"\n                     :isLoading="isLoading">\n\n                {% block swag_paypal_pos_detail_runs_card_grid %}\n                    <template #grid>\n\n                        <sw-data-grid v-if="total > 0"\n                                      identifier="swag-paypal-pos-detail-runs"\n                                      :columns="columns"\n                                      :dataSource="runs"\n                                      :isLoading="isLoading || total === 0"\n                                      :showActions="true"\n                                      :showSelection="false"\n                                      :showSettings="true"\n                                      :allowColumnEdit="true"\n                                      :sortBy="sortBy"\n                                      :sortDirection="sortDirection"\n                                      :skeletonItemAmount="limit"\n                                      @column-sort="onSortColumn">\n\n                            {% block swag_paypal_pos_detail_runs_card_grid_pagination %}\n                                <template #pagination>\n                                    <sw-pagination :limit="limit"\n                                                   :page="page"\n                                                   :total="total"\n                                                   :total-visible="7"\n                                                   @page-change="onPageChange">\n                                    </sw-pagination>\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_runs_other_grid_column_log %}\n                                <template #column-task="{ item }">\n                                    {{ $tc(`swag-paypal-pos.detail.runs.${item.task}Task`) }}\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_runs_card_grid_column_state %}\n                                <template #column-state="{ item }">\n\n                                    {% block swag_paypal_pos_detail_runs_card_grid_column_state_label %}\n                                        <sw-label appearance="pill"\n                                                  :variant="getLabelVariant(item)">\n                                            {{ $tc(getLabel(item)) }}\n                                        </sw-label>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_runs_card_grid_column_date %}\n                                <template #column-date="{ item }">\n\n                                    {% block swag_paypal_pos_detail_runs_card_grid_column_date_formatted %}\n                                        {{ item.finishedAt | date({\n                                            hour: \'2-digit\',\n                                            minute: \'2-digit\',\n                                            day: \'2-digit\',\n                                            month: \'2-digit\',\n                                            year: \'2-digit\'\n                                        }) }}\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_runs_card_grid_actions %}\n                                <template #actions="{ item }">\n\n                                    {% block swag_paypal_pos_detail_runs_card_grid_actions_details %}\n                                        <sw-context-menu-item :disabled="item.logs.length <= 0"\n                                                              @click="onShowModal(item.id)">\n                                            {{ $tc(\'swag-paypal-pos.detail.runs.actions.showDetails\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                        </sw-data-grid>\n                    </template>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_runs_card_empty_state %}\n                    <template #default>\n                        <sw-empty-state v-if="total < 1"\n                                        class="swag-paypal-pos-detail-runs__empty-state"\n                                        :title="$tc(\'swag-paypal-pos.detail.runs.emptyState.title\')"\n                                        :subline="$tc(\'swag-paypal-pos.detail.runs.emptyState.message\')">\n                        </sw-empty-state>\n                    </template>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_runs_card_toolbar %}\n                    <template #toolbar v-if="total > 0">\n\n                        {% block swag_paypal_pos_detail_runs_card_toolbar_container %}\n                            <sw-container columns="1fr min-content"\n                                          align="center">\n\n                                {% block swag_paypal_pos_detail_runs_card_toolbar_container_text %}\n                                    <p>{{ $tc(\'swag-paypal-pos.detail.runs.toolbarText\') }}</p>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_detail_runs_card_toolbar_container_button %}\n                                    <sw-button\n                                            :disabled="!acl.can(\'sales_channel.editor\')"\n                                            @click="onClearLogs">\n                                        {{ $tc(\'swag-paypal-pos.detail.cleanLog\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                            </sw-container>\n                        {% endblock %}\n\n                    </template>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_runs_log_modal %}\n            <sw-modal v-if="showModal"\n                      class="swag-paypal-pos-detail-runs__modal"\n                      :title="$tc(\'swag-paypal-pos.detail.runs.title\')"\n                      :isLoading="isLoading"\n                      variant="large"\n                      @modal-close="onCloseModal">\n\n                {% block swag_paypal_pos_detail_runs_log_modal_logs %}\n                    <swag-paypal-pos-detail-logs :runId="currentRunId"></swag-paypal-pos-detail-logs>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_runs_log_modal_footer %}\n                    <template #modal-footer>\n\n                        {% block swag_paypal_pos_detail_runs_log_modal_footer_close_modal_button %}\n                            <sw-button variant="primary"\n                                       @click="onCloseModal">\n                                {{ $tc(\'global.default.cancel\') }}\n                            </sw-button>\n                        {% endblock %}\n\n                    </template>\n                {% endblock %}\n\n            </sw-modal>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n'},OpH4:function(e,n){e.exports='{% block swag_paypal_pos_wizard_connection_success %}\n    <div class="swag-paypal-pos-wizard-connection-success">\n\n        {% block swag_paypal_pos_wizard_connection_success_headline_content %}\n            <div class="swag-paypal-pos-wizard-connection-success__content">\n\n                {% block swag_paypal_pos_wizard_connection_success_icon %}\n                    <div class="swag-paypal-pos-wizard-connection-success__icon-wrapper">\n                        <sw-icon class="swag-paypal-pos-wizard-connection-success__icon"\n                                 name="default-action-thumb-up"\n                                 size="80px"\n                                 color="#37D046">\n                        </sw-icon>\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_success_headline %}\n                    <div class="swag-paypal-pos-wizard-connection-success__headline">\n                        {{ $tc(\'swag-paypal-pos.wizard.connectionSuccess.headline\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_success_info %}\n                    <div class="swag-paypal-pos-wizard-connection-success__info">\n                        {{ $tc(\'swag-paypal-pos.wizard.connectionSuccess.info\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_success_user %}\n                    <sw-card class="swag-paypal-pos-wizard-connection-success__user"\n                             :isLoading="isFetchingInformation">\n                        <sw-container class="swag-paypal-pos-wizard-connection-success__user-container"\n                                      columns="30px auto 150px"\n                                      align="center"\n                                      gap="30px">\n\n                            {% block swag_paypal_pos_wizard_connection_success_user_avatar %}\n                                <sw-avatar\n                                        class="swag-paypal-pos-wizard-connection-success__user-avatar"\n                                        size="40px"\n                                        :firstName="posUser.firstName"\n                                        :lastName="posUser.lastName">\n                                </sw-avatar>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_wizard_connection_success_user_information %}\n                                <div class="swag-paypal-pos-wizard-connection-success__user-info">\n\n                                    {% block swag_paypal_pos_wizard_connection_success_user_information_real %}\n                                        <div class="swag-paypal-pos-wizard-connection-success__user-info-name">\n                                            {{ posUser.fullName }}\n                                        </div>\n                                        <div class="swag-paypal-pos-wizard-connection-success__user-info-mail">\n                                            {{ posUser.mail }}\n                                        </div>\n                                    {% endblock %}\n                                </div>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_wizard_connection_success_user_disconnect_button %}\n                                <sw-button class="swag-paypal-pos-wizard-connection-success__user-disconnect"\n                                           variant="ghost"\n                                           size="small"\n                                           @click="onDisconnect">\n                                    {{ $tc(\'swag-paypal-pos.wizard.connectionSuccess.disconnectButton\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </sw-container>\n                    </sw-card>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_connection_success_disclaimer %}\n            <div class="swag-paypal-pos-wizard-connection-success__disclaimer">\n                {{ $tc(\'swag-paypal-pos.wizard.connectionSuccess.disclaimer\') }}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},OyZE:function(e,n,t){},PY1D:function(e,n){e.exports='{% block swag_paypal_payment_details_v1 %}\n    <div class="swag-paypal-payment-details_v1">\n        <sw-card :title="$tc(\'swag-paypal-payment.paymentDetails.cardTitle\')">\n            <template #grid>\n\n                {% block swag_paypal_payment_actions_section %}\n                    <sw-card-section secondary\n                                     slim>\n                        <swag-paypal-payment-actions :orderId="orderId" :paymentResource="paymentResource">\n                        </swag-paypal-payment-actions>\n                    </sw-card-section>\n                {% endblock %}\n\n                <sw-card-section divider="top">\n                    <sw-container columns="1fr"\n                                  gap="0px 30px">\n\n                        {% block swag_paypal_payment_detail_invoice %}\n                            {% block swag_paypal_payment_detail_invoice_heading %}\n                                <h3>\n                                    {{ $tc(\'swag-paypal-payment.paymentDetails.invoice.heading\') }}\n                                </h3>\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_invoice_list %}\n                                <sw-description-list class="swag-paypal-payment-detail__data">\n                                    <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.totalAmount\') }}</dt>\n                                    <dd>{{ amount.total }} {{ currency }}</dd>\n\n                                    <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.subTotal\') }}</dt>\n                                    <dd> {{ amount.details.subtotal }} {{ currency }}</dd>\n\n                                    <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.shipping\') }}</dt>\n                                    <dd> {{ amount.details.shipping }} {{ currency }}</dd>\n                                </sw-description-list>\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_payment %}\n                                {% block swag_paypal_payment_detail_payment_heading %}\n                                    <h3 class="swag-paypal-payment-detail__heading">\n                                        {{ $tc(\'swag-paypal-payment.paymentDetails.payment.heading\') }}\n                                    </h3>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_payment_list %}\n                                    <sw-description-list class="swag-paypal-payment-detail__data">\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.intent\') }}</dt>\n                                        <dd>{{ $tc(`swag-paypal.settingForm.behavior.intent.${paymentResource.intent}`) }}</dd>\n\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.paymentId\') }}</dt>\n                                        <dd>{{ paymentResource.id }}</dd>\n\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.cartId\') }}</dt>\n                                        <dd>{{ paymentResource.cart }}</dd>\n\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.state\') }}</dt>\n                                        <dd>{{ paymentResource.state }}</dd>\n\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.createTime\') }}</dt>\n                                        <dd>{{ createDateTime }}</dd>\n\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.updateTime\') }}</dt>\n                                        <dd>{{ updateDateTime }}</dd>\n                                    </sw-description-list>\n                                {% endblock %}\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_customer %}\n                                {% block swag_paypal_payment_detail_customer_heading %}\n                                    <h3 class="swag-paypal-payment-detail__heading">\n                                        {{ $tc(\'swag-paypal-payment.paymentDetails.customer.heading\') }}\n                                    </h3>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_customer_list %}\n                                    <sw-description-list class="swag-paypal-payment-detail__data">\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.customer.payerId\') }}</dt>\n                                        <dd>{{ payerId }}</dd>\n                                    </sw-description-list>\n                                {% endblock %}\n                            {% endblock %}\n                        {% endblock %}\n\n                    </sw-container>\n                </sw-card-section>\n            </template>\n        </sw-card>\n\n        {% block swag_paypal_payment_transaction_history_card %}\n            <sw-card :title="$tc(\'swag-paypal-payment.transactionHistory.cardTitle\')">\n                <template #grid>\n\n                    {% block swag_paypal_payment_transaction_history_grid %}\n                        <sw-data-grid :dataSource="relatedResources"\n                                      :columns="relatedResourceColumns"\n                                      :showActions="false"\n                                      :showSelection="false">\n                        </sw-data-grid>\n                    {% endblock %}\n\n                </template>\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n'},Q7T4:function(e,n){e.exports='{% block swag_paypal_payment_details_v2 %}\n    <div class="swag-paypal-payment-details_v2">\n        <sw-card :title="$tc(\'swag-paypal-payment.paymentDetails.cardTitle\')">\n            <template #grid>\n\n                {% block swag_paypal_payment_actions_section %}\n                    <sw-card-section secondary slim>\n                        <swag-paypal-payment-actions-v2\n                                :orderTransactionId="orderTransactionId"\n                                :paypalOrder="paypalOrder"\n                                :paypalPartnerAttributionId="paypalPartnerAttributionId"\n                                :refundableAmount="refundableAmount"\n                                :captureableAmount="captureableAmount"\n                                :showVoidButton="showVoidButton">\n                        </swag-paypal-payment-actions-v2>\n                    </sw-card-section>\n                {% endblock %}\n\n                <sw-card-section divider="top">\n                    <sw-container columns="1fr" gap="0px 30px">\n\n                        {% block swag_paypal_payment_detail_invoice %}\n                            {% block swag_paypal_payment_detail_invoice_heading %}\n                                <h3>\n                                    {{ $tc(\'swag-paypal-payment.paymentDetails.invoice.heading\') }}\n                                </h3>\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_invoice_list %}\n                                <sw-description-list class="swag-paypal-payment-detail__data">\n\n                                    {% block swag_paypal_payment_detail_invoice_list_total %}\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.totalAmount\') }}</dt>\n                                        <dd>{{ amount.value }} {{ currency }}</dd>\n                                    {% endblock %}\n\n                                    <template v-if="amount.breakdown">\n                                        {% block swag_paypal_payment_detail_invoice_list_sub_total %}\n                                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.subTotal\') }}</dt>\n                                            <dd> {{ amount.breakdown.item_total.value }} {{ currency }}</dd>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_invoice_list_discount %}\n                                            <div v-if="amount.breakdown.discount">\n                                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.discount\') }}</dt>\n                                                <dd> {{ amount.breakdown.discount.value }} {{ currency }}</dd>\n                                            </div>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_invoice_list_handling %}\n                                            <div v-if="amount.breakdown.handling">\n                                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.handling\') }}</dt>\n                                                <dd> {{ amount.breakdown.handling.value }} {{ currency }}</dd>\n                                            </div>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_invoice_list_insurance %}\n                                            <div v-if="amount.breakdown.insurance">\n                                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.insurance\') }}</dt>\n                                                <dd> {{ amount.breakdown.insurance.value }} {{ currency }}</dd>\n                                            </div>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_invoice_list_shipping %}\n                                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.shipping\') }}</dt>\n                                            <dd> {{ amount.breakdown.shipping.value }} {{ currency }}</dd>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_invoice_list_shipping_discount %}\n                                            <div v-if="amount.breakdown.insurance">\n                                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.shipping_discount\') }}</dt>\n                                                <dd> {{ amount.breakdown.shipping_discount.value }} {{ currency }}</dd>\n                                            </div>\n                                        {% endblock %}\n                                    </template>\n\n                                </sw-description-list>\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_payment %}\n                                {% block swag_paypal_payment_detail_payment_heading %}\n                                    <h3 class="swag-paypal-payment-detail__heading">\n                                        {{ $tc(\'swag-paypal-payment.paymentDetails.payment.heading\') }}\n                                    </h3>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_payment_list %}\n                                    <sw-description-list class="swag-paypal-payment-detail__data">\n                                        {% block swag_paypal_payment_detail_payment_list_intent %}\n                                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.intent\') }}</dt>\n                                            <dd>{{ $tc(`swag-paypal.settingForm.behavior.intent.${paypalOrder.intent}`) }}</dd>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_payment_list_id %}\n                                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.paymentId\') }}</dt>\n                                            <dd>{{ paypalOrder.id }}</dd>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_payment_list_status %}\n                                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.state\') }}</dt>\n                                            <dd>{{ paypalOrder.status }}</dd>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_payment_list_create_time %}\n                                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.createTime\') }}</dt>\n                                            <dd>{{ createDateTime }}</dd>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_payment_list_update_time %}\n                                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.updateTime\') }}</dt>\n                                            <dd>{{ updateDateTime }}</dd>\n                                        {% endblock %}\n\n                                    </sw-description-list>\n                                {% endblock %}\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_customer %}\n                                {% block swag_paypal_payment_detail_customer_heading %}\n                                    <h3 class="swag-paypal-payment-detail__heading">\n                                        {{ $tc(\'swag-paypal-payment.paymentDetails.customer.heading\') }}\n                                    </h3>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_customer_list %}\n                                    <sw-description-list class="swag-paypal-payment-detail__data">\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.customer.payerId\') }}</dt>\n                                        <dd>{{ payerId }}</dd>\n                                    </sw-description-list>\n                                {% endblock %}\n                            {% endblock %}\n                        {% endblock %}\n\n                    </sw-container>\n                </sw-card-section>\n            </template>\n        </sw-card>\n\n        {% block swag_paypal_payment_transaction_history_card %}\n            <sw-card :title="$tc(\'swag-paypal-payment.transactionHistory.cardTitle\')">\n                <template #grid>\n\n                    {% block swag_paypal_payment_transaction_history_grid %}\n                        <sw-data-grid :dataSource="payments"\n                                      :columns="paymentColumns"\n                                      :showActions="false"\n                                      :showSelection="false">\n                        </sw-data-grid>\n                    {% endblock %}\n                </template>\n            </sw-card>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},QZV2:function(e,n){e.exports='{% block swag_paypal_pos_status %}\n    <sw-card :class="statusClasses"\n             :isLoading="isLoading"\n             :title="title">\n\n        {% block swag_paypal_pos_status_icon %}\n            <div class="swag-paypal-pos-status__icon-base">\n                <sw-icon :class="iconClasses"\n                         :name="icon">\n                </sw-icon>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_status %}\n            <div class="swag-paypal-pos-status__status">\n                <slot name="status">{{ status }}</slot>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_detail %}\n            <div class="swag-paypal-pos-status__detail">\n                <slot name="detail"></slot>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_substatus %}\n            <div v-if="showSubStatus" class="swag-paypal-pos-status__substatus">\n\n                {% block swag_paypal_pos_status_substatus_icon %}\n                    <sw-icon v-if="showSubIcon"\n                             :class="subIconClasses"\n                             :name="subIcon">\n                    </sw-icon>\n                {% endblock %}\n\n                {% block swag_paypal_pos_status_substatus_content %}\n                    <span>\n                        <slot name="substatus"></slot>\n                    </span>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_actions %}\n            <div class="swag-paypal-pos-status__actions">\n                <slot name="actions"></slot>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_disabled %}\n            <div v-if="disabled" class="swag-paypal-pos-status__disabled">\n                <slot name="disabledText">{{ disabledText }}</slot>\n            </div>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n'},R7U6:function(e,n,t){"use strict";t.r(n);t("VVuM"),t("lA1j"),t("Lgxv");var a=t("EGIw"),s=t.n(a);t("9OLG");function i(e){return function(e){if(Array.isArray(e))return o(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,n){if(!e)return;if("string"==typeof e)return o(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return o(e,n)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=new Array(n);t<n;t++)a[t]=e[t];return a}Shopware.Component.override("sw-first-run-wizard-paypal-credentials",{template:s.a,inject:["systemConfigApiService","SwagPaypalPaymentMethodService"],mixins:["notification","swag-paypal-credentials-loader"],data:function(){return{config:{},isLoading:!1,setDefault:!1}},computed:{sandboxMode:function(){return this.config["SwagPayPal.settings.sandbox"]||!1},onboardingUrl:function(){return this.sandboxMode?this.onboardingUrlSandbox:this.onboardingUrlLive},onboardingCallback:function(){return this.sandboxMode?"onboardingCallbackSandbox":"onboardingCallbackLive"},buttonConfig:function(){var e=this;return this.$super("buttonConfig").reduce((function(n,t){return"next"===t.key&&(t.action=e.onClickNext.bind(e)),[].concat(i(n),[t])}),[])},credentialsProvided:function(){return!this.sandboxMode&&this.credentialsProvidedLive||this.sandboxMode&&this.credentialsProvidedSandbox},credentialsProvidedLive:function(){return!!this.config["SwagPayPal.settings.clientId"]&&!!this.config["SwagPayPal.settings.clientSecret"]},credentialsProvidedSandbox:function(){return!!this.config["SwagPayPal.settings.clientIdSandbox"]&&!!this.config["SwagPayPal.settings.clientSecretSandbox"]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.$super("createdComponent"),this.fetchPayPalConfig()},onPayPalCredentialsLoadSuccess:function(e,n,t){this.setConfig(e,n,t)},onPayPalCredentialsLoadFailed:function(e){this.setConfig("","",e),this.createNotificationError({message:this.$tc("swag-paypal-frw-credentials.messageFetchedError"),duration:1e4})},setConfig:function(e,n,t){t?(this.$set(this.config,"SwagPayPal.settings.clientIdSandbox",e),this.$set(this.config,"SwagPayPal.settings.clientSecretSandbox",n)):(this.$set(this.config,"SwagPayPal.settings.clientId",e),this.$set(this.config,"SwagPayPal.settings.clientSecret",n))},onClickNext:function(){var e=this;return this.credentialsProvided?this.isGetCredentialsSuccessful?this.saveConfig().then((function(){return e.$emit("frw-redirect","sw.first.run.wizard.index.plugins"),Promise.resolve(!1)})).catch((function(){return Promise.resolve(!0)})):this.testApiCredentials().then((function(){return e.saveConfig()})).then((function(){return e.$emit("frw-redirect","sw.first.run.wizard.index.plugins"),Promise.resolve(!1)})).catch((function(){return Promise.resolve(!0)})):(this.createNotificationError({message:this.$tc("swag-paypal-frw-credentials.messageNoCredentials")}),Promise.resolve(!0))},fetchPayPalConfig:function(){var e=this;return this.isLoading=!0,this.systemConfigApiService.getValues("SwagPayPal.settings",null).then((function(n){e.config=n})).finally((function(){e.isLoading=!1}))},saveConfig:function(){var e=this;return this.isLoading=!0,this.systemConfigApiService.saveValues(this.config,null).then((function(){return e.setDefault?e.SwagPaypalPaymentMethodService.setDefaultPaymentForSalesChannel():Promise.resolve()})).then((function(){e.isLoading=!1}))},testApiCredentials:function(){var e=this;this.isLoading=!0;var n=this.config["SwagPayPal.settings.sandbox"],t=n?"Sandbox":"",a=this.config["SwagPayPal.settings.clientId".concat(t)],s=this.config["SwagPayPal.settings.clientSecret".concat(t)];return this.SwagPayPalApiCredentialsService.validateApiCredentials(a,s,n).then((function(n){return n.credentialsValid?(e.isLoading=!1,Promise.resolve()):Promise.reject()})).catch((function(n){if(n.response.data&&n.response.data.errors){var t=n.response.data.errors.map((function(e){return e.detail})).join(" / ");e.createNotificationError({message:t}),e.isLoading=!1}return Promise.reject()}))},onCredentialsChanged:function(){this.isGetCredentialsSuccessful=null}}});var l=t("G/Pn"),r=t.n(l),c=(t("wqkP"),"1ce0868f406d47d98cfe4b281e62f099"),p="paypalPosSalesChannel";Shopware.Component.override("sw-sales-channel-modal-detail",{template:r.a,methods:{isPayPalPosSalesChannel:function(e){return e===c}}});var d=t("+Mrb"),u=t.n(d);t("D+dM");Shopware.Component.override("sw-sales-channel-modal-grid",{template:u.a,methods:{isPayPalPosSalesChannel:function(e){return this.salesChannelTypes.find((function(n){return n.id===e})).id===c}}});t("gwRT");var g=t("7f4H"),h=t.n(g),y=(t("hYJc"),{MERCHANT_LOCATION_GERMANY:"germany",MERCHANT_LOCATION_OTHER:"other"});function _(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function w(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var m=Shopware,f=m.Component,b=m.Defaults,v=Shopware.Data.Criteria,S=Shopware.Utils.object.hasOwnProperty;f.register("swag-paypal",{template:h.a,inject:["SwagPayPalApiCredentialsService","SwagPaypalPaymentMethodService","repositoryFactory","acl"],mixins:["notification"],data:function(){return function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?_(Object(t),!0).forEach((function(n){w(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):_(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}({isLoading:!1,isSaveSuccessful:!1,isTestSuccessful:!1,isTestSandboxSuccessful:!1,clientIdFilled:!1,clientSecretFilled:!1,clientIdSandboxFilled:!1,clientSecretSandboxFilled:!1,sandboxChecked:!1,salesChannels:[],config:null,isSetDefaultPaymentSuccessful:!1,isSettingDefaultPaymentMethods:!1,savingDisabled:!1,messageBlankErrorState:null},y)},metaInfo:function(){return{title:this.$createTitle()}},computed:{showSPBCard:function(){return S(this.config,"SwagPayPal.settings.merchantLocation")&&null!==this.config["SwagPayPal.settings.merchantLocation"]?this.config["SwagPayPal.settings.merchantLocation"]===this.MERCHANT_LOCATION_OTHER:this.$refs.configComponent.allConfigs.null["SwagPayPal.settings.merchantLocation"]===this.MERCHANT_LOCATION_OTHER},showPlusCard:function(){return S(this.config,"SwagPayPal.settings.merchantLocation")&&null!==this.config["SwagPayPal.settings.merchantLocation"]?this.config["SwagPayPal.settings.merchantLocation"]===this.MERCHANT_LOCATION_GERMANY:this.$refs.configComponent.allConfigs.null["SwagPayPal.settings.merchantLocation"]===this.MERCHANT_LOCATION_GERMANY},salesChannelRepository:function(){return this.repositoryFactory.create("sales_channel")},clientIdErrorState:function(){return this.sandboxChecked||this.clientIdFilled?null:this.messageBlankErrorState},clientSecretErrorState:function(){return this.sandboxChecked||this.clientSecretFilled?null:this.messageBlankErrorState},clientIdSandboxErrorState:function(){return!this.sandboxChecked||this.clientIdSandboxFilled?null:this.messageBlankErrorState},clientSecretSandboxErrorState:function(){return!this.sandboxChecked||this.clientSecretSandboxFilled?null:this.messageBlankErrorState},hasError:function(){return!this.sandboxChecked&&!(this.clientIdFilled&&this.clientSecretFilled)||this.sandboxChecked&&!(this.clientIdSandboxFilled&&this.clientSecretSandboxFilled)}},watch:{config:{handler:function(){var e=this.$refs.configComponent.allConfigs.null;null===this.$refs.configComponent.selectedSalesChannelId?(this.clientIdFilled=!!this.config["SwagPayPal.settings.clientId"],this.clientSecretFilled=!!this.config["SwagPayPal.settings.clientSecret"],this.clientIdSandboxFilled=!!this.config["SwagPayPal.settings.clientIdSandbox"],this.clientSecretSandboxFilled=!!this.config["SwagPayPal.settings.clientSecretSandbox"],this.sandboxChecked=!!this.config["SwagPayPal.settings.sandbox"]):(this.clientIdFilled=!!this.config["SwagPayPal.settings.clientId"]||!!e["SwagPayPal.settings.clientId"],this.clientSecretFilled=!!this.config["SwagPayPal.settings.clientSecret"]||!!e["SwagPayPal.settings.clientSecret"],this.clientIdSandboxFilled=!!this.config["SwagPayPal.settings.clientIdSandbox"]||!!e["SwagPayPal.settings.clientIdSandbox"],this.clientSecretSandboxFilled=!!this.config["SwagPayPal.settings.clientSecretSandbox"]||!!e["SwagPayPal.settings.clientSecretSandbox"],this.sandboxChecked=!!this.config["SwagPayPal.settings.sandbox"]||!!e["SwagPayPal.settings.sandbox"])},deep:!0}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this;this.isLoading=!0;var n=new v;n.addFilter(v.equalsAny("typeId",[b.storefrontSalesChannelTypeId,b.apiSalesChannelTypeId])),this.salesChannelRepository.search(n,Shopware.Context.api).then((function(n){n.add({id:null,translated:{name:e.$tc("sw-sales-channel-switch.labelDefaultOption")}}),e.salesChannels=n})).finally((function(){e.isLoading=!1})),this.messageBlankErrorState={code:1,detail:this.$tc("swag-paypal.messageNotBlank")}},onSave:function(){this.hasError||this.save()},save:function(){var e=this;this.isLoading=!0,this.$refs.configComponent.save().then((function(n){if(e.isSaveSuccessful=!0,n.payPalWebhookErrors){var t=e.$tc("swag-paypal.settingForm.messageWebhookError");n.payPalWebhookErrors.forEach((function(n){e.createNotificationError({message:"".concat(t,"<br><br><ul><li>").concat(n,"</li></ul>")})}))}})).finally((function(){e.isLoading=!1}))},onSetPaymentMethodDefault:function(){var e=this;this.isSettingDefaultPaymentMethods=!0,this.SwagPaypalPaymentMethodService.setDefaultPaymentForSalesChannel(this.$refs.configComponent.selectedSalesChannelId).then((function(){e.isSettingDefaultPaymentMethods=!1,e.isSetDefaultPaymentSuccessful=!0}))},preventSave:function(e){this.savingDisabled=!!e}}});t("eCdE");var k=t("vj0j"),C=t.n(k);Shopware.Component.register("swag-paypal-settings-hint",{template:C.a,props:{hintText:{type:String,required:!0}}});var P=t("3e5x"),x=t.n(P);function I(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function $(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}Shopware.Component.register("swag-paypal-behavior",{template:x.a,inject:["acl"],props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},data:function(){return function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?I(Object(t),!0).forEach((function(n){$(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):I(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}({},y)},computed:{intentOptions:function(){return[{id:"CAPTURE",name:this.$tc("swag-paypal.settingForm.behavior.intent.CAPTURE")},{id:"AUTHORIZE",name:this.$tc("swag-paypal.settingForm.behavior.intent.AUTHORIZE")}]},merchantLocationOptions:function(){return[{id:this.MERCHANT_LOCATION_GERMANY,name:this.$tc("swag-paypal.settingForm.behavior.merchantLocation.germany")},{id:this.MERCHANT_LOCATION_OTHER,name:this.$tc("swag-paypal.settingForm.behavior.merchantLocation.other")}]},landingPageOptions:function(){return[{id:"LOGIN",name:this.$tc("swag-paypal.settingForm.behavior.landingPage.options.login")},{id:"BILLING",name:this.$tc("swag-paypal.settingForm.behavior.landingPage.options.billing")},{id:"NO_PREFERENCE",name:this.$tc("swag-paypal.settingForm.behavior.landingPage.options.no_preference")}]},landingPageHint:function(){var e=this.actualConfigData["SwagPayPal.settings.landingPage"]||this.allConfigs.null["SwagPayPal.settings.landingPage"];e=e.toLowerCase();var n="swag-paypal.settingForm.behavior.landingPage.helpText.".concat(e);return this.$tc(n)},loggingLevelOptions:function(){return[{value:300,label:this.$tc("swag-paypal.settingForm.behavior.loggingLevel.options.basic")},{value:100,label:this.$tc("swag-paypal.settingForm.behavior.loggingLevel.options.advanced")}]}},methods:{checkTextFieldInheritance:function(e){return"string"!=typeof e||e.length<=0},checkBoolFieldInheritance:function(e){return"boolean"!=typeof e}}});var L=t("ep0E"),T=t.n(L);Shopware.Component.register("swag-paypal-credentials",{template:T.a,inject:["acl"],mixins:["notification","swag-paypal-credentials-loader"],props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null},clientIdErrorState:{type:Object,required:!1,default:null},clientSecretErrorState:{type:Object,required:!1,default:null},clientIdSandboxErrorState:{type:Object,required:!1,default:null},clientSecretSandboxErrorState:{type:Object,required:!1,default:null},clientIdFilled:{type:Boolean,required:!0},clientSecretFilled:{type:Boolean,required:!0},clientIdSandboxFilled:{type:Boolean,required:!0},clientSecretSandboxFilled:{type:Boolean,required:!0},isLoading:{type:Boolean,required:!0}},data:function(){return{isTestingLive:!1,isTestingSandbox:!1,isTestLiveSuccessful:!1,isTestSandboxSuccessful:!1}},computed:{testLiveButtonDisabled:function(){return this.isLoading||!this.clientSecretFilled||!this.clientIdFilled||this.isTestingLive},testSandboxButtonDisabled:function(){return this.isLoading||!this.clientSecretSandboxFilled||!this.clientIdSandboxFilled||this.isTestingSandbox}},methods:{checkTextFieldInheritance:function(e){return"string"!=typeof e||e.length<=0},checkBoolFieldInheritance:function(e){return"boolean"!=typeof e},onTest:function(e){var n,t,a=this;e?this.isTestingSandbox=!0:this.isTestingLive=!0,e?(n=this.actualConfigData["SwagPayPal.settings.clientIdSandbox"]||this.allConfigs.null["SwagPayPal.settings.clientIdSandbox"],t=this.actualConfigData["SwagPayPal.settings.clientSecretSandbox"]||this.allConfigs.null["SwagPayPal.settings.clientSecretSandbox"]):(n=this.actualConfigData["SwagPayPal.settings.clientId"]||this.allConfigs.null["SwagPayPal.settings.clientId"],t=this.actualConfigData["SwagPayPal.settings.clientSecret"]||this.allConfigs.null["SwagPayPal.settings.clientSecret"]),this.SwagPayPalApiCredentialsService.validateApiCredentials(n,t,e).then((function(n){n.credentialsValid&&(e?(a.isTestingSandbox=!1,a.isTestSandboxSuccessful=!0):(a.isTestingLive=!1,a.isTestLiveSuccessful=!0))})).catch((function(n){if(n.response.data&&n.response.data.errors){var t="<b>".concat(a.$tc("swag-paypal.settingForm.messageTestError"),"</b> ");t+=n.response.data.errors.map((function(e){return e.detail})).join(" / "),a.createNotificationError({message:t}),e?(a.isTestingSandbox=!1,a.isTestSandboxSuccessful=!1):(a.isTestingLive=!1,a.isTestLiveSuccessful=!1)}}))},onPayPalCredentialsLoadSuccess:function(e,n,t){t?(this.$set(this.actualConfigData,"SwagPayPal.settings.clientIdSandbox",e),this.$set(this.actualConfigData,"SwagPayPal.settings.clientSecretSandbox",n)):(this.$set(this.actualConfigData,"SwagPayPal.settings.clientId",e),this.$set(this.actualConfigData,"SwagPayPal.settings.clientSecret",n))},onPayPalCredentialsLoadFailed:function(e){e?(this.$set(this.actualConfigData,"SwagPayPal.settings.clientIdSandbox",""),this.$set(this.actualConfigData,"SwagPayPal.settings.clientSecretSandbox","")):(this.$set(this.actualConfigData,"SwagPayPal.settings.clientId",""),this.$set(this.actualConfigData,"SwagPayPal.settings.clientSecret","")),this.createNotificationError({message:this.$tc("swag-paypal.settingForm.credentials.button.messageFetchedError"),duration:1e4})}}});var A=t("c09w"),O=t.n(A);Shopware.Component.register("swag-paypal-express",{template:O.a,inject:["acl"],props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},computed:{buttonColorOptions:function(){return[{id:"blue",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.blue")},{id:"black",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.black")},{id:"gold",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.gold")},{id:"silver",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.silver")},{id:"white",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.white")}]},buttonShapeOptions:function(){return[{id:"pill",name:this.$tc("swag-paypal.settingForm.express.ecsButtonShape.options.pill")},{id:"rect",name:this.$tc("swag-paypal.settingForm.express.ecsButtonShape.options.rect")}]}},methods:{checkTextFieldInheritance:function(e){return"string"!=typeof e||e.length<=0},checkBoolFieldInheritance:function(e){return"boolean"!=typeof e},preventSave:function(e){this.$emit("preventSave",e)}}});var D=t("wP8X"),F=t.n(D);Shopware.Component.register("swag-paypal-installment",{template:F.a,inject:["acl"],props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},methods:{checkTextFieldInheritance:function(e){return"string"!=typeof e||e.length<=0},checkBoolFieldInheritance:function(e){return"boolean"!=typeof e}}});var z=t("teyW"),R=t.n(z);Shopware.Component.register("swag-paypal-plus",{template:R.a,inject:["acl"],props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},methods:{checkTextFieldInheritance:function(e){return"string"!=typeof e||e.length<=0},checkBoolFieldInheritance:function(e){return"boolean"!=typeof e}}});var E=t("KuGH"),B=t.n(E);Shopware.Component.register("swag-paypal-settings-icon",{template:B.a});var j=t("ZdqX"),N=t.n(j);Shopware.Component.register("swag-paypal-spb",{template:N.a,inject:["acl"],props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},computed:{buttonColorOptions:function(){return[{id:"blue",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.blue")},{id:"black",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.black")},{id:"gold",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.gold")},{id:"silver",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.silver")},{id:"white",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.white")}]},buttonShapeOptions:function(){return[{id:"pill",name:this.$tc("swag-paypal.settingForm.express.ecsButtonShape.options.pill")},{id:"rect",name:this.$tc("swag-paypal.settingForm.express.ecsButtonShape.options.rect")}]}},methods:{checkTextFieldInheritance:function(e){return"string"!=typeof e||e.length<=0},checkBoolFieldInheritance:function(e){return"boolean"!=typeof e},preventSave:function(e){this.$emit("preventSave",e)}}});var V=t("770j"),M=t.n(V),q=(t("tVAc"),Shopware.Component),U=Shopware.Utils.debounce;q.extend("swag-paypal-locale-field","sw-text-field",{template:M.a,data:function(){return{error:null}},methods:{onInput:U((function(e){this.checkValue(e.target.value)}),350),onBlur:function(e,n){n(),this.checkValue(e.target.value)},checkValue:function(e){if(this.$emit("change",e||""),!e||/^[a-z]{2}_[A-Z]{2}$/.exec(e))return this.preventSave(!1),void(this.error=null);this.preventSave(!0),this.error={code:1,detail:this.$tc("swag-paypal.settingForm.locale-field.error.detail")}},preventSave:function(e){this.$emit("preventSave",e)}}}),Shopware.Module.register("swag-paypal",{type:"plugin",name:"SwagPayPal",title:"swag-paypal.general.mainMenuItemGeneral",description:"swag-paypal.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#9AA8B5",icon:"default-action-settings",routes:{index:{component:"swag-paypal",path:"index",meta:{parentPath:"sw.settings.index",privilege:"swag_paypal.viewer"}}},settingsItem:{group:"plugins",to:"swag.paypal.index",iconComponent:"swag-paypal-settings-icon",backgroundEnabled:!0,privilege:"swag_paypal.viewer"}});var H=t("GiWa"),Z=t.n(H),G=(t("6/AX"),t("8+5b")),K=t.n(G),Y=Shopware.Component,W=Shopware.Utils;Y.register("swag-paypal-payment-action-capture",{template:K.a,inject:["SwagPayPalPaymentService"],mixins:["notification"],props:{paymentResource:{type:Object,required:!0},maxCaptureValue:{type:Number,required:!0},orderId:{type:String,required:!0}},data:function(){return{isFinalCapture:!0,captureValue:this.maxCaptureValue,isLoading:!0,currency:this.paymentResource.transactions[0].amount.currency}},computed:{showHint:function(){return this.isFinalCapture&&this.captureValue!==this.maxCaptureValue}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.isLoading=!1},capture:function(){var e=this,n=this.captureValue,t=this.currency,a=this.isFinalCapture,s=this.paymentResource.intent,i=this.getResourceId(this.paymentResource);this.isLoading=!0,this.SwagPayPalPaymentService.capturePayment(this.orderId,s,i,n,t,a).then((function(){e.createNotificationSuccess({message:e.$tc("swag-paypal-payment.captureAction.successMessage")}),e.isLoading=!1,e.$emit("modal-close"),e.$nextTick((function(){e.$router.replace("".concat(e.$route.path,"?hash=").concat(W.createId()))}))})).catch((function(n){try{e.createNotificationError({message:"".concat(n.response.data.errors[0].title,": ").concat(n.response.data.errors[0].detail),autoClose:!1})}catch(t){e.createNotificationError({message:"".concat(n.title,": ").concat(n.message),autoClose:!1})}finally{e.isLoading=!1}}))},getResourceId:function(e){var n=null;return e.transactions[0].related_resources.forEach((function(e){e.authorization&&(n=e.authorization.id),e.order&&(n=e.order.id)})),n}}});var Q=t("Rq5H"),J=t.n(Q),X="refunded",ee="voided",ne="captured",te="completed",ae="capture",se="sale",ie="failed",oe="cancelled",le=Shopware,re=le.Component,ce=le.Filter,pe=Shopware.Utils;re.register("swag-paypal-payment-action-refund",{template:J.a,inject:["SwagPayPalPaymentService"],mixins:["notification"],props:{paymentResource:{type:Object,required:!0},orderId:{type:String,required:!0}},data:function(){return{captures:[],selectedCapture:{},existingRefunds:[],refundAmount:0,refundableAmount:0,refundDescription:"",refundReason:"",refundInvoiceNumber:"",isLoading:!0,selectedCaptureId:""}},computed:{dateFilter:function(){return ce.getByName("date")}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.getRefundableCaptures(),this.mapRefunds(),this.selectedCaptureId=this.captures[0].id,this.isLoading=!1,this.preserveCapture(),this.refundAmount=Number(this.captures[0].refundableAmount)},getRefundableCaptures:function(){var e=this,n=this.paymentResource.transactions[0].related_resources;this.captures=n.reduce((function(n,t){if(t.sale){var a=t.sale;a.state!==X&&n.push(e.formatCapture(a,se))}if(t.capture){var s=t.capture;s.state!==X&&n.push(e.formatCapture(s,ae))}return t.refund&&e.existingRefunds.push(t.refund),n}),this.captures)},formatCapture:function(e,n){var t=this.dateFilter(e.create_time);return{label:"".concat(t," (").concat(e.amount.total," ").concat(e.amount.currency,")")+" - ".concat(e.id," [").concat(e.state,"]"),id:e.id,refundableAmount:e.amount.total,currency:e.amount.currency,type:n}},mapRefunds:function(){var e=this;this.existingRefunds.forEach((function(n){var t=e.captures.find((function(e){switch(e.type){case ae:return n.capture_id===e.id;case se:return n.sale_id===e.id;default:return!1}}));if(t){var a=Number(n.amount.total);a<0&&(a*=-1),t.refundableAmount-=a}}))},preserveCapture:function(){var e=this,n=this.captures.find((function(n){return n.id===e.selectedCaptureId}));this.selectedCapture=n,this.refundableAmount=Number(n.refundableAmount),this.refundAmount=Number(n.refundableAmount)},refund:function(){var e=this;this.isLoading=!0;var n=this.refundAmount,t=this.refundDescription,a=this.selectedCapture.currency,s=this.selectedCapture.type,i=this.selectedCapture.id,o=this.refundReason,l=this.refundInvoiceNumber;0===n&&(n=this.refundableAmount),this.SwagPayPalPaymentService.refundPayment(this.orderId,s,i,n,a,t,o,l).then((function(){e.createNotificationSuccess({message:e.$tc("swag-paypal-payment.refundAction.successMessage")}),e.isLoading=!1,e.$emit("modal-close"),e.$nextTick((function(){e.$router.replace("".concat(e.$route.path,"?hash=").concat(pe.createId()))}))})).catch((function(n){try{e.createNotificationError({message:"".concat(n.response.data.errors[0].title,": ").concat(n.response.data.errors[0].detail),autoClose:!1})}catch(t){e.createNotificationError({message:"".concat(n.title,": ").concat(n.message),autoClose:!1})}finally{e.isLoading=!1}}))}}});var de=t("4m17"),ue=t.n(de),ge=Shopware.Component,he=Shopware.Utils;ge.register("swag-paypal-payment-action-void",{template:ue.a,inject:["SwagPayPalPaymentService"],mixins:["notification"],props:{paymentResource:{type:Object,required:!0},orderId:{type:String,required:!0}},data:function(){return{isLoading:!1}},methods:{voidPayment:function(){var e=this;this.isLoading=!0;var n=this.paymentResource.intent,t=this.getResourceId(),a=this.$route.params.id;this.SwagPayPalPaymentService.voidPayment(this.orderId,n,t,a).then((function(){e.createNotificationSuccess({message:e.$tc("swag-paypal-payment.voidAction.successMessage")}),e.isLoading=!1,e.closeModal(),e.$nextTick((function(){e.$router.replace("".concat(e.$route.path,"?hash=").concat(he.createId()))}))})).catch((function(n){try{e.createNotificationError({message:"".concat(n.response.data.errors[0].title,": ").concat(n.response.data.errors[0].detail),autoClose:!1})}catch(t){e.createNotificationError({message:"".concat(n.title,": ").concat(n.message),autoClose:!1})}finally{e.isLoading=!1}}))},getResourceId:function(){var e=this.paymentResource.transactions[0].related_resources[0];return e.order?e.order.id:e.authorization.id},closeModal:function(){this.$emit("modal-close")}}}),Shopware.Component.register("swag-paypal-payment-actions",{template:Z.a,inject:["acl"],props:{paymentResource:{type:Object,required:!0},orderId:{type:String,required:!0}},data:function(){return{modalType:"",refundableAmount:0,captureableAmount:0,showVoidButton:!1,relatedResources:null}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.relatedResources=this.paymentResource.transactions[0].related_resources,this.setPaymentActionAmounts(),this.setShowVoidButton(),this.captureableAmount=this.formatAmount(this.captureableAmount),this.refundableAmount=this.formatAmount(this.refundableAmount)},spawnModal:function(e){this.modalType=e},closeModal:function(){this.modalType=""},setPaymentActionAmounts:function(){var e=this;null!==this.relatedResources&&this.relatedResources.forEach((function(n){if(n.authorization&&n.authorization.state!==te&&(e.captureableAmount+=Number(n.authorization.amount.total)),n.order&&n.order.state!==te&&(e.captureableAmount+=Number(n.order.amount.total)),n.sale&&(e.refundableAmount+=Number(n.sale.amount.total)),n.capture){var t=Number(n.capture.amount.total);e.captureableAmount-=t,e.refundableAmount+=t}if(n.refund&&n.refund.state!==ie&&n.refund.state!==oe){var a=Number(n.refund.amount.total);a>0&&(a*=-1),e.refundableAmount+=a}}))},setShowVoidButton:function(){if(null!==this.relatedResources){var e=this.relatedResources[0];if(e){var n=[ee,ne,te];if(!e.sale){if(e.order){var t=e.order;if(n.includes(t.state))return void(this.captureableAmount=0);this.showVoidButton=!0}if(e.authorization){var a=e.authorization;if(n.includes(a.state))return void(this.captureableAmount=0);this.showVoidButton=!0}}}}},formatAmount:function(e){return Number("".concat(Math.round("".concat(e,"e2")),"e-2"))}}});var ye=t("vk0W"),_e=t.n(ye),we=t("56rz"),me=t.n(we),fe=Shopware.Component,be=Shopware.Utils;fe.register("swag-paypal-payment-action-v2-capture",{template:me.a,inject:["SwagPayPalOrderService"],mixins:["notification"],props:{paypalOrder:{type:Object,required:!0},orderTransactionId:{type:String,required:!0},paypalPartnerAttributionId:{type:String,required:!0},captureableAmount:{type:Number,required:!0}},data:function(){return{authorization:{},isFinalCapture:!0,captureAmount:this.captureableAmount,captureInvoiceNumber:"",captureNoteToPayer:"",currencyCode:"",isLoading:!0}},computed:{showHint:function(){return this.isFinalCapture&&this.captureAmount!==this.captureableAmount}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.authorization=this.paypalOrder.purchase_units[0].payments.authorizations[0],this.currencyCode=this.authorization.amount.currency_code,this.isLoading=!1},capture:function(){var e=this;this.isLoading=!0;var n=this.captureAmount;0===n&&(n=this.captureableAmount),this.SwagPayPalOrderService.captureAuthorization(this.orderTransactionId,this.authorization.id,this.currencyCode,n,this.captureInvoiceNumber,this.captureNoteToPayer,this.paypalPartnerAttributionId,this.isFinalCapture).then((function(){e.createNotificationSuccess({message:e.$tc("swag-paypal-payment.captureAction.successMessage")}),e.isLoading=!1,e.$emit("modal-close"),e.$nextTick((function(){e.$router.replace("".concat(e.$route.path,"?hash=").concat(be.createId()))}))})).catch((function(n){try{e.createNotificationError({message:"".concat(n.response.data.errors[0].title,": ").concat(n.response.data.errors[0].detail),autoClose:!1})}catch(t){e.createNotificationError({message:"".concat(n.title,": ").concat(n.message),autoClose:!1})}finally{e.isLoading=!1}}))}}});var ve=t("atmP"),Se=t.n(ve),ke="REFUNDED",Ce="CREATED",Pe="PARTIALLY_CAPTURED",xe="PENDING",Ie=Shopware,$e=Ie.Component,Le=Ie.Filter,Te=Shopware.Utils;$e.register("swag-paypal-payment-action-v2-refund",{template:Se.a,inject:["SwagPayPalOrderService"],mixins:["notification"],props:{paypalOrder:{type:Object,required:!0},orderTransactionId:{type:String,required:!0},paypalPartnerAttributionId:{type:String,required:!0}},data:function(){return{captures:[],selectedCapture:{},refundAmount:0,refundInvoiceNumber:"",refundNoteToPayer:"",selectedCaptureId:"",isLoading:!0}},computed:{dateFilter:function(){return Le.getByName("date")}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.getRefundableCaptures();var e=this.captures[0];this.selectedCaptureId=e.id,this.selectedCapture=e,this.refundAmount=Number(e.amount.value),this.isLoading=!1},getRefundableCaptures:function(){var e=this.paypalOrder.purchase_units[0].payments.captures,n=[];e.forEach((function(e){e.status!==ke&&n.push(e)})),this.captures=n},setCapture:function(){var e=this;this.selectedCapture=this.captures.find((function(n){return n.id===e.selectedCaptureId})),this.refundAmount=Number(this.selectedCapture.amount.value)},refund:function(){var e=this;this.isLoading=!0;var n=this.refundAmount;0===n&&(n=this.selectedCapture.amount.value),this.SwagPayPalOrderService.refundCapture(this.orderTransactionId,this.selectedCapture.id,this.paypalOrder.id,this.selectedCapture.amount.currency_code,n,this.refundInvoiceNumber,this.refundNoteToPayer,this.paypalPartnerAttributionId).then((function(){e.createNotificationSuccess({message:e.$tc("swag-paypal-payment.refundAction.successMessage")}),e.isLoading=!1,e.$emit("modal-close"),e.$nextTick((function(){e.$router.replace("".concat(e.$route.path,"?hash=").concat(Te.createId()))}))})).catch((function(n){try{e.createNotificationError({message:"".concat(n.response.data.errors[0].title,": ").concat(n.response.data.errors[0].detail),autoClose:!1})}catch(t){e.createNotificationError({message:"".concat(n.title,": ").concat(n.message),autoClose:!1})}finally{e.isLoading=!1}}))}}});var Ae=t("6Lkv"),Oe=t.n(Ae),De=Shopware.Component,Fe=Shopware.Utils;De.register("swag-paypal-payment-action-v2-void",{template:Oe.a,inject:["SwagPayPalOrderService"],mixins:["notification"],props:{paypalOrder:{type:Object,required:!0},orderTransactionId:{type:String,required:!0},paypalPartnerAttributionId:{type:String,required:!0}},data:function(){return{isLoading:!1}},methods:{voidPayment:function(){var e=this;this.isLoading=!0;var n=this.paypalOrder.purchase_units[0].payments.authorizations[0];this.SwagPayPalOrderService.voidAuthorization(this.orderTransactionId,n.id,this.paypalPartnerAttributionId).then((function(){e.createNotificationSuccess({message:e.$tc("swag-paypal-payment.voidAction.successMessage")}),e.isLoading=!1,e.closeModal(),e.$nextTick((function(){e.$router.replace("".concat(e.$route.path,"?hash=").concat(Fe.createId()))}))})).catch((function(n){try{e.createNotificationError({message:"".concat(n.response.data.errors[0].title,": ").concat(n.response.data.errors[0].detail),autoClose:!1})}catch(t){e.createNotificationError({message:"".concat(n.title,": ").concat(n.message),autoClose:!1})}finally{e.isLoading=!1}}))},closeModal:function(){this.$emit("modal-close")}}});t("Xbnc");Shopware.Component.register("swag-paypal-payment-actions-v2",{template:_e.a,inject:["acl"],props:{paypalOrder:{type:Object,required:!0},orderTransactionId:{type:String,required:!0},paypalPartnerAttributionId:{type:String,required:!0},refundableAmount:{type:Number,required:!0},captureableAmount:{type:Number,required:!0},showVoidButton:{type:Boolean,required:!0}},data:function(){return{modalType:""}},methods:{spawnModal:function(e){this.modalType=e},closeModal:function(){this.modalType=""}}});var ze=t("PY1D"),Re=t.n(ze),Ee=Shopware,Be=Ee.Component,je=Ee.Filter;Be.register("swag-paypal-payment-details-v1",{template:Re.a,props:{paymentResource:{type:Object,required:!0},orderId:{type:String,required:!0}},data:function(){return{relatedResources:[],createDateTime:"",updateDateTime:"",currency:"",amount:{},payerId:""}},computed:{dateFilter:function(){return je.getByName("date")},relatedResourceColumns:function(){return[{property:"type",label:this.$tc("swag-paypal-payment.transactionHistory.types.type"),rawData:!0},{property:"total",label:this.$tc("swag-paypal-payment.transactionHistory.types.amount"),rawData:!0},{property:"id",label:this.$tc("swag-paypal-payment.transactionHistory.types.trackingId"),rawData:!0},{property:"status",label:this.$tc("swag-paypal-payment.transactionHistory.types.state"),rawData:!0},{property:"transactionFee",label:this.$tc("swag-paypal-payment.transactionHistory.types.transactionFee"),rawData:!0},{property:"paymentMode",label:this.$tc("swag-paypal-payment.transactionHistory.types.paymentMode"),rawData:!0},{property:"create",label:this.$tc("swag-paypal-payment.transactionHistory.types.createTime"),rawData:!0},{property:"update",label:this.$tc("swag-paypal-payment.transactionHistory.types.updateTime"),rawData:!0}]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.createDateTime=this.formatDate(this.paymentResource.create_time),this.updateDateTime=this.formatDate(this.paymentResource.update_time),this.amount=this.paymentResource.transactions[0].amount,this.currency=this.paymentResource.transactions[0].amount.currency,this.paymentResource.payer&&this.paymentResource.payer.payer_info&&(this.payerId=this.paymentResource.payer.payer_info.payer_id),this.setRelatedResources()},setRelatedResources:function(){var e=this,n=this.paymentResource.transactions[0].related_resources;null!==n&&n.forEach((function(n){n.sale&&e.pushRelatedResource("sale",n.sale),n.authorization&&e.pushRelatedResource("authorization",n.authorization),n.order&&e.pushRelatedResource("order",n.order),n.refund&&e.pushRelatedResource("refund",n.refund),n.capture&&e.pushRelatedResource("capture",n.capture)}))},pushRelatedResource:function(e,n){var t=null,a=n.amount.currency;n.transaction_fee&&(t="".concat(n.transaction_fee.value," ").concat(a)),this.relatedResources.push({id:n.id,type:this.$tc("swag-paypal-payment.transactionHistory.states.".concat(e)),total:"".concat(n.amount.total," ").concat(a),create:this.formatDate(n.create_time),createRaw:n.create_time,update:this.formatDate(n.update_time),transactionFee:t,status:n.state,paymentMode:n.payment_mode}),this.relatedResources.sort((function(e,n){return new Date(e.createRaw)-new Date(n.createRaw)}))},formatDate:function(e){return this.dateFilter(e,{hour:"2-digit",minute:"2-digit",second:"2-digit"})}}});var Ne=t("Q7T4"),Ve=t.n(Ne),Me=Shopware,qe=Me.Component,Ue=Me.Filter;qe.register("swag-paypal-payment-details-v2",{template:Ve.a,props:{paypalOrder:{type:Object,required:!0},orderTransactionId:{type:String,required:!0},paypalPartnerAttributionId:{type:String,required:!0}},data:function(){return{payments:[],createDateTime:"",updateDateTime:"",currency:"",amount:{},payerId:"",refundableAmount:0,captureableAmount:0,showVoidButton:!1}},computed:{dateFilter:function(){return Ue.getByName("date")},paymentColumns:function(){return[{property:"type",label:this.$tc("swag-paypal-payment.transactionHistory.types.type"),rawData:!0},{property:"id",label:this.$tc("swag-paypal-payment.transactionHistory.types.trackingId"),rawData:!0},{property:"total",label:this.$tc("swag-paypal-payment.transactionHistory.types.amount"),rawData:!0},{property:"status",label:this.$tc("swag-paypal-payment.transactionHistory.types.state"),rawData:!0},{property:"transactionFee",label:this.$tc("swag-paypal-payment.transactionHistory.types.transactionFee"),rawData:!0},{property:"create",label:this.$tc("swag-paypal-payment.transactionHistory.types.createTime"),rawData:!0},{property:"update",label:this.$tc("swag-paypal-payment.transactionHistory.types.updateTime"),rawData:!0}]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.createDateTime=this.formatDate(this.paypalOrder.create_time),this.updateDateTime=this.formatDate(this.paypalOrder.update_time),this.amount=this.paypalOrder.purchase_units[0].amount,this.currency=this.amount.currency_code;var e=this.paypalOrder.payer;null!==e&&(this.payerId=e.payer_id),this.setPayments()},setPayments:function(){var e=this,n=this.paypalOrder.purchase_units[0].payments;if(null!==n){var t=n.authorizations,a=n.captures,s=n.refunds;null!==t&&t.forEach((function(n){e.pushPayment("authorization",n);var t=n.status;t!==Ce&&t!==Pe||(e.captureableAmount+=Number(n.amount.value),e.showVoidButton=!0),t===xe&&(e.showVoidButton=!0)})),null!==a&&a.forEach((function(n){e.pushPayment("capture",n);var t=Number(n.amount.value);e.refundableAmount+=t,e.captureableAmount-=t})),null!==s&&s.forEach((function(n){e.pushPayment("refund",n),e.refundableAmount-=Number(n.amount.value)})),this.refundableAmount=this.formatAmount(this.refundableAmount),this.captureableAmount=this.formatAmount(this.captureableAmount)}},pushPayment:function(e,n){this.payments.push({id:n.id,type:this.$tc("swag-paypal-payment.transactionHistory.states.".concat(e)),total:"".concat(n.amount.value," ").concat(n.amount.currency_code),create:this.formatDate(n.create_time),createRaw:n.create_time,update:this.formatDate(n.update_time),transactionFee:this.getTransactionFee(e,n),status:n.status}),this.payments.sort((function(e,n){return new Date(e.createRaw)-new Date(n.createRaw)}))},getTransactionFee:function(e,n){if("capture"===e){var t=n.seller_receivable_breakdown;if(null===t)return null;var a=t.paypal_fee;return null==a?null:"".concat(a.value," ").concat(a.currency_code)}if("refund"===e){var s=n.seller_payable_breakdown;if(null===s)return null;var i=s.paypal_fee;return null===i?null:"".concat(i.value," ").concat(i.currency_code)}return null},formatDate:function(e){return this.dateFilter(e,{hour:"2-digit",minute:"2-digit",second:"2-digit"})},formatAmount:function(e){return Number("".concat(Math.round("".concat(e,"e2")),"e-2"))}}});var He=t("9lyR"),Ze=t.n(He);Shopware.Component.extend("swag-paypal-text-field","sw-text-field",{template:Ze.a});var Ge=t("yCcN"),Ke=t.n(Ge);Shopware.Component.extend("swag-paypal-textarea-field","sw-textarea-field",{template:Ke.a});var Ye=t("Jr/O"),We=t.n(Ye),Qe=(t("ap0o"),Shopware),Je=Qe.Component,Xe=Qe.Context,en=Shopware.Data.Criteria;Je.override("sw-order-detail",{template:We.a,data:function(){return{isPayPalPayment:!1}},computed:{isEditable:function(){return!this.isPayPalPayment||"swag.paypal.payment.detail"!==this.$route.name},showTabs:function(){return!0}},watch:{orderId:{deep:!0,handler:function(){var e=this;if(this.orderId){var n=this.repositoryFactory.create("order"),t=new en(1,1);t.addAssociation("transactions"),t.getAssociation("transactions").addSorting(en.sort("createdAt")),n.get(this.orderId,Xe.api,t).then((function(n){var t=n.transactions.length,a=t-1;if(t<=0||!n.transactions[a].paymentMethodId)e.setIsPayPalPayment(null);else{var s=n.transactions[a].paymentMethodId;null!=s&&e.setIsPayPalPayment(s)}}))}else this.setIsPayPalPayment(null)},immediate:!0}},methods:{setIsPayPalPayment:function(e){var n=this;e&&this.repositoryFactory.create("payment_method").get(e,Xe.api).then((function(e){n.isPayPalPayment="handler_swag_paypalpaymenthandler"===e.formattedHandlerIdentifier||"handler_swag_paypalpuipaymenthandler"===e.formattedHandlerIdentifier}))}}});var nn=t("Mge0"),tn=t.n(nn),an=(t("+M/s"),Shopware),sn=an.Component,on=an.Filter,ln=an.Context,rn=Shopware.Utils.types.isEmpty,cn=Shopware.Data.Criteria;function pn(e){return(pn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function dn(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function un(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function gn(e,n){return(gn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function hn(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,a=_n(e);if(n){var s=_n(this).constructor;t=Reflect.construct(a,arguments,s)}else t=a.apply(this,arguments);return yn(this,t)}}function yn(e,n){return!n||"object"!==pn(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function _n(e){return(_n=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}sn.register("swag-paypal-payment-detail",{template:tn.a,inject:["SwagPayPalPaymentService","SwagPayPalOrderService","repositoryFactory"],mixins:["notification"],data:function(){return{order:{},orderTransaction:{},paypalOrder:{},paymentResource:{},isLoading:!0,orderTransactionState:null}},computed:{dateFilter:function(){return on.getByName("date")},stateFailedCancelled:function(){return"failed"===this.orderTransactionState||"cancelled"===this.orderTransactionState},showCanceledPaymentError:function(){return!1===this.isLoading&&!1===this.showPayPalPayment&&!1===this.showPayPalOrder&&!0===this.stateFailedCancelled},showSandboxLiveError:function(){return!1===this.isLoading&&!1===this.showPayPalPayment&&!1===this.showPayPalOrder&&!1===this.stateFailedCancelled},showGeneralError:function(){return!1===this.isLoading&&!1===this.showPayPalPayment&&!1===this.showPayPalOrder&&!1===this.showCanceledPaymentError&&!1===this.showSandboxLiveError},showPayPalPayment:function(){return!1===rn(this.paymentResource)},showPayPalOrder:function(){return!1===rn(this.paypalOrder)}},watch:{$route:function(){this.resetDataAttributes(),this.createdComponent()},"order.orderNumber":function(){this.emitIdentifier()}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this,n=this.$route.params.id,t=this.repositoryFactory.create("order"),a=new cn(1,1);a.addAssociation("transactions.stateMachineState"),a.getAssociation("transactions").addSorting(cn.sort("createdAt")),t.get(n,ln.api,a).then((function(n){if(e.order=n,e.orderTransaction=n.transactions[n.transactions.length-1],e.orderTransactionState=e.orderTransaction.stateMachineState.technicalName,null!==e.orderTransaction.customFields){var t=e.orderTransaction.customFields.swag_paypal_transaction_id;t&&e.handlePayPalPayment(t);var a=e.orderTransaction.customFields.swag_paypal_order_id;a?e.handlePayPalOrder(a):e.isLoading=!1}else e.isLoading=!1}))},handlePayPalOrder:function(e){var n=this;this.SwagPayPalOrderService.getOrderDetails(this.orderTransaction.id,e).then((function(e){n.paypalOrder=e,n.isLoading=!1})).catch(this.handleError)},handlePayPalPayment:function(e){var n=this;this.SwagPayPalPaymentService.getPaymentDetails(this.order.id,e).then((function(e){n.paymentResource=e,n.isLoading=!1})).catch(this.handleError)},handleError:function(e){try{this.createNotificationError({message:"".concat(this.$tc("swag-paypal-payment.paymentDetails.error.title"),": ").concat(e.response.data.errors[0].detail),autoClose:!1})}catch(n){this.createNotificationError({message:"".concat(this.$tc("swag-paypal-payment.paymentDetails.error.title"),": ").concat(e.message),autoClose:!1})}finally{this.isLoading=!1}},emitIdentifier:function(){var e=null!==this.order?this.order.orderNumber:"";this.$emit("identifier-change",e)},resetDataAttributes:function(){this.isLoading=!0,this.paypalOrder={}}}}),Shopware.Module.register("swag-paypal-payment",{type:"plugin",name:"SwagPayPal",title:"swag-paypal-payment.general.title",description:"swag-paypal-payment.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#2b52ff",routeMiddleware:function(e,n){"sw.order.detail"===n.name&&n.children.push({component:"swag-paypal-payment-detail",name:"swag.paypal.payment.detail",isChildren:!0,path:"/sw/order/paypal/detail/:id",meta:{parentPath:"sw.order.index",privilege:"order.viewer"}}),e(n)}});var wn=Shopware.Classes.ApiService,mn=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&gn(e,n)}(i,e);var n,t,a,s=hn(i);function i(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal";return dn(this,i),s.call(this,e,n,t)}return n=i,(t=[{key:"validateApiCredentials",value:function(e,n,t){var a=this.getBasicHeaders();return this.httpClient.get("_action/".concat(this.getApiBasePath(),"/validate-api-credentials"),{params:{clientId:e,clientSecret:n,sandboxActive:t},headers:a}).then((function(e){return wn.handleResponse(e)}))}},{key:"getApiCredentials",value:function(e,n,t,a){var s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{},o=s,l=this.getBasicHeaders(i);return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/get-api-credentials"),{authCode:e,sharedId:n,nonce:t,sandboxActive:a},{params:o,headers:l}).then((function(e){return wn.handleResponse(e)}))}}])&&un(n.prototype,t),a&&un(n,a),i}(wn);function fn(e){return(fn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function bn(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function vn(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Sn(e,n){return(Sn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function kn(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,a=Pn(e);if(n){var s=Pn(this).constructor;t=Reflect.construct(a,arguments,s)}else t=a.apply(this,arguments);return Cn(this,t)}}function Cn(e,n){return!n||"object"!==fn(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Pn(e){return(Pn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var xn=Shopware.Classes.ApiService,In=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Sn(e,n)}(i,e);var n,t,a,s=kn(i);function i(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal/pos";return bn(this,i),s.call(this,e,n,t)}return n=i,(t=[{key:"validateApiCredentials",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,t=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/validate-api-credentials"),{apiKey:e,salesChannelId:n},{headers:t}).then((function(e){return xn.handleResponse(e)}))}},{key:"fetchInformation",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=this.getBasicHeaders(),a=e.extensions.paypalPosSalesChannel.apiKey;return this.httpClient.post("".concat(this.getApiBasePath(),"/fetch-information"),{apiKey:a},{headers:t}).then((function(t){var a=xn.handleResponse(t);return delete a.extensions,null===a.languageId||null!==e.id&&!n?delete a.languageId:(e.languages.length=0,e.languages.push({id:a.languageId})),Object.assign(e,a),e.currencies.length=0,e.currencies.push({id:a.currencyId}),e.countries.length=0,e.countries.push({id:a.countryId}),a}))}},{key:"cloneProductVisibility",value:function(e,n){var t=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/clone-product-visibility"),{fromSalesChannelId:e,toSalesChannelId:n},{headers:t}).then((function(e){return xn.handleResponse(e)}))}},{key:"getProductCount",value:function(e,n){var t=this.getBasicHeaders();return this.httpClient.get("".concat(this.getApiBasePath(),"/product-count"),{params:{salesChannelId:e,cloneSalesChannelId:n},headers:t}).then((function(e){return xn.handleResponse(e)}))}},{key:"generateApiUrl",value:function(){return"https://my.izettle.com/apps/api-keys?name=Shopware%20integration&scopes=".concat(["READ:PURCHASE","READ:FINANCE","READ:USERINFO","READ:PRODUCT","WRITE:PRODUCT"].join("%20"),"&utm_source=local_partnership&utm_medium=ecommerce&utm_campaign=shopware")}}])&&vn(n.prototype,t),a&&vn(n,a),i}(xn);function $n(e){return($n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ln(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function Tn(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Ln(Object(t),!0).forEach((function(n){An(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Ln(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function An(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function On(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Dn(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Fn(e,n){return(Fn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function zn(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,a=En(e);if(n){var s=En(this).constructor;t=Reflect.construct(a,arguments,s)}else t=a.apply(this,arguments);return Rn(this,t)}}function Rn(e,n){return!n||"object"!==$n(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function En(e){return(En=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Bn=Shopware.Classes.ApiService,jn=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Fn(e,n)}(i,e);var n,t,a,s=zn(i);function i(e,n){var t,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal/pos";return On(this,i),(t=s.call(this,e,n,a)).basicConfig={timeout:3e5},t}return n=i,(t=[{key:"startCompleteSync",value:function(e){var n=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/sync/").concat(e),null,Tn(Tn({},this.basicConfig),{},{headers:n})).then((function(e){return Bn.handleResponse(e)}))}},{key:"startProductSync",value:function(e){var n=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/sync/").concat(e,"/products"),null,Tn(Tn({},this.basicConfig),{},{headers:n})).then((function(e){return Bn.handleResponse(e)}))}},{key:"startInventorySync",value:function(e){var n=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/sync/").concat(e,"/inventory"),null,Tn(Tn({},this.basicConfig),{},{headers:n})).then((function(e){return Bn.handleResponse(e)}))}},{key:"startImageSync",value:function(e){var n=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/sync/").concat(e,"/images"),null,Tn(Tn({},this.basicConfig),{},{headers:n})).then((function(e){return Bn.handleResponse(e)}))}},{key:"startLogCleanup",value:function(e){var n=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/log/cleanup/").concat(e),null,Tn(Tn({},this.basicConfig),{},{headers:n})).then((function(e){return Bn.handleResponse(e)}))}},{key:"abortSync",value:function(e){var n=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/sync/abort/").concat(e),null,Tn(Tn({},this.basicConfig),{},{headers:n})).then((function(e){return Bn.handleResponse(e)}))}},{key:"resetSync",value:function(e){var n=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/sync/reset/").concat(e),null,Tn(Tn({},this.basicConfig),{},{headers:n})).then((function(e){return Bn.handleResponse(e)}))}},{key:"getProductLog",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,a=this.getBasicHeaders();return this.httpClient.get("".concat(this.getApiBasePath(),"/product-log/").concat(e),Tn(Tn({},this.basicConfig),{},{headers:a,params:{page:n,limit:t}})).then((function(e){return Bn.handleResponse(e)}))}}])&&Dn(n.prototype,t),a&&Dn(n,a),i}(Bn);function Nn(e){return(Nn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Vn(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Mn(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function qn(e,n){return(qn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function Un(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,a=Zn(e);if(n){var s=Zn(this).constructor;t=Reflect.construct(a,arguments,s)}else t=a.apply(this,arguments);return Hn(this,t)}}function Hn(e,n){return!n||"object"!==Nn(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function Zn(e){return(Zn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Gn=Shopware.Classes.ApiService,Kn=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&qn(e,n)}(i,e);var n,t,a,s=Un(i);function i(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal/pos";return Vn(this,i),s.call(this,e,n,t)}return n=i,(t=[{key:"registerWebhook",value:function(e){var n=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/webhook/registration/").concat(e),{},{headers:n}).then((function(e){return Gn.handleResponse(e)}))}},{key:"unregisterWebhook",value:function(e){var n=this.getBasicHeaders();return this.httpClient.delete("_action/".concat(this.getApiBasePath(),"/webhook/registration/").concat(e),{},{headers:n}).then((function(e){return Gn.handleResponse(e)}))}}])&&Mn(n.prototype,t),a&&Mn(n,a),i}(Gn);function Yn(e){return(Yn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Wn(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function Qn(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function Jn(e,n){return(Jn=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function Xn(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,a=nt(e);if(n){var s=nt(this).constructor;t=Reflect.construct(a,arguments,s)}else t=a.apply(this,arguments);return et(this,t)}}function et(e,n){return!n||"object"!==Yn(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function nt(e){return(nt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var tt=Shopware.Classes.ApiService,at=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&Jn(e,n)}(i,e);var n,t,a,s=Xn(i);function i(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal";return Wn(this,i),s.call(this,e,n,t)}return n=i,(t=[{key:"getPaymentDetails",value:function(e,n){var t="".concat(this.getApiBasePath(),"/payment-details/").concat(e,"/").concat(n);return this.httpClient.get(t,{headers:this.getBasicHeaders()}).then((function(e){return tt.handleResponse(e)}))}},{key:"capturePayment",value:function(e,n,t,a,s,i){var o="_action/".concat(this.getApiBasePath(),"/capture-payment/").concat(n,"/").concat(t,"/").concat(e);return this.httpClient.post(o,{captureAmount:a,currency:s,captureIsFinal:i},{headers:this.getBasicHeaders()}).then((function(e){return tt.handleResponse(e)}))}},{key:"refundPayment",value:function(e,n,t,a,s,i,o,l){var r="_action/".concat(this.getApiBasePath(),"/refund-payment/").concat(n,"/").concat(t,"/").concat(e);return this.httpClient.post(r,{refundAmount:a,currency:s,description:i,reason:o,refundInvoiceNumber:l},{headers:this.getBasicHeaders()}).then((function(e){return tt.handleResponse(e)}))}},{key:"voidPayment",value:function(e,n,t){var a="_action/".concat(this.getApiBasePath(),"/void-payment/").concat(n,"/").concat(t,"/").concat(e);return this.httpClient.post(a,{},{headers:this.getBasicHeaders()}).then((function(e){return tt.handleResponse(e)}))}}])&&Qn(n.prototype,t),a&&Qn(n,a),i}(tt);function st(e){return(st="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function it(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function ot(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?it(Object(t),!0).forEach((function(n){lt(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):it(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function lt(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function rt(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function ct(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function pt(e,n){return(pt=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function dt(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,a=gt(e);if(n){var s=gt(this).constructor;t=Reflect.construct(a,arguments,s)}else t=a.apply(this,arguments);return ut(this,t)}}function ut(e,n){return!n||"object"!==st(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function gt(e){return(gt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var ht=Shopware.Classes.ApiService,yt=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&pt(e,n)}(i,e);var n,t,a,s=dt(i);function i(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal-v2";return rt(this,i),s.call(this,e,n,t)}return n=i,(t=[{key:"getOrderDetails",value:function(e,n){var t="".concat(this.getApiBasePath(),"/order/").concat(e,"/").concat(n);return this.httpClient.get(t,this.getDefaultOptions()).then((function(e){return ht.handleResponse(e)}))}},{key:"refundCapture",value:function(e,n,t,a,s,i,o,l){var r="/".concat(e,"/").concat(n,"/").concat(t),c="".concat(this.getApiBasePath("","_action"),"/refund-capture").concat(r);return this.doPostRequest(c,l,{currency:a,amount:s,invoiceNumber:i,noteToPayer:o})}},{key:"captureAuthorization",value:function(e,n,t,a,s,i,o,l){var r="/".concat(e,"/").concat(n),c="".concat(this.getApiBasePath("","_action"),"/capture-authorization").concat(r);return this.doPostRequest(c,o,{currency:t,amount:a,invoiceNumber:s,noteToPayer:i,isFinal:l})}},{key:"voidAuthorization",value:function(e,n,t){var a="/".concat(e,"/").concat(n),s="".concat(this.getApiBasePath("","_action"),"/void-authorization").concat(a);return this.doPostRequest(s,t)}},{key:"doPostRequest",value:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=ot({partnerAttributionId:n},t);return this.httpClient.post(e,a,this.getDefaultOptions()).then((function(e){return ht.handleResponse(e)}))}},{key:"getDefaultOptions",value:function(){return{headers:this.getBasicHeaders(),version:Shopware.Context.api.apiVersion}}}])&&ct(n.prototype,t),a&&ct(n,a),i}(ht);function _t(e){return(_t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function wt(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function mt(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function ft(e,n){return(ft=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function bt(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,a=St(e);if(n){var s=St(this).constructor;t=Reflect.construct(a,arguments,s)}else t=a.apply(this,arguments);return vt(this,t)}}function vt(e,n){return!n||"object"!==_t(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function St(e){return(St=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var kt=Shopware.Classes.ApiService,Ct=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&ft(e,n)}(i,e);var n,t,a,s=bt(i);function i(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal";return wt(this,i),s.call(this,e,n,t)}return n=i,(t=[{key:"setDefaultPaymentForSalesChannel",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n="_action/".concat(this.getApiBasePath(),"/saleschannel-default");return this.httpClient.post(n,{salesChannelId:e},{headers:this.getBasicHeaders()}).then((function(e){return kt.handleResponse(e)}))}}])&&mt(n.prototype,t),a&&mt(n,a),i}(kt);function Pt(e){return(Pt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function xt(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function It(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function $t(e,n){return($t=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function Lt(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,a=At(e);if(n){var s=At(this).constructor;t=Reflect.construct(a,arguments,s)}else t=a.apply(this,arguments);return Tt(this,t)}}function Tt(e,n){return!n||"object"!==Pt(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function At(e){return(At=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Ot=Shopware.Classes.ApiService,Dt=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&$t(e,n)}(i,e);var n,t,a,s=Lt(i);function i(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal/dispute";return xt(this,i),s.call(this,e,n,t)}return n=i,(t=[{key:"list",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,t=this.getBasicHeaders();return this.httpClient.get(this.getApiBasePath(),{params:{salesChannelId:e,disputeStateFilter:n},headers:t,version:Shopware.Context.api.apiVersion}).then((function(e){return Ot.handleResponse(e)}))}},{key:"detail",value:function(e,n){var t=this.getBasicHeaders();return this.httpClient.get("".concat(this.getApiBasePath(),"/").concat(e),{params:{salesChannelId:n},headers:t,version:Shopware.Context.api.apiVersion}).then((function(e){return Ot.handleResponse(e)}))}}])&&It(n.prototype,t),a&&It(n,a),i}(Ot),Ft=Shopware.Application,zt=Ft.getContainer("init");Ft.addServiceProvider("SwagPayPalApiCredentialsService",(function(e){return new mn(zt.httpClient,e.loginService)})),Ft.addServiceProvider("SwagPayPalPosSettingApiService",(function(e){return new In(zt.httpClient,e.loginService)})),Ft.addServiceProvider("SwagPayPalPosApiService",(function(e){return new jn(zt.httpClient,e.loginService)})),Ft.addServiceProvider("SwagPayPalPosWebhookRegisterService",(function(e){return new Kn(zt.httpClient,e.loginService)})),Ft.addServiceProvider("SwagPayPalPaymentService",(function(e){return new at(zt.httpClient,e.loginService)})),Ft.addServiceProvider("SwagPayPalOrderService",(function(e){return new yt(zt.httpClient,e.loginService)})),Ft.addServiceProvider("SwagPaypalPaymentMethodService",(function(e){return new Ct(zt.httpClient,e.loginService)})),Ft.addServiceProvider("SwagPayPalDisputeApiService",(function(e){return new Dt(zt.httpClient,e.loginService)}));var Rt=t("ZLee"),Et=t("CEzf");Shopware.Locale.extend("de-DE",Rt),Shopware.Locale.extend("en-GB",Et);var Bt,jt=(Bt=t("nYtA")).keys().reduce((function(e,n){var t={name:n.split(".")[1].split("/")[1],functional:!0,render:function(e,t){var a=t.data;return e("span",{class:[a.staticClass,a.class],style:a.style,attrs:a.attrs,on:a.on,domProps:{innerHTML:Bt(n)}})}};return e.push(t),e}),[]),Nt=Shopware.Component,Vt=(jt.map((function(e){return Nt.register(e.name,e)})),t("QZV2")),Mt=t.n(Vt);t("odUu");function qt(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}Shopware.Component.register("swag-paypal-pos-status",{template:Mt.a,props:{title:{type:String,required:!1,default:""},status:{type:String,required:!0},disabled:{type:Boolean,required:!1,default:!1},disabledText:{type:String,required:!1,default:""},icon:{type:String,required:!0},iconAnimated:{type:Boolean,required:!1,default:!1},subIcon:{type:String,required:!1,default:""},showSubStatus:{type:Boolean,required:!1,default:!1},isLoading:{type:Boolean,required:!0},variant:{type:String,default:"info",validValues:["info","warning","error","success"],validator:function(e){return["info","warning","error","success"].includes(e)}},subVariant:{type:String,default:"info",validValues:["info","warning","error","success"],validator:function(e){return["info","warning","error","success"].includes(e)}}},computed:{statusClasses:function(){var e;return qt(e={"swag-paypal-pos-status":!0},"swag-paypal-pos-status--".concat(this.variant),!0),qt(e,"swag-paypal-pos-status--disabled",this.disabled),e},iconClasses:function(){return{"swag-paypal-pos-status__icon":!0,"swag-paypal-pos-status__icon-animated":this.iconAnimated}},subIconClasses:function(){return["swag-paypal-pos-status__subicon","swag-paypal-pos-status--".concat(this.subVariant)]},showSubIcon:function(){return null!==this.subIcon&&void 0!==this.subIcon&&this.subIcon!==this.icon}}});var Ut=t("+B3i"),Ht=t.n(Ut);t("auMI");Shopware.Component.register("swag-paypal-pos-account",{template:Ht.a,inject:["SwagPayPalPosSettingApiService","repositoryFactory"],props:{salesChannel:{type:Object,require:!1,default:null},lastRun:{type:Object,require:!1,default:null}},data:function(){return{isLoading:!1,isError:!1,merchantInfo:null}},computed:{accountName:function(){return this.isError?this.$tc("swag-paypal-pos.account.errorName"):this.merchantInfo?this.merchantInfo.name:this.$tc("swag-paypal-pos.account.loadingName")},accountEmail:function(){return this.isError?this.$tc("swag-paypal-pos.account.errorEmail"):this.merchantInfo?this.merchantInfo.contactEmail:this.$tc("swag-paypal-pos.account.loadingEmail")},connectionStatusText:function(){return this.isError?this.$tc("swag-paypal-pos.account.noConnectionStatus"):this.$tc("swag-paypal-pos.account.connectedStatus")},connectionStatusVariant:function(){return this.isError?"danger":"success"},runRepository:function(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel_run")}},watch:{salesChannel:function(){this.loadMerchantData()}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.loadMerchantData()},loadMerchantData:function(){var e=this;return this.isError=!1,this.isLoading=!0,null===this.salesChannel?Promise.resolve():this.SwagPayPalPosSettingApiService.fetchInformation(this.salesChannel).then((function(n){var t=n.merchantInformation;e.merchantInfo=t,e.isError=!1})).catch((function(){e.merchantInfo=null,e.isError=!0})).finally((function(){e.isLoading=!1}))}}});var Zt=t("zzyi"),Gt=t.n(Zt);function Kt(e){return function(e){if(Array.isArray(e))return Yt(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,n){if(!e)return;if("string"==typeof e)return Yt(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Yt(e,n)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Yt(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=new Array(n);t<n;t++)a[t]=e[t];return a}Shopware.Component.register("swag-paypal-pos-status-view",{template:Gt.a,props:{lastFinishedRun:{type:Object,required:!1,default:null},lastCompleteRun:{type:Object,required:!1,default:null},isLoading:{type:Boolean,default:!1},isSyncing:{type:Boolean,default:!1},salesChannel:{type:Object,required:!1,default:null},syncErrors:{type:Array,required:!1,default:null}},data:function(){return{statusErrorLevel:null,statusCompleteErrorLevel:null,iconConfig:{syncing:"default-arrow-360-full",warning:"default-badge-warning",error:"default-basic-x-line",success:"default-basic-checkmark-line",noRunYet:"default-action-more-horizontal"}}},computed:{status:function(){return this.isSyncing?"syncing":this.noRunYet?"noRunYet":this.statusErrorLevel},statusVariant:function(){return this.isSyncing||this.noRunYet?"info":this.statusErrorLevel},statusIcon:function(){return this.iconConfig[this.status]||"default-badge-info"},statusIconComplete:function(){return this.iconConfig[this.statusCompleteErrorLevel]},noRunYet:function(){return null===this.salesChannel||null===this.salesChannel.id||null===this.lastFinishedRun},incompleteLastRun:function(){return null!==this.salesChannel&&null!==this.salesChannel.id&&null!==this.lastFinishedRun&&null!==this.lastCompleteRun&&this.lastFinishedRun.id!==this.lastCompleteRun.id},statusTitle:function(){var e=this.$tc("swag-paypal-pos.detail.overview.status.message.".concat(this.status));if(this.incompleteLastRun){var n=this.$tc("swag-paypal-pos.detail.overview.status.task.".concat(this.lastFinishedRun.task));this.isSyncing||(e+=" (".concat(n,")"))}return this.lastFinishedRun&&"cancelled"===this.lastFinishedRun.status&&!this.isSyncing&&(e=this.$tc("swag-paypal-pos.detail.overview.status.message.aborted")),e},disabled:function(){return null!==this.salesChannel&&null!==this.salesChannel.id&&!1===this.salesChannel.active}},watch:{lastFinishedRun:{handler:function(){this.statusErrorLevel=this.getHighestLevel(this.lastFinishedRun)},immediate:!0},lastCompleteRun:{handler:function(){this.statusCompleteErrorLevel=this.getHighestLevel(this.lastCompleteRun)},immediate:!0}},methods:{getHighestLevel:function(e){if(null===e)return null;if("cancelled"===e.status)return"info";var n=Math.max.apply(Math,Kt(e.logs.map((function(e){return e.level}))));return n>=400?"error":n>=300?"warning":"success"}}});var Wt=t("k1Kq"),Qt=t.n(Wt);t("zrgI");function Jt(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function Xt(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Jt(Object(t),!0).forEach((function(n){ea(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Jt(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function ea(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var na=Shopware.Component,ta=Shopware.Utils;na.register("swag-paypal-pos-boolean-radio",{template:Qt.a,model:{prop:"value",event:"change"},props:{value:{type:Boolean,required:!1,default:!0},optionTrue:{type:Object,required:!0,validator:function(e){return e.hasOwnProperty("name")}},optionFalse:{type:Object,required:!0,validator:function(e){return e.hasOwnProperty("name")}}},data:function(){return{inputId:ta.createId()}},computed:{options:function(){return[Xt({value:!0},this.optionTrue),Xt({value:!1},this.optionFalse)]},castedValue:{get:function(){return this.value},set:function(e){this.$emit("change",e)}},name:function(){return"swag-paypal-pos-boolean-radio-".concat(this.inputId)}}});var aa=t("Uf5m"),sa=t.n(aa),ia=(t("j5/r"),Shopware),oa=ia.Component,la=ia.Context,ra=Shopware.Data.Criteria;oa.register("swag-paypal-pos-detail-logs",{template:sa.a,inject:["SwagPayPalPosApiService","repositoryFactory"],mixins:["notification","swag-paypal-pos-log-label","listing"],props:{runId:{type:String,required:!0}},data:function(){return{logs:[],limit:10,sortBy:"createdAt",sortDirection:"DESC",loadingLogs:!1,isLoading:!1,disableRouteParams:!0}},computed:{logRepository:function(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel_run_log")},columns:function(){return[{property:"date",dataIndex:"createdAt",label:"swag-paypal-pos.detail.syncedProducts.columns.date",width:"140px",sortable:!0},{property:"state",dataIndex:"level",label:"swag-paypal-pos.detail.syncedProducts.columns.state",width:"120px",sortable:!0},{property:"message",dataIndex:"message",label:"swag-paypal-pos.detail.logs.columnLastSync",sortable:!0}]}},methods:{getListCriteria:function(){var e=this.getMainListingParams(),n=new ra(this.page,this.limit);return n.addFilter(ra.equals("runId",this.runId)),n.addAssociation("posSalesChannelRun"),n.addSorting(ra.sort(e.sortBy,e.sortDirection,e.naturalSorting)),n.addSorting(ra.sort("level","DESC")),n.addSorting(ra.sort("createdAt","DESC")),n},getList:function(){var e=this;return this.loadingLogs=!0,this.logRepository.search(this.getListCriteria(),la.api).then((function(n){e.logs=n,e.total=n.total,e.page=n.criteria.page,e.limit=n.criteria.limit,e.loadingLogs=!1}))},getLabelVariantForItem:function(e){return e.posSalesChannelRun&&"cancelled"===e.posSalesChannelRun.status?"info":this.getLabelVariant(e.level)},getLabelForItem:function(e){return e.posSalesChannelRun&&"cancelled"===e.posSalesChannelRun.status?"swag-paypal-pos.detail.logs.states.aborted":this.getLabel(e.level)}}});var ca=t("szT/"),pa=t.n(ca);t("hgvj");Shopware.Component.register("swag-paypal-pos-getting-started",{template:pa.a});var da=t("hXsm"),ua=t.n(da);t("vcRu");Shopware.Component.register("swag-paypal-pos-continue-setup",{template:ua.a,methods:{onContinueSetup:function(){this.$router.push({name:"swag.paypal.pos.wizard.customization",params:{id:this.$route.params.id}})}}});t("i1vQ");Shopware.Component.override("sw-sales-channel-menu",{computed:{buildMenuTree:function(){var e=this.$super("buildMenuTree"),n=[];return this.salesChannels.forEach((function(e){e.typeId===c&&n.push(e.id)})),e.forEach((function(e){n.includes(e.id)&&(e.path="swag.paypal.pos.detail")})),e}}}),Shopware.Component.override("sw-sales-channel-modal",{methods:{onAddChannel:function(e){if(this.isPayPalPosSalesChannel(e))return this.onCloseModal(),void this.$router.push({name:"swag.paypal.pos.wizard"});this.$super("onAddChannel",e)},isPayPalPosSalesChannel:function(e){return e===c}}});var ga=t("xNo3"),ha=t.n(ga),ya=(t("dChU"),Shopware.Component),_a=Shopware.Data.Criteria;ya.register("swag-paypal-pos",{template:ha.a,inject:["salesChannelService","repositoryFactory"],mixins:["placeholder"],data:function(){return{isLoading:!1,previousApiKey:null,salesChannel:{},lastRun:null,lastCompleteRun:null,cloneSalesChannelId:null,buttonConfig:[]}},metaInfo:function(){return{title:this.title}},computed:{title:function(){return[this.$tc("global.sw-admin-menu.textShopwareAdmin"),this.$tc("sw-sales-channel.general.titleMenuItems"),this.$tc("swag-paypal-pos.general.moduleTitle")].reverse().join(" | ")},paypalPosSalesChannelRepository:function(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel")},salesChannelRepository:function(){return this.repositoryFactory.create("sales_channel")},runRepository:function(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel_run")},salesChannelCriteria:function(){var e=new _a;return e.addAssociation(p),e.addAssociation("countries"),e.addAssociation("currencies"),e.addAssociation("domains"),e.addAssociation("languages"),e}},watch:{"$route.params.id":function(){this.loadSalesChannel()}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.loadSalesChannel()},loadSalesChannel:function(){var e=this;return this.$route.params.id?(this.salesChannel&&(this.salesChannel=null),this.isLoading=!0,this.salesChannelRepository.get(this.$route.params.id,Shopware.Context.api,this.salesChannelCriteria).then((function(n){e.salesChannel=n,e.previousApiKey=n.extensions.paypalPosSalesChannel.apiKey,e.updateRun(),e.isLoading=!1}))):Promise.resolve()},updateCloneSalesChannel:function(e){this.cloneSalesChannelId=e},updateButtons:function(e){this.buttonConfig=e},onButtonClick:function(e){"string"!=typeof e?"function"==typeof e&&e.call():this.redirect(e)},updateRun:function(){return setTimeout(this.updateRun,2e4),this.loadLastRun()},loadLastRun:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=new _a(1,1);return t.addFilter(_a.equals("salesChannelId",this.salesChannel.id)),t.addFilter(_a.not("AND",[_a.equals("status","in_progress")])),t.addSorting(_a.sort("createdAt","DESC")),n?t.addFilter(_a.equals("task","complete")):t.addAssociation("logs"),this.runRepository.search(t,Shopware.Context.api).then((function(t){if(n)return e.lastCompleteRun=t.first(),void e.$forceUpdate();e.lastRun=t.first(),null!==e.lastRun&&"complete"!==e.lastRun.task?e.loadLastRun(!0):e.lastCompleteRun=e.lastRun,e.$forceUpdate()}))}}});var wa=t("UMdY"),ma=t.n(wa);t("gisM");Shopware.Component.register("swag-paypal-pos-detail-synced-products",{template:ma.a,inject:["SwagPayPalPosApiService"],mixins:["swag-paypal-pos-log-label","listing"],props:{salesChannel:{type:Object,required:!0}},data:function(){return{products:[],limit:10,isLoading:!1,actions:[{label:"swag-paypal-pos.detail.syncedProducts.actions.productDetails",callback:this.onProductDetails}],columns:[{property:"name",label:"swag-paypal-pos.detail.syncedProducts.columns.name",sortable:!1},{property:"state",label:"swag-paypal-pos.detail.syncedProducts.columns.state",sortable:!1},{property:"date",label:"swag-paypal-pos.detail.syncedProducts.columns.date",sortable:!1}]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.$emit("buttons-update",[]),this.getList()},getList:function(){var e=this;if(null===this.salesChannel||null===this.salesChannel.id)return Promise.resolve();this.isLoading=!0;var n=this.getMainListingParams();return this.SwagPayPalPosApiService.getProductLog(this.salesChannel.id,n.page,n.limit).then((function(n){e.products=Object.values(n.elements),e.total=n.total,e.isLoading=!1}))},onProductDetails:function(e){this.$router.push({name:"sw.product.detail.base",params:{id:e.id}})},hasSync:function(e){return e.extensions.paypalPosLog.length||e.extensions.paypalPosSync.length},getSyncDate:function(e){return this.hasSync(e)?e.extensions.paypalPosLog[0]?e.extensions.paypalPosLog[0].posSalesChannelRun.updatedAt||e.extensions.paypalPosLog[0].createdAt:e.extensions.paypalPosSync[0].updatedAt||e.extensions.paypalPosSync[0].createdAt:null},getLevel:function(e){return e.extensions.paypalPosLog[0]?e.extensions.paypalPosLog[0].level:200}}});var fa=t("Jc0m"),ba=t.n(fa),va=(t("lu4H"),Shopware.Component),Sa=Shopware.Data.Criteria;va.register("swag-paypal-pos-detail-overview",{template:ba.a,inject:["SwagPayPalPosApiService","salesChannelService","repositoryFactory"],mixins:["placeholder"],props:{salesChannel:{type:Object,required:!1,default:null},lastRun:{type:Object,required:!1,default:null},lastCompleteRun:{type:Object,required:!1,default:null}},data:function(){return{isSyncing:!1,syncErrors:null,syncingRunId:null,statusErrorLevel:null,isLoading:!1}},computed:{runRepository:function(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel_run")}},watch:{"salesChannel.id":function(){this.checkForSync()},lastRun:function(){this.$forceUpdate()}},created:function(){this.createdComponent()},mounted:function(){this.mountedComponent()},methods:{createdComponent:function(){this.checkForSync()},mountedComponent:function(){this.updateButtons()},forceUpdate:function(){this.$forceUpdate()},startSync:function(e){var n=this;this.syncErrors=null,this.isSyncing=!0,this.updateButtons(!0),e(this.salesChannel.id).then((function(e){n.syncingRunId=e.runId,n.updateSync()})).catch((function(e){n.syncErrors=e.response.data.errors,n.$emit("run-update"),n.isSyncing=!1,n.updateButtons()}))},updateSync:function(){var e=this;null!==this.syncingRunId&&this.runRepository.get(this.syncingRunId,Shopware.Context.api).then((function(n){null===n||"in_progress"!==n.status?(e.syncingRunId=null,e.$emit("run-update"),e.isSyncing=!1,e.updateButtons()):setTimeout(e.updateSync,1500)}))},onStartSync:function(){this.startSync(this.SwagPayPalPosApiService.startCompleteSync.bind(this.SwagPayPalPosApiService))},onStartProductSync:function(){this.startSync(this.SwagPayPalPosApiService.startProductSync.bind(this.SwagPayPalPosApiService))},onStartImageSync:function(){this.startSync(this.SwagPayPalPosApiService.startImageSync.bind(this.SwagPayPalPosApiService))},onStartInventorySync:function(){this.startSync(this.SwagPayPalPosApiService.startInventorySync.bind(this.SwagPayPalPosApiService))},onSyncAbort:function(){var e=this;null!==this.syncingRunId&&this.SwagPayPalPosApiService.abortSync(this.syncingRunId).then((function(){e.updateSync()}))},checkForSync:function(){var e=this;if(null!==this.salesChannel&&null!==this.salesChannel.id){var n=new Sa(1,1);n.addFilter(Sa.equals("salesChannelId",this.salesChannel.id)),n.addFilter(Sa.equals("status","in_progress")),n.addSorting(Sa.sort("createdAt","DESC")),this.runRepository.search(n,Shopware.Context.api).then((function(n){null!==n.first()&&(e.isSyncing=!0,e.syncingRunId=n.first().id,e.updateSync())}))}},updateButtons:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],n=[{key:"sync",label:this.$tc("swag-paypal-pos.detail.overview.buttonSync"),variant:"primary",action:this.onStartSync,disabled:!(this.salesChannel&&this.salesChannel.active),isLoading:this.isSyncing}];e&&n.unshift({key:"abortSync",label:this.$tc("swag-paypal-pos.detail.overview.buttonSyncAbort"),action:this.onSyncAbort,disabled:!(this.salesChannel&&this.salesChannel.active)}),this.$emit("buttons-update",n)}}});var ka=t("z8JU"),Ca=t.n(ka);t("cNsE");function Pa(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function xa(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Pa(Object(t),!0).forEach((function(n){Ia(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Pa(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function Ia(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var $a=Shopware,La=$a.Component,Ta=$a.Context,Aa=$a.State,Oa=La.getComponentHelper().mapPropertyErrors,Da=Shopware.Classes.ShopwareError;La.register("swag-paypal-pos-detail-settings",{template:Ca.a,inject:["SwagPayPalPosApiService","SwagPayPalPosSettingApiService","SwagPayPalPosWebhookRegisterService","salesChannelService","repositoryFactory","acl"],mixins:["swag-paypal-pos-catch-error","placeholder","notification"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null}},data:function(){return{isLoading:!1,showDeleteModal:!1,showResetModal:!1,isSaveSuccessful:!1,isTestingCredentials:!1,isTestCredentialsSuccessful:!1,apiKeyUrl:this.SwagPayPalPosSettingApiService.generateApiUrl(),previousApiKey:this.salesChannel.extensions.paypalPosSalesChannel.apiKey}},computed:xa(xa(xa({},Oa("salesChannel",["name"])),Oa("swagPaypalPosSalesChannel",["mediaDomain"])),{},{salesChannelRepository:function(){return this.repositoryFactory.create("sales_channel")},optionSyncPrices:function(){return{name:this.$tc("swag-paypal-pos.wizard.syncPrices.optionTrueLabel"),description:this.$tc("swag-paypal-pos.wizard.syncPrices.optionTrueDescription")}},optionNotSyncPrices:function(){return{name:this.$tc("swag-paypal-pos.wizard.syncPrices.optionFalseLabel"),description:this.$tc("swag-paypal-pos.wizard.syncPrices.optionFalseDescription")}},optionsReplace:function(){return[{value:2,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyDescription")},{value:1,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeDescription")},{value:0,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceNotLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceNotDescription")}]},swagPaypalPosSalesChannel:function(){return this.salesChannel.extensions.paypalPosSalesChannel}}),mounted:function(){this.mountedComponent()},methods:{mountedComponent:function(){this.updateButtons()},forceUpdate:function(){this.$forceUpdate()},onSave:function(){var e=this;return this.isLoading=!0,this.isSaveSuccessful=!1,this.updateButtons(),this.swagPaypalPosSalesChannel.apiKey===this.previousApiKey?this.save():this.SwagPayPalPosSettingApiService.validateApiCredentials(this.swagPaypalPosSalesChannel.apiKey,this.salesChannel.id).then((function(){return e.SwagPayPalPosSettingApiService.fetchInformation(e.salesChannel,!0)})).then(this.save).catch((function(n){throw e.catchAuthenticationError(n),e.isLoading=!1,e.updateButtons(),n}))},save:function(){var e=this;return this.SwagPayPalPosWebhookRegisterService.registerWebhook(this.salesChannel.id).catch(this.catchError.bind(this,"swag-paypal-pos.messageWebhookRegisterError")),this.salesChannelRepository.save(this.salesChannel,Ta.api).then((function(){e.isLoading=!1,e.isSaveSuccessful=!0,e.updateButtons(),e.$emit("load-sales-channel"),e.$root.$emit("sales-channel-change"),null!==e.cloneSalesChannelId&&e.SwagPayPalPosSettingApiService.cloneProductVisibility(e.cloneSalesChannelId,e.salesChannel.id).catch(e.catchError.bind(e,"swag-paypal-pos.messageCloneError"))})).catch((function(){e.isLoading=!1,e.updateButtons(),e.createNotificationError({message:e.$tc("sw-sales-channel.detail.messageSaveError",0,{name:e.salesChannel.name||e.placeholder(e.salesChannel,"name")})})})).finally((function(){if(null===e.swagPaypalPosSalesChannel.mediaDomain){var n="swag_paypal_pos_sales_channel.".concat(e.swagPaypalPosSalesChannel.id,".mediaDomain"),t=new Da({code:"INVALID_URL"});Aa.commit("error/addApiError",{expression:n,error:t})}}))},testCredentials:function(){var e=this,n=this.swagPaypalPosSalesChannel.apiKey;this.isTestingCredentials=!0,this.isTestCredentialsSuccessful=!1,this.SwagPayPalPosSettingApiService.validateApiCredentials(n).then((function(n){var t=n.credentialsValid;e.isTestingCredentials=!1,e.isTestCredentialsSuccessful=t})).catch((function(n){e.catchAuthenticationError(n),e.isTestingCredentials=!1}))},catchAuthenticationError:function(e){this.catchError("swag-paypal-pos.authentication.messageTestError",e),this.isTestingCredentials=!1,this.isTestCredentialsSuccessful=!1},updateButtons:function(){var e=[{key:"save",label:this.$tc("global.default.save"),variant:"primary",action:this.onSave,disabled:!1,isLoading:this.isLoading}];this.$emit("buttons-update",e)},onConfirmDelete:function(){var e=this;this.showDeleteModal=!1,this.$nextTick((function(){e.deleteSalesChannel(e.salesChannel.id),e.$router.push({name:"sw.dashboard.index"})}))},deleteSalesChannel:function(e){var n=this;return this.SwagPayPalPosWebhookRegisterService.unregisterWebhook(e).finally((function(){return n.salesChannelRepository.delete(e,Shopware.Context.api).then((function(){n.$root.$emit("sales-channel-change")}))}))},onConfirmReset:function(){var e=this;this.showResetModal=!1,this.$nextTick((function(){e.SwagPayPalPosApiService.resetSync(e.salesChannel.id).then((function(){e.$router.push({name:"swag.paypal.pos.detail.overview",params:{id:e.salesChannel.id}})}))}))},changeLanguage:function(){var e=this;this.$nextTick((function(){e.salesChannel.languages.length=0,e.salesChannel.languages.push({id:e.salesChannel.languageId}),e.$forceUpdate()}))}}});var Fa=t("Okln"),za=t.n(Fa),Ra=(t("opui"),Shopware),Ea=Ra.Component,Ba=Ra.Context,ja=Shopware.Data.Criteria;Ea.register("swag-paypal-pos-detail-runs",{template:za.a,inject:["SwagPayPalPosApiService","repositoryFactory","acl"],mixins:["swag-paypal-pos-catch-error","notification","listing"],props:{salesChannel:{type:Object,required:!1,default:null}},data:function(){return{runs:[],limit:10,sortBy:"finishedAt",sortDirection:"DESC",isLoading:!1,isCleaningLog:!1,showModal:!1,currentRunId:""}},computed:{runRepository:function(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel_run")},columns:function(){return[{property:"task",dataIndex:"task",label:"swag-paypal-pos.detail.runs.columns.task",sortable:!0},{property:"state",dataIndex:"logs.level",label:"swag-paypal-pos.detail.runs.columns.state",sortable:!0},{property:"date",dataIndex:"finishedAt",label:"swag-paypal-pos.detail.runs.columns.date",sortable:!0}]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.$emit("buttons-update",[])},getListCriteria:function(){var e=new ja(this.page,this.limit);e.addFilter(ja.equals("salesChannelId",this.salesChannel.id)),e.addFilter(ja.not("AND",[ja.equals("status","in_progress")])),e.addAssociation("logs"),e.getAssociation("logs").limit=1,e.getAssociation("logs").addSorting(ja.sort("level","DESC"));var n=this.getMainListingParams();return e.addSorting(ja.sort(n.sortBy,n.sortDirection,n.naturalSorting)),e.addSorting(ja.sort("finishedAt","DESC")),e},getList:function(){var e=this;return null===this.salesChannel||null===this.salesChannel.id?Promise.resolve():(this.isLoading=!0,this.runRepository.search(this.getListCriteria(),Ba.api).then((function(n){e.runs=n,e.total=n.total,e.page=n.criteria.page,e.limit=n.criteria.limit,e.isLoading=!1})))},onShowModal:function(e){this.currentRunId=e,this.showModal=!0},onCloseModal:function(){this.showModal=!1,this.currentRunId=""},onClearLogs:function(){var e=this;return this.isLoading=!0,this.SwagPayPalPosApiService.startLogCleanup(this.salesChannel.id).then((function(){return e.$emit("run-update"),e.getList()})).catch((function(n){e.catchError(null,n),e.getList()}))},getLabelVariant:function(e){return"cancelled"===e.status?"info":"failed"===e.status?"danger":e.logs.length<=0?"success":e.logs[0].level>=400?"danger":e.logs[0].level>=300?"warning":e.logs[0].level>200?"info":"success"},getLabel:function(e){return"cancelled"===e.status?"swag-paypal-pos.detail.runs.states.aborted":"failed"===e.status?"swag-paypal-pos.detail.runs.states.failed":e.logs.length<=0?"swag-paypal-pos.detail.runs.states.successful":e.logs[0].level>200?"swag-paypal-pos.detail.runs.states.withWarnings":"swag-paypal-pos.detail.runs.states.successful"}}});var Na=t("O/Fb"),Va=t.n(Na);t("CA8G");function Ma(e,n,t,a,s,i,o){try{var l=e[i](o),r=l.value}catch(e){return void t(e)}l.done?n(r):Promise.resolve(r).then(a,s)}function qa(e){return function(){var n=this,t=arguments;return new Promise((function(a,s){var i=e.apply(n,t);function o(e){Ma(i,a,s,o,l,"next",e)}function l(e){Ma(i,a,s,o,l,"throw",e)}o(void 0)}))}}var Ua=Shopware,Ha=Ua.Component,Za=Ua.Context,Ga=Shopware.Data.Criteria;Ha.extend("swag-paypal-pos-wizard","sw-first-run-wizard-modal",{template:Va.a,inject:["SwagPayPalPosApiService","SwagPayPalPosSettingApiService","SwagPayPalPosWebhookRegisterService","salesChannelService","repositoryFactory"],mixins:["swag-paypal-pos-catch-error","notification"],data:function(){return{showModal:!0,isLoading:!1,salesChannel:{},cloneSalesChannelId:null,stepperPages:["connection","connectionSuccess","connectionDisconnect","customization","productSelection","syncLibrary","syncPrices","finish"],stepper:{},currentStep:{}}},metaInfo:function(){return{title:this.wizardTitle}},computed:{displayStepperPages:function(){return this.stepperPages.filter((function(e){return"connectionDisconnect"!==e}))},stepInitialItemVariants:function(){for(var e=this.stepperPages.length,n=this.currentStep.navigationIndex,t=[],a=1;a<=e;a+=1)a<n?t.push("success"):a===n?t.push("info"):t.push("disabled");return t},paypalPosSalesChannelRepository:function(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel")},salesChannelRepository:function(){return this.repositoryFactory.create("sales_channel")},salesChannelCriteria:function(){return(new Ga).addAssociation(p).addAssociation("countries").addAssociation("currencies").addAssociation("domains").addAssociation("languages")},wizardTitle:function(){return[this.$tc("global.sw-admin-menu.textShopwareAdmin"),this.$tc("swag-paypal-pos.general.moduleTitle"),this.title].reverse().join(" | ")}},watch:{$route:function(e){var n=e.name.replace("swag.paypal.pos.wizard.","");this.currentStep=this.stepper[n]}},mounted:function(){this.mountedComponent()},methods:{createdComponent:function(){this.generateStepper(),this.$route.params.id?this.loadSalesChannel():this.createNewSalesChannel()},mountedComponent:function(){var e=this.$route.name.replace("swag.paypal.pos.wizard.","");this.currentStep=this.stepper[e]},generateStepper:function(){var e=this,n=1;this.stepper=this.stepperPages.reduce((function(t,a){return"connectionDisconnect"===a&&(n-=1),t[a]={name:"swag.paypal.pos.wizard.".concat(a),variant:"large",navigationIndex:n},1===n&&(e.currentStep=t[a]),n+=1,t}),{})},onCloseModal:function(){this.salesChannel._isNew||!this.$route.params.id&&!this.salesChannel.id?this.routeToDashboard():this.routeToDetailOverview()},onFinishWizard:function(){this.routeToDetailOverview(!0)},routeToDashboard:function(){var e=this;this.showModal=!1,this.$nextTick((function(){e.$router.push({name:"sw.dashboard.index"})}))},routeToDetailOverview:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.showModal=!1,this.save(n).then((function(){n&&e.SwagPayPalPosApiService.startCompleteSync(e.salesChannel.id),e.$router.push({name:"swag.paypal.pos.detail.overview",params:{id:e.salesChannel.id}})}))},save:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return n&&(this.salesChannel.active=!0),this.salesChannelRepository.save(this.salesChannel,Za.api).then(qa(regeneratorRuntime.mark((function n(){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return e.isLoading=!1,e.isSaveSuccessful=!0,e.isNewEntity=!1,e.$root.$emit("sales-channel-change"),n.next=6,e.loadSalesChannel();case 6:e.cloneProductVisibility(),e.registerWebhook(t);case 8:case"end":return n.stop()}}),n)})))).catch((function(){e.isLoading=!1,e.createNotificationError({message:e.$tc("sw-sales-channel.detail.messageSaveError",0,{name:e.salesChannel.name||e.placeholder(e.salesChannel,"name")})})}))},registerWebhook:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],n=this.SwagPayPalPosWebhookRegisterService.registerWebhook(this.salesChannel.id);return e?n:n.catch(this.catchError.bind(this,"swag-paypal-pos.messageWebhookRegisterError"))},cloneProductVisibility:function(){var e=this;null!==this.cloneSalesChannelId&&this.SwagPayPalPosSettingApiService.cloneProductVisibility(this.cloneSalesChannelId,this.salesChannel.id).catch((function(n){n.response.data&&n.response.data.errors&&e.createNotificationError({message:e.$tc("swag-paypal-pos.messageCloneError")})}))},createNewSalesChannel:function(){var e=this;Za.api.languageId!==Za.api.systemLanguageId&&(Za.api.languageId=Za.api.systemLanguageId),this.previousApiKey=null,this.salesChannel=this.salesChannelRepository.create(Za.api),this.salesChannel.typeId=c,this.salesChannel.name=this.$tc("swag-paypal-pos.wizard.salesChannelPrototypeName"),this.salesChannel.active=!1,this.salesChannel.extensions.paypalPosSalesChannel=this.paypalPosSalesChannelRepository.create(Za.api),Object.assign(this.salesChannel.extensions.paypalPosSalesChannel,{mediaDomain:"",apiKey:"",imageDomain:"",productStreamId:null,syncPrices:!0,replace:0}),this.salesChannelService.generateKey().then((function(n){e.salesChannel.accessKey=n.accessKey})).catch((function(){e.createNotificationError({message:e.$tc("sw-sales-channel.detail.messageAPIError")})}))},loadSalesChannel:function(){var e=this,n=this.$route.params.id||this.salesChannel.id;return n?(this.isLoading=!0,this.salesChannelRepository.get(n,Shopware.Context.api,this.salesChannelCriteria).then((function(n){e.salesChannel=n,e.previousApiKey=n.extensions.paypalPosSalesChannel.apiKey,e.isLoading=!1}))):new Promise((function(e){e()}))},updateCloneSalesChannel:function(e){this.cloneSalesChannelId=e},toggleLoading:function(e){this.isLoading=e}}});var Ka=t("ZkYA"),Ya=t.n(Ka);t("BHCF");Shopware.Component.register("swag-paypal-pos-wizard-connection",{template:Ya.a,inject:["SwagPayPalPosSettingApiService"],mixins:["notification","swag-paypal-pos-catch-error"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},isLoading:{type:Boolean,required:!1,default:function(){return!1}}},data:function(){return{isConnecting:!1,apiKeyUrl:this.SwagPayPalPosSettingApiService.generateApiUrl()}},watch:{"salesChannel.extensions.paypalPosSalesChannel.apiKey":function(e){e&&this.updateButtons()}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.updateButtons(),this.setTitle()},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.connection.modalTitle"))},updateButtons:function(){var e=[{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToConnectionSuccess,disabled:this.isLoading||!this.salesChannel.extensions.paypalPosSalesChannel.apiKey}];this.$emit("buttons-update",e)},routeToConnectionSuccess:function(){var e=this;this.toggleLoadingState(!0);var n=this.salesChannel.extensions.paypalPosSalesChannel.apiKey;this.SwagPayPalPosSettingApiService.validateApiCredentials(n).then((function(n){!0===n.credentialsValid&&(e.toggleLoadingState(!1),e.$router.push({name:"swag.paypal.pos.wizard.connectionSuccess"}))})).catch(this.catchError.bind(this,"swag-paypal-pos.authentication.messageTestError")).finally((function(){e.toggleLoadingState(!1)}))},forceUpdate:function(){this.$forceUpdate(),this.updateButtons()},toggleLoadingState:function(e){this.isConnecting=e,this.$emit("toggle-loading",e)}}});var Wa=t("OpH4"),Qa=t.n(Wa),Ja=(t("kTpT"),Shopware),Xa=Ja.Component,es=Ja.Context;Xa.register("swag-paypal-pos-wizard-connection-success",{template:Qa.a,inject:["repositoryFactory","SwagPayPalPosSettingApiService"],mixin:["placeholder"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0}},data:function(){return{posData:null,isFetchingInformation:!0}},computed:{posUser:function(){if(this.isFetchingInformation){var e=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeFirstName"),n=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeLastName"),t=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeMail");return{firstName:e,lastName:n,fullName:"".concat(e," ").concat(n),mail:t}}var a=this.posData.merchantInformation.name.split(" ");return{firstName:a[0],lastName:a[a.length-1],fullName:this.posData.merchantInformation.name,mail:this.posData.merchantInformation.contactEmail}}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this;return this.isFetchingInformation=!0,this.updateButtons(),this.setTitle(),this.SwagPayPalPosSettingApiService.fetchInformation(this.salesChannel,!0).then((function(n){return e.posData=n,null===e.salesChannel.languageId&&(e.salesChannel.languageId=es.api.systemLanguageId,e.salesChannel.languages.push({id:es.api.systemLanguageId})),e.saveSalesChannel(!1,!0)})).finally((function(){e.isFetchingInformation=!1,e.updateButtons()}))},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.connectionSuccess.modalTitle"))},updateButtons:function(){var e=[{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToCustomization,disabled:this.isFetchingInformation}];this.$emit("buttons-update",e)},routeToCustomization:function(){this.$router.push({name:"swag.paypal.pos.wizard.customization",params:{id:this.salesChannel.id}})},onDisconnect:function(){this.$router.push({name:"swag.paypal.pos.wizard.connectionDisconnect",params:{id:this.salesChannel.id}})},forceUpdate:function(){this.$forceUpdate(),this.updateButtons()}}});var ns=t("5z16"),ts=t.n(ns),as=(t("UgKC"),Shopware),ss=as.Component,is=as.Context;ss.register("swag-paypal-pos-wizard-connection-disconnect",{template:ts.a,inject:["repositoryFactory","SwagPayPalPosSettingApiService"],mixin:["placeholder","notification"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0}},data:function(){return{posData:null,isFetchingInformation:!0}},computed:{salesChannelRepository:function(){return this.repositoryFactory.create("sales_channel")},posUser:function(){if(this.isFetchingInformation){var e=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeFirstName"),n=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeLastName"),t=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeMail");return{firstName:e,lastName:n,fullName:"".concat(e," ").concat(n),mail:t}}var a=this.posData.merchantInformation.name.split(" ");return{firstName:a[0],lastName:a[a.length-1],fullName:this.posData.merchantInformation.name,mail:this.posData.merchantInformation.contactEmail}}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this;this.isFetchingInformation=!0,this.updateButtons(),this.setTitle(),this.SwagPayPalPosSettingApiService.fetchInformation(this.salesChannel,!0).then((function(n){e.posData=n})).finally((function(){e.isFetchingInformation=!1,e.updateButtons()}))},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.connectionDisconnect.modalTitle"))},updateButtons:function(){var e=[{key:"cancel",label:this.$tc("global.default.cancel"),position:"right",action:this.routeBackToConnectionSuccess,disabled:!1},{key:"next",label:this.$tc("swag-paypal-pos.wizard.connectionDisconnect.disconnectButton"),position:"right",variant:"danger",action:this.onDisconnect,disabled:this.isFetchingInformation}];this.$emit("buttons-update",e)},routeBackToConnectionSuccess:function(){this.$router.push({name:"swag.paypal.pos.wizard.connectionSuccess",params:{id:this.salesChannel.id}})},onDisconnect:function(){var e=this;this.salesChannelRepository.delete(this.salesChannel.id,is.api).then((function(){e.$root.$emit("sales-channel-change"),e.$emit("recreate-sales-channel"),e.forceUpdate(),e.$router.push({name:"swag.paypal.pos.wizard.connection"})})).catch((function(){e.createNotificationError({message:e.$tc("swag-paypal-pos.wizard.connectionDisconnect.disconnectErrorMessage")})}))},forceUpdate:function(){this.$forceUpdate(),this.updateButtons()}}});var os=t("fn/Y"),ls=t.n(os);t("wQQF");Shopware.Component.register("swag-paypal-pos-wizard-customization",{template:ls.a,props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0},isLoading:{type:Boolean,required:!1,default:function(){return!1}}},watch:{isLoading:function(e){e||this.updateButtons()}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.updateButtons(),this.setTitle(),this.changeLanguage()},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.customization.modalTitle"))},updateButtons:function(){var e=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",action:this.routeBackToConnectionSuccess,disabled:!1},{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToProductSelection,disabled:this.nextButtonDisabled()}];this.$emit("buttons-update",e)},nextButtonDisabled:function(){return this.isLoading||!this.salesChannel.name||!this.salesChannel.languageId||!this.salesChannel.extensions.paypalPosSalesChannel.mediaDomain},routeBackToConnectionSuccess:function(){this.$router.push({name:"swag.paypal.pos.wizard.connectionSuccess",params:{id:this.salesChannel.id}})},routeToProductSelection:function(){this.$router.push({name:"swag.paypal.pos.wizard.productSelection",params:{id:this.salesChannel.id}})},forceUpdate:function(){var e=this;this.$forceUpdate(),this.$nextTick().then((function(){e.updateButtons()}))},changeLanguage:function(){this.salesChannel.languages.length=0,this.salesChannel.languages.push({id:this.salesChannel.languageId}),this.$forceUpdate()},toggleLoadingState:function(e){this.isConnecting=e,this.$emit("toggle-loading",e)}}});var rs=t("rxNa"),cs=t.n(rs),ps=Shopware.Component,ds=Shopware.Data.Criteria;ps.register("swag-paypal-pos-wizard-product-selection",{template:cs.a,props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0}},data:function(){return{manualSalesChannel:!1,hasClone:!1}},computed:{localCloneSalesChannelId:{get:function(){return this.updateButtons(),this.cloneSalesChannelId},set:function(e){this.$emit("update-clone-sales-channel",e)}},salesChannelCriteria:function(){var e=new ds;return e.addFilter(ds.not("and",[ds.equals("id",this.salesChannel.id)])),e}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.updateButtons(),this.setTitle()},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.productSelection.modalTitle"))},updateButtons:function(){var e=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",action:this.routeBackToCustomization,disabled:!1},{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToSyncLibrary,disabled:!1}];this.$emit("buttons-update",e)},routeBackToCustomization:function(){this.$router.push({name:"swag.paypal.pos.wizard.customization",params:{id:this.salesChannel.id}})},routeToSyncLibrary:function(){this.$router.push({name:"swag.paypal.pos.wizard.syncLibrary",params:{id:this.salesChannel.id}})},updateClone:function(){this.$emit("update-clone-sales-channel",null),this.forceUpdate()},forceUpdate:function(){this.$forceUpdate(),this.updateButtons()},toggleLoadingState:function(e){this.isConnecting=e,this.$emit("toggle-loading",e)}}});var us=t("+TPH"),gs=t.n(us);t("3Q6Q");Shopware.Component.register("swag-paypal-pos-wizard-sync-prices",{template:gs.a,props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0}},computed:{optionTrue:function(){return{name:this.$tc("swag-paypal-pos.wizard.syncPrices.optionTrueLabel"),description:this.$tc("swag-paypal-pos.wizard.syncPrices.optionTrueDescription")}},optionFalse:function(){return{name:this.$tc("swag-paypal-pos.wizard.syncPrices.optionFalseLabel"),description:this.$tc("swag-paypal-pos.wizard.syncPrices.optionFalseDescription")}}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.updateButtons(),this.setTitle()},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.syncPrices.modalTitle"))},updateButtons:function(){var e=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",action:this.routeBackToSyncLibrary,disabled:!1},{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToFinish,disabled:!1}];this.$emit("buttons-update",e)},routeBackToSyncLibrary:function(){this.$router.push({name:"swag.paypal.pos.wizard.syncLibrary",params:{id:this.salesChannel.id}})},routeToFinish:function(){this.$router.push({name:"swag.paypal.pos.wizard.finish",params:{id:this.salesChannel.id}})},forceUpdate:function(){this.$forceUpdate()},toggleLoadingState:function(e){this.isConnecting=e,this.$emit("toggle-loading",e)}}});var hs=t("5Ejy"),ys=t.n(hs);t("29Gb");Shopware.Component.register("swag-paypal-pos-wizard-sync-library",{template:ys.a,inject:["SwagPayPalPosSettingApiService"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0}},data:function(){return{shopwareProductsCount:0,posProductsCount:0}},computed:{options:function(){return[{value:2,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyDescription")},{value:1,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeDescription")},{value:0,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceNotLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceNotDescription")}]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.updateButtons(),this.setTitle(),this.fetchProductCounts()},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.syncLibrary.modalTitle"))},updateButtons:function(){var e=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",action:this.routeBackToProductSelection,disabled:!1},{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToSyncPrices,disabled:!1}];this.$emit("buttons-update",e)},routeBackToProductSelection:function(){this.$router.push({name:"swag.paypal.pos.wizard.productSelection",params:{id:this.salesChannel.id}})},routeToSyncPrices:function(){this.$router.push({name:"swag.paypal.pos.wizard.syncPrices",params:{id:this.salesChannel.id}})},forceUpdate:function(){this.$forceUpdate()},toggleLoadingState:function(e){this.isConnecting=e,this.$emit("toggle-loading",e)},fetchProductCounts:function(){var e=this;this.toggleLoadingState(!0),this.SwagPayPalPosSettingApiService.getProductCount(this.salesChannel.id,this.cloneSalesChannelId).then((function(n){e.shopwareProductsCount=n.localCount,e.posProductsCount=n.remoteCount})).finally((function(){e.toggleLoadingState(!1)}))}}});var _s=t("qfpb"),ws=t.n(_s);t("i7Bf");Shopware.Component.register("swag-paypal-pos-wizard-finish",{template:ws.a,inject:["SwagPayPalPosApiService"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.updateButtons(),this.setTitle()},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.finish.modalTitle"))},updateButtons:function(){var e=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",action:this.routeBackToSyncPrices,disabled:!1},{key:"finish",label:this.$tc("sw-first-run-wizard.general.buttonFinish"),position:"right",variant:"primary",action:this.onFinish,disabled:!1}];this.$emit("buttons-update",e)},routeBackToSyncPrices:function(){this.$router.push({name:"swag.paypal.pos.wizard.syncPrices",params:{id:this.salesChannel.id}})},onFinish:function(){this.$emit("frw-finish")}}}),Shopware.Module.register("swag-paypal-pos",{type:"plugin",name:"SwagPayPalPos",title:"swag-paypal.general.mainMenuItemGeneral",description:"swag-paypal.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#9AA8B5",icon:"default-action-settings",routes:{detail:{component:"swag-paypal-pos",path:":id/detail",redirect:{name:"swag.paypal.pos.detail.overview"},meta:{privilege:"sales_channel.viewer"},children:{overview:{component:"swag-paypal-pos-detail-overview",path:"overview",meta:{privilege:"sales_channel.viewer"}},syncedProducts:{component:"swag-paypal-pos-detail-synced-products",path:"synced-products",meta:{privilege:"sales_channel.viewer"}},settings:{component:"swag-paypal-pos-detail-settings",path:"settings",meta:{privilege:"sales_channel.viewer"}},runs:{component:"swag-paypal-pos-detail-runs",path:"runs",meta:{privilege:"sales_channel.viewer"}}}},wizard:{component:"swag-paypal-pos-wizard",path:":id?/wizard",redirect:{name:"swag.paypal.pos.wizard.connection"},meta:{privilege:"sales_channel.creator"},children:{connection:{component:"swag-paypal-pos-wizard-connection",path:"connection",meta:{privilege:"sales_channel.creator"}},connectionSuccess:{component:"swag-paypal-pos-wizard-connection-success",path:"connection-success",meta:{privilege:"sales_channel.creator"}},connectionDisconnect:{component:"swag-paypal-pos-wizard-connection-disconnect",path:"connection-disconnect",meta:{privilege:"sales_channel.creator"}},customization:{component:"swag-paypal-pos-wizard-customization",path:"customization",meta:{privilege:"sales_channel.creator"}},productSelection:{component:"swag-paypal-pos-wizard-product-selection",path:"product-selection",meta:{privilege:"sales_channel.creator"}},syncPrices:{component:"swag-paypal-pos-wizard-sync-prices",path:"sync-prices",meta:{privilege:"sales_channel.creator"}},syncLibrary:{component:"swag-paypal-pos-wizard-sync-library",path:"sync-library",meta:{privilege:"sales_channel.creator"}},finish:{component:"swag-paypal-pos-wizard-finish",path:"finish",meta:{privilege:"sales_channel.creator"}}}}}});t("69c+");var ms=t("Oa8f"),fs=t.n(ms),bs=(t("bssV"),Shopware),vs=bs.Context,Ss=bs.Component,ks=bs.Filter,Cs=bs.Utils,Ps=Shopware.Data.Criteria,xs=Shopware.Utils.string.capitalizeString;Ss.register("swag-paypal-disputes-detail",{template:fs.a,inject:["SwagPayPalDisputeApiService","systemConfigApiService","repositoryFactory"],mixins:["notification"],props:{disputeId:{type:String,required:!0},salesChannelId:{type:String,required:!1,default:null}},data:function(){return{isLoading:!1,dispute:null,resolutionCenterUrl:"https://www.paypal.com/resolutioncenter",orderModuleLink:null}},computed:{orderTransactionRepository:function(){return this.repositoryFactory.create("order_transaction")},orderTransactionCriteria:function(){return new Ps(1,1)},dateFilter:function(){return ks.getByName("date")}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this;this.isLoading=!0,this.systemConfigApiService.getValues("SwagPayPal.settings").then((function(n){n["SwagPayPal.settings.sandbox"]&&(e.resolutionCenterUrl="https://www.sandbox.paypal.com/resolutioncenter"),e.getDetail()}))},getDetail:function(){var e=this;this.SwagPayPalDisputeApiService.detail(this.disputeId,this.salesChannelId).then((function(n){e.dispute=n,e.setLinkToOrderModule(n),e.isLoading=!1})).catch(this.handleError)},handleError:function(e){var n=e.response.data.errors[0].detail;this.createNotificationError({message:"".concat(this.$tc("swag-paypal-disputes.list.errorTitle"),": ").concat(n),autoClose:!1}),this.isLoading=!1},getExternalDetailPageLink:function(){return"".concat(this.resolutionCenterUrl,"/").concat(this.dispute.dispute_id)},setLinkToOrderModule:function(e){var n=this;if(e.disputed_transactions){var t=e.disputed_transactions[0];t&&this.orderTransactionRepository.get(t.custom,vs.api,this.orderTransactionCriteria).then((function(e){null!==e&&(n.orderModuleLink={name:"sw.order.detail.base",params:{id:e.orderId}})}))}},formatTechnicalText:function(e){return xs(e).replace(/_/g," ")},getInquiryClass:function(e){return"INQUIRY"===e?"swag-paypal-disputes-detail__stage-inquiry":"swag-paypal-disputes-detail__stage-other"},getDueDate:function(e,n){return null!==e?"".concat(this.$tc("swag-paypal-disputes.common.response_due_date.seller"),": ").concat(this.formatDate(e)):null!==n?"".concat(this.$tc("swag-paypal-disputes.common.response_due_date.buyer"),": ").concat(this.formatDate(n)):""},copyToClipboard:function(){if(null!==this.dispute)try{Cs.dom.copyToClipboard(JSON.stringify(this.dispute)),this.createNotificationInfo({message:this.$tc("global.sw-field.notification.notificationCopySuccessMessage")})}catch(e){this.createNotificationError({message:this.$tc("global.sw-field.notification.notificationCopyFailureMessage")})}},formatDate:function(e){return this.dateFilter(e,{hour:"2-digit",minute:"2-digit",second:"2-digit"})}}});var Is=t("5Px7"),$s=t.n(Is),Ls="REQUIRED_ACTION",Ts="REQUIRED_OTHER_PARTY_ACTION",As="UNDER_PAYPAL_REVIEW",Os="RESOLVED",Ds="OPEN_INQUIRIES",Fs="APPEALABLE",zs=(t("XVhY"),Shopware),Rs=zs.Component,Es=zs.Filter,Bs=Shopware.Utils.debounce,js=Shopware.Utils.string.capitalizeString;Rs.register("swag-paypal-disputes-list",{template:$s.a,inject:["SwagPayPalDisputeApiService","systemConfigApiService"],mixins:["notification"],data:function(){return{isLoading:!1,disputes:[],disputeStates:[{value:Ls,label:this.formatTechnicalText(Ls)},{value:Ts,label:this.formatTechnicalText(Ts)},{value:As,label:this.formatTechnicalText(As)},{value:Os,label:this.formatTechnicalText(Os)},{value:Ds,label:this.formatTechnicalText(Ds)},{value:Fs,label:this.formatTechnicalText(Fs)}],disputeStateFilter:[],salesChannelId:null,total:0,limit:10,page:1,resolutionCenterUrl:"https://www.paypal.com/resolutioncenter"}},computed:{dateFilter:function(){return Es.getByName("date")},disputesColumns:function(){return[{property:"dispute_id",label:this.$tc("swag-paypal-disputes.common.dispute_id")},{property:"update_time",label:this.$tc("swag-paypal-disputes.common.update_time")},{property:"response_due_date",label:this.$tc("swag-paypal-disputes.common.response_due_date.label")},{property:"status",label:this.$tc("swag-paypal-disputes.common.status")},{property:"dispute_life_cycle_stage",label:this.$tc("swag-paypal-disputes.common.dispute_life_cycle_stage")},{property:"dispute_amount",label:this.$tc("swag-paypal-disputes.common.dispute_amount")}]},visibleDisputes:function(){return this.disputes.slice((this.page-1)*this.limit,(this.page-1)*this.limit+this.limit)}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this;this.isLoading=!0,this.systemConfigApiService.getValues("SwagPayPal.settings").then((function(n){n["SwagPayPal.settings.sandbox"]&&(e.resolutionCenterUrl="https://www.sandbox.paypal.com/resolutioncenter"),e.getList()}))},getList:function(){var e=this;this.isLoading=!0,this.disputes=[];var n=null;this.disputeStateFilter.length>0&&(n=this.disputeStateFilter.join(",")),this.SwagPayPalDisputeApiService.list(this.salesChannelId,n).then((function(n){null!==n.items&&(e.disputes=e.sortDisputes(n.items)),e.total=e.disputes.length,e.isLoading=!1})).catch(this.handleError)},sortDisputes:function(e){return e.sort((function(e,n){return"RESOLVED"===e.status?1:"RESOLVED"===n.status?-1:0})),e},debouncedGetList:Bs((function(){this.getList()}),850),handleError:function(e){var n=e.response.data.errors[0].detail;this.createNotificationError({message:"".concat(this.$tc("swag-paypal-disputes.list.errorTitle"),": ").concat(n),autoClose:!1}),this.isLoading=!1},formatUpdateDate:function(e){return this.formatDate(e,{})},formatUpdateTime:function(e){return this.formatDate(e,{day:void 0,month:void 0,year:void 0,hour:"2-digit",minute:"2-digit",second:"2-digit"})},formatTechnicalText:function(e){return js(e).replace(/_/g," ")},onPageChange:function(e){var n=e.page,t=e.limit;this.page=n,this.limit=t,this.$emit("page-change")},onRefresh:function(){this.getList()},onChangeDisputeStateFilter:function(e){this.disputeStateFilter=e,this.debouncedGetList()},onSalesChannelChanged:function(e){this.salesChannelId=e,this.getList()},getExternalDetailPageLink:function(e){return"".concat(this.resolutionCenterUrl,"/").concat(e.dispute_id)},formatDate:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{hour:"2-digit",minute:"2-digit",second:"2-digit"};return this.dateFilter(e,n)}}}),Shopware.Module.register("swag-paypal-disputes",{type:"plugin",name:"paypal-disputes",title:"swag-paypal-disputes.general.mainMenuItemGeneral",description:"swag-paypal-disputes.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#F88962",icon:"default-communication-speech-bubbles",favicon:"icon-module-customers.png",routes:{index:{component:"swag-paypal-disputes-list",path:"index",meta:{privilege:"swag_paypal_disputes.viewer"}},detail:{component:"swag-paypal-disputes-detail",path:"detail/:disputeId/:salesChannelId?",props:{default:function(e){return{disputeId:e.params.disputeId,salesChannelId:e.params.salesChannelId}}},meta:{privilege:"swag_paypal_disputes.viewer",parentPath:"swag.paypal.disputes.index"}}},navigation:[{id:"swag-paypal-disputes",path:"swag.paypal.disputes.index",label:"swag-paypal-disputes.general.mainMenuItemGeneral",parent:"sw-customer",privilege:"swag_paypal_disputes.viewer"}]})},RgsZ:function(e,n){e.exports='<svg xmlns="http://www.w3.org/2000/svg" width="32" height="40" viewBox="0 0 48 48"><g fill="none" fill-rule="evenodd"><path fill="#013088" d="M1.36196923,45.9634625 C0.525969231,45.9634625 -0.113723077,45.2159 0.0165846154,44.3907125 L6.62843077,2.599775 C6.80104615,1.4978375 7.75381538,0.6878375 8.87073846,0.6878375 L24.7445846,0.6878375 C30.2124308,0.6878375 34.4855077,1.8387125 36.8530462,4.5269 C39.0005846,6.9687125 39.6284308,9.6653375 39.0056615,13.6259 C39.8924308,14.0946875 40.6522769,14.670125 41.2648923,15.3636875 C43.2888923,17.66375 43.6848923,20.934125 42.9199692,24.8508125 C41.0888923,34.2265625 34.8239692,37.4665625 26.8210462,37.4665625 L25.5856615,37.4665625 C24.6075077,37.4665625 23.7748923,38.1753125 23.6225846,39.1405625 L23.5227385,39.6805625 L21.9675077,49.5220625 L21.8862769,49.9405625 C21.7322769,50.9024375 20.9013538,51.6111875 19.9232,51.6111875 L11.6630462,51.6111875 C10.9319692,51.6111875 10.3735077,50.9598125 10.4868923,50.2375625 L11.1620698,45.9634625 L1.36196923,45.9634625 Z"></path><path fill="#019CDE" d="M39.0039692,13.6255625 C38.9565846,13.927625 38.9024308,14.2364375 38.8415077,14.5536875 C36.7481231,25.271 29.5862769,28.973375 20.4393538,28.973375 L15.7821231,28.973375 C14.6635077,28.973375 13.7208923,29.783375 13.5465846,30.883625 L11.1621231,45.963125 L10.4868923,50.2375625 C10.3735077,50.9598125 10.9319692,51.6111875 11.6630462,51.6111875 L19.9232,51.6111875 C20.9013538,51.6111875 21.7322769,50.9024375 21.8862769,49.9405625 L21.9675077,49.5220625 L23.5227385,39.6805625 L23.6225846,39.1405625 C23.7748923,38.1753125 24.6075077,37.4665625 25.5856615,37.4665625 L26.8210462,37.4665625 C34.8239692,37.4665625 41.0888923,34.2265625 42.9199692,24.8508125 C43.6848923,20.934125 43.2888923,17.66375 41.2648923,15.3636875 C40.6522769,14.670125 39.8924308,14.0946875 39.0039692,13.6255625"></path><path fill="#012269" d="M36.8142923,12.7546437 C36.4944462,12.6618312 36.1644462,12.5774562 35.8259846,12.5015187 C35.4858308,12.4272687 35.1372154,12.3614562 34.7784462,12.3040812 C33.5227538,12.1015812 32.1469077,12.0053937 30.6729077,12.0053937 L18.2310615,12.0053937 C17.9247538,12.0053937 17.6336769,12.0745812 17.3730615,12.1994562 C16.7993692,12.4745187 16.3729077,13.0162062 16.2696769,13.6793937 L13.6229077,30.3957687 L13.5467538,30.8834562 C13.7210615,29.7832062 14.6636769,28.9732062 15.7822923,28.9732062 L20.4395231,28.9732062 C29.5864462,28.9732062 36.7482923,25.2691437 38.8416769,14.5535187 C38.9042923,14.2362687 38.9567538,13.9274562 39.0041385,13.6253937 C38.4744462,13.3452687 37.9007538,13.1056437 37.2830615,12.9014562 C37.1307538,12.8508312 36.9733692,12.8018937 36.8142923,12.7546437"></path></g></svg>'},Rq5H:function(e,n){e.exports='{% block swag_paypal_payment_action_refund %}\n    <sw-modal variant="small"\n              :title="$tc(`swag-paypal-payment.modal.title.refund`)"\n              @modal-close="$emit(\'modal-close\')">\n\n        {% block swag_paypal_payment_action_refund_invoice_select %}\n            <sw-select-field v-model="selectedCaptureId"\n                             :label="$tc(\'swag-paypal-payment.refundAction.invoiceSelect.label\')"\n                             @change="preserveCapture">\n                <option v-for="capture in captures"\n                        :value="capture.id">\n                    {{ capture.label }}\n                </option>\n            </sw-select-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_invoice_number %}\n            <swag-paypal-text-field v-model="refundInvoiceNumber"\n                                    maxLength="127"\n                                    :label="$tc(\'swag-paypal-payment.refundAction.refundInvoiceNumber.label\')"\n                                    :placeholder="$tc(\'swag-paypal-payment.refundAction.refundInvoiceNumber.placeholder\')">\n            </swag-paypal-text-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_reason %}\n            <swag-paypal-text-field v-model="refundReason"\n                                    maxLength="30"\n                                    :label="$tc(\'swag-paypal-payment.refundAction.refundReason.label\')"\n                                    :placeholder="$tc(\'swag-paypal-payment.refundAction.refundReason.placeholder\')">\n            </swag-paypal-text-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_amount %}\n            <sw-number-field v-model="refundAmount"\n                             :max="refundableAmount"\n                             :min="0"\n                             :label="$tc(\'swag-paypal-payment.refundAction.refundAmount.label\')"\n                             :helpText="$tc(\'swag-paypal-payment.refundAction.refundAmount.helpText\')">\n                <template #suffix>\n                    {{ selectedCapture.currency }}\n                </template>\n            </sw-number-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_description %}\n            <sw-textarea-field v-model="refundDescription"\n                               :placeholder="$tc(\'swag-paypal-payment.refundAction.refundDescription.placeholder\')"\n                               :label="$tc(\'swag-paypal-payment.refundAction.refundDescription.label\')">\n            </sw-textarea-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_confirm_button %}\n            <template #modal-footer>\n                <sw-button variant="primary"\n                           @click="refund">\n                    {{ $tc(\'swag-paypal-payment.refundAction.confirmButton.text\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        <sw-loader v-if="isLoading"></sw-loader>\n    </sw-modal>\n{% endblock %}\n'},RvrK:function(e,n,t){},SIsd:function(e,n,t){},SZ7m:function(e,n,t){"use strict";function a(e,n){for(var t=[],a={},s=0;s<n.length;s++){var i=n[s],o=i[0],l={id:e+":"+s,css:i[1],media:i[2],sourceMap:i[3]};a[o]?a[o].parts.push(l):t.push(a[o]={id:o,parts:[l]})}return t}t.r(n),t.d(n,"default",(function(){return h}));var s="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!s)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var i={},o=s&&(document.head||document.getElementsByTagName("head")[0]),l=null,r=0,c=!1,p=function(){},d=null,u="data-vue-ssr-id",g="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function h(e,n,t,s){c=t,d=s||{};var o=a(e,n);return y(o),function(n){for(var t=[],s=0;s<o.length;s++){var l=o[s];(r=i[l.id]).refs--,t.push(r)}n?y(o=a(e,n)):o=[];for(s=0;s<t.length;s++){var r;if(0===(r=t[s]).refs){for(var c=0;c<r.parts.length;c++)r.parts[c]();delete i[r.id]}}}}function y(e){for(var n=0;n<e.length;n++){var t=e[n],a=i[t.id];if(a){a.refs++;for(var s=0;s<a.parts.length;s++)a.parts[s](t.parts[s]);for(;s<t.parts.length;s++)a.parts.push(w(t.parts[s]));a.parts.length>t.parts.length&&(a.parts.length=t.parts.length)}else{var o=[];for(s=0;s<t.parts.length;s++)o.push(w(t.parts[s]));i[t.id]={id:t.id,refs:1,parts:o}}}}function _(){var e=document.createElement("style");return e.type="text/css",o.appendChild(e),e}function w(e){var n,t,a=document.querySelector("style["+u+'~="'+e.id+'"]');if(a){if(c)return p;a.parentNode.removeChild(a)}if(g){var s=r++;a=l||(l=_()),n=b.bind(null,a,s,!1),t=b.bind(null,a,s,!0)}else a=_(),n=v.bind(null,a),t=function(){a.parentNode.removeChild(a)};return n(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;n(e=a)}else t()}}var m,f=(m=[],function(e,n){return m[e]=n,m.filter(Boolean).join("\n")});function b(e,n,t,a){var s=t?"":a.css;if(e.styleSheet)e.styleSheet.cssText=f(n,s);else{var i=document.createTextNode(s),o=e.childNodes;o[n]&&e.removeChild(o[n]),o.length?e.insertBefore(i,o[n]):e.appendChild(i)}}function v(e,n){var t=n.css,a=n.media,s=n.sourceMap;if(a&&e.setAttribute("media",a),d.ssrId&&e.setAttribute(u,n.id),s&&(t+="\n/*# sourceURL="+s.sources[0]+" */",t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */"),e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},UMdY:function(e,n){e.exports='{% block swag_paypal_pos_synced_products %}\n    <div class="swag-paypal-pos-detail-synced-products">\n\n        {% block swag_paypal_pos_synced_products_grid %}\n            <sw-card :title="$tc(\'swag-paypal-pos.detail.syncedProducts.title\')"\n                     :isLoading="isLoading">\n\n                {% block swag_paypal_pos_synced_products_grid %}\n                    <template #grid>\n                        <sw-data-grid v-if="total > 0"\n                                      identifier="swag-paypal-pos-detail-synced-products"\n                                      :dataSource="products"\n                                      :columns="columns"\n                                      :isLoading="isLoading"\n                                      :showActions="actions.length > 0"\n                                      :showSelection="false"\n                                      :showSettings="true"\n                                      :allowColumnEdit="true"\n                                      :sortBy="sortBy"\n                                      :sortDirection="sortDirection"\n                                      :skeletonItemAmount="limit"\n                                      @column-sort="onSortColumn">\n\n                            {% block swag_paypal_pos_synced_products_grid_pagination %}\n                                <template #pagination>\n                                    <sw-pagination :limit="limit"\n                                                   :page="page"\n                                                   :total="total"\n                                                   :total-visible="7"\n                                                   @page-change="onPageChange">\n                                    </sw-pagination>\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_synced_products_grid_column_date %}\n                                <template #column-date="{ item }">\n\n                                    {% block swag_paypal_pos_synced_products_grid_column_date_formatted %}\n                                        <template v-if="hasSync(item)">\n                                            {{ getSyncDate(item) | date({\n                                                hour: \'2-digit\',\n                                                minute: \'2-digit\',\n                                                day: \'2-digit\',\n                                                month: \'2-digit\',\n                                                year: \'2-digit\'\n                                            })\n                                            }}\n                                        </template>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_synced_products_grid_column_date_empty %}\n                                        <template v-else>\n                                            {{ $tc(\'swag-paypal-pos.detail.syncedProducts.notSyncedYet\') }}\n                                        </template>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_synced_products_grid_column_state %}\n                                <template #column-state="{ item }">\n\n                                    {% block swag_paypal_pos_synced_products_grid_column_state_label_log %}\n                                        <template v-if="hasSync(item)">\n                                            <sw-label appearance="pill"\n                                                      :variant="getLabelVariant(getLevel(item))">\n                                                {{ $tc(getLabel(getLevel(item))) }}\n                                            </sw-label>\n                                        </template>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_synced_products_grid_actions %}\n                                <template v-if="actions"\n                                          #actions="{ item }">\n                                    <sw-context-menu-item v-for="action in actions"\n                                                          :key="action.label"\n                                                          @click="action.callback(item)">\n                                        {{ $tc(action.label) }}\n                                    </sw-context-menu-item>\n                                </template>\n                            {% endblock %}\n\n                        </sw-data-grid>\n                    </template>\n                {% endblock %}\n\n                {% block swag_paypal_pos_synced_products_empty_state %}\n                    <sw-empty-state v-if="total < 1"\n                                    class="swag-paypal-pos-detail-synced-products__empty-state"\n                                    :title="$tc(\'swag-paypal-pos.detail.syncedProducts.emptyState.title\')"\n                                    :subline="$tc(\'swag-paypal-pos.detail.syncedProducts.emptyState.message\')">\n                    </sw-empty-state>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},Uf5m:function(e,n){e.exports='{% block swag_paypal_pos_detail_logs %}\n    {% block swag_paypal_pos_detail_logs_grid %}\n        <sw-data-grid identifier="swag-paypal-pos-detail-logs"\n                      :columns="columns"\n                      :dataSource="logs"\n                      :isLoading="isLoading || loadingLogs"\n                      :showActions="true"\n                      :showSelection="false"\n                      :showSettings="true"\n                      :allowColumnEdit="true"\n                      :sortBy="sortBy"\n                      :sortDirection="sortDirection"\n                      :skeletonItemAmount="limit"\n                      @column-sort="onSortColumn">\n\n            {% block swag_paypal_pos_detail_logs_grid_pagination %}\n                <template #pagination>\n                    <sw-pagination :limit="limit"\n                                   :page="page"\n                                   :total="total"\n                                   :total-visible="7"\n                                   @page-change="onPageChange">\n                    </sw-pagination>\n                </template>\n            {% endblock %}\n\n            {% block swag_paypal_pos_detail_logs_grid_column_date %}\n                <template #column-date="{ item }">\n\n                    {% block swag_paypal_pos_detail_logs_grid_column_date_formatted %}\n                        <template v-if="item.createdAt">\n                            {{ item.createdAt | date({\n                                hour: \'2-digit\',\n                                minute: \'2-digit\',\n                                day: \'2-digit\',\n                                month: \'2-digit\',\n                                year: \'2-digit\'\n                            })\n                            }}\n                        </template>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_detail_logs_grid_column_date_empty %}\n                        <template v-else>\n                            {{ $tc(\'swag-paypal-pos.detail.logs.noEntry\') }}\n                        </template>\n                    {% endblock %}\n\n                </template>\n            {% endblock %}\n\n            {% block swag_paypal_pos_detail_logs_grid_column_state %}\n                <template #column-state="{ item }">\n\n                    {% block swag_paypal_pos_detail_logs_grid_column_state_label %}\n                        <sw-label v-if="item.level"\n                                  appearance="pill"\n                                  :variant="getLabelVariantForItem(item)">\n                            {{ $tc(getLabelForItem(item)) }}\n                        </sw-label>\n                    {% endblock %}\n\n                </template>\n            {% endblock %}\n\n        </sw-data-grid>\n    {% endblock %}\n{% endblock %}\n'},UgKC:function(e,n,t){var a=t("IAVK");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("75494263",a,!0,{})},VVuM:function(e,n){function t(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function a(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?t(Object(a),!0).forEach((function(n){s(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var i=Shopware.Mixin,o=Shopware.Utils.debug;i.register("swag-paypal-credentials-loader",{inject:["SwagPayPalApiCredentialsService"],data:function(){return{isGetCredentialsSuccessful:!1,nonceLive:"".concat(Shopware.Utils.createId()).concat(Shopware.Utils.createId()),nonceSandbox:"".concat(Shopware.Utils.createId()).concat(Shopware.Utils.createId()),payPalPartnerIdLive:"DYKPBPEAW5JNA",payPalPartnerClientIdLive:"AR1aQ13lHxH1c6b3CDd8wSY6SWad2Lt5fv5WkNIZg-qChBoGNfHr2kT180otUmvE_xXtwkgahXUBBurW",payPalPartnerIdSandbox:"45KXQA7PULGAG",payPalPartnerClientIdSandbox:"AQ9g8qMYHpE8s028VCq_GO3Roy9pjeqGDjKTkR_sxzX0FtncBb3QUWbFtoQMtdpe2lG9NpnDT419dK8s",requestParams:{channelId:"partner",productIntentId:"addipmt",integrationType:"FO",features:["PAYMENT","REFUND","READ_SELLER_DISPUTE","UPDATE_SELLER_DISPUTE","ADVANCED_TRANSACTIONS_SEARCH"],displayMode:"minibrowser"}}},computed:{onboardingUrlLive:function(){var e=this.createRequestParameter({partnerId:this.payPalPartnerIdLive,partnerClientId:this.payPalPartnerClientIdLive,returnToPartnerUrl:this.returnUrl(),sellerNonce:this.nonceLive});return"https://www.paypal.com/US/merchantsignup/partner/onboardingentry?".concat(e.toString())},onboardingUrlSandbox:function(){var e=this.createRequestParameter({partnerId:this.payPalPartnerIdSandbox,partnerClientId:this.payPalPartnerClientIdSandbox,returnToPartnerUrl:this.returnUrl(),sellerNonce:this.nonceSandbox});return"https://www.sandbox.paypal.com/US/merchantsignup/partner/onboardingentry?".concat(e.toString())}},created:function(){this.$root.$on("paypal-onboarding-finish",this.getPayPalCredentials),window.onboardingCallbackLive=function(e,n){Shopware.Application.getApplicationRoot().$emit("paypal-onboarding-finish",{authCode:e,sharedId:n,sandbox:!1})},window.onboardingCallbackSandbox=function(e,n){Shopware.Application.getApplicationRoot().$emit("paypal-onboarding-finish",{authCode:e,sharedId:n,sandbox:!0})}},mounted:function(){this.createScript()},destroyed:function(){this.$root.$off("paypal-onboarding-finish")},methods:{returnUrl:function(){return"".concat(window.location.origin).concat(window.location.pathname,"#").concat(this.$route.path)},createRequestParameter:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=a(a({},this.requestParams),e);return Object.keys(n).reduce((function(e,t){var a=n[t];return Array.isArray(a)&&(a=a.join(",")),e.append(t,a),e}),new URLSearchParams)},createScript:function(){var e="paypal-js";if(document.getElementById(e))window.PAYPAL&&this.renderPayPalButton();else{var n=document.createElement("script");n.id=e,n.type="text/javascript",n.src="https://www.paypal.com/webapps/merchantboarding/js/lib/lightbox/partner.js",n.async=!0,n.addEventListener("load",this.renderPayPalButton.bind(this),!1),document.head.appendChild(n)}},renderPayPalButton:function(){window.PAYPAL.apps.Signup.render=function(){window.PAYPAL.apps.Signup.timeout&&clearTimeout(window.PAYPAL.apps.Signup.timeout),window.PAYPAL.apps.Signup.timeout=setTimeout(window.PAYPAL.apps.Signup.render,300)},window.PAYPAL.apps.Signup.render()},getPayPalCredentials:function(e){var n=this,t=e.authCode,a=e.sharedId,s=e.sandbox;return this.isLoading?Promise.resolve(!1):(this.isGetCredentialsSuccessful=null,this.isLoading=!0,this.SwagPayPalApiCredentialsService.getApiCredentials(t,a,s?this.nonceSandbox:this.nonceLive,s).then((function(e){n.isGetCredentialsSuccessful=!0,n.onPayPalCredentialsLoadSuccess(e.client_id,e.client_secret,s)})).catch((function(){n.isGetCredentialsSuccessful=!1,n.onPayPalCredentialsLoadFailed(s)})).finally((function(){n.isLoading=!1})))},onPayPalCredentialsLoadSuccess:function(){o.warn("swag-paypal-credentials-loader Mixin",'When using the paypal-credentials-loader mixin you have to implement your custom "onPayPalCredentialsLoadSuccess()" method.')},onPayPalCredentialsLoadFailed:function(){o.warn("swag-paypal-credentials-loader Mixin",'When using the paypal-credentials-loader mixin you have to implement your custom "onPayPalCredentialsLoadFailed()" method.')}}})},XAce:function(e,n,t){},XVhY:function(e,n,t){var a=t("wHR4");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("2f062267",a,!0,{})},Xbnc:function(e,n,t){var a=t("J+UQ");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("2f024946",a,!0,{})},ZCGt:function(e,n,t){},ZDLx:function(e,n,t){},ZLee:function(e){e.exports=JSON.parse('{"swag-paypal-frw-credentials":{"buttonGetCredentials":"Hole API Zugangsdaten","textIntroPayPal":"Um PayPal zu nutzen müssen nur die API Zugangsdaten eingegeben werden.","labelClientId":"Client-ID","labelClientSecret":"Client-Secret","labelClientIdSandbox":"Sandbox-Client-ID","labelClientSecretSandbox":"Sandbox-Client-Secret","labelSandbox":"Sandbox verwenden","tooltipSandbox":"Je nach Aktivierung der Sandbox werden unterschiedliche Zugangsdaten hinterlegt.","labelSetDefault":"Als Standard-Zahlungsmethode festlegen","tooltipSetDefault":"PayPal wird als Standard-Zahlungsmethode für alle Verkaufskanäle festgelegt. Sie können individuelle Standard-Zahlungsmethoden pro Verkaufskanal im Einstellungsmodul festlegen.","messageFetchedError":" Bitte versuche es erneut oder nutze die erweiterten Einstellungen um die Zugangsdaten direkt einzugeben.","textFetchedSuccessful":"Die Zugangsdaten wurden erfolgreich abgerufen.","messageNoCredentials":"Es wurden keine Zugangsdaten hinterlegt.","messageTestSuccess":"Die Zugangsdaten sind gültig."}}')},ZdqX:function(e,n){e.exports='{% block swag_paypal_content_card_channel_config_spb %}\n    <sw-card :title="$tc(\'swag-paypal.settingForm.spb.cardTitle\')">\n\n        {% block swag_paypal_content_card_channel_config_spb_settings %}\n            <div v-if="actualConfigData" class="swag-paypal-settings-spb-fields">\n\n                {% block swag_paypal_content_card_channel_config_spb_settings_checkout_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.spbCheckoutEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.spbCheckoutEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.spbCheckoutEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.spb.spbCheckoutEnabled.label\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_spb_settings_alternaitve_payment_methods_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.spbAlternativePaymentMethodsEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.spbAlternativePaymentMethodsEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.spbAlternativePaymentMethodsEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.spb.spbAlternativePaymentMethodsEnabled.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.spb.spbAlternativePaymentMethodsEnabled.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_spb_settings_show_pay_later %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.spbShowPayLater\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.spbShowPayLater\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.spbShowPayLater"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.spb.spbShowPayLater.label\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_spb_settings_button_color %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.spbButtonColor\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.spbButtonColor\']"\n                        :customInheritationCheckFunction="checkTextFieldInheritance"\n                        :label="$tc(\'swag-paypal.settingForm.express.ecsButtonColor.label\')">\n                        <template #content="props">\n                            <sw-single-select name="SwagPayPal.settings.spbButtonColor"\n                                              labelProperty="name"\n                                              valueProperty="id"\n                                              :options="buttonColorOptions"\n                                              :isInherited="props.isInherited"\n                                              :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                              :value="props.currentValue"\n                                              @change="props.updateCurrentValue">\n                            </sw-single-select>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_spb_settings_button_shape %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.spbButtonShape\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.spbButtonShape\']"\n                        :customInheritationCheckFunction="checkTextFieldInheritance"\n                        :label="$tc(\'swag-paypal.settingForm.express.ecsButtonShape.label\')">\n                        <template #content="props">\n                            <sw-single-select name="SwagPayPal.settings.spbButtonShape"\n                                              labelProperty="name"\n                                              valueProperty="id"\n                                              :options="buttonShapeOptions"\n                                              :isInherited="props.isInherited"\n                                              :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                              :value="props.currentValue"\n                                              @change="props.updateCurrentValue">\n                            </sw-single-select>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_spb_settings_locale %}\n                    <sw-inherit-wrapper\n                            v-model="actualConfigData[\'SwagPayPal.settings.spbButtonLanguageIso\']"\n                            :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.spbButtonLanguageIso\']"\n                            :customInheritationCheckFunction="checkTextFieldInheritance">\n                        <template #content="props">\n                            <swag-paypal-locale-field name="SwagPayPal.settings.spbButtonLanguageIso"\n                                                    :mapInheritance="props"\n                                                    :label="$tc(\'swag-paypal.settingForm.spb.spbButtonLanguageIso.label\')"\n                                                    :helpText="$tc(\'swag-paypal.settingForm.spb.spbButtonLanguageIso.helpText\')"\n                                                    :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                    :value="props.currentValue"\n                                                    @change="props.updateCurrentValue"\n                                                    @preventSave="preventSave">\n                            </swag-paypal-locale-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n'},ZkYA:function(e,n){e.exports='{% block swag_paypal_pos_wizard_connection %}\n    <div class="swag-paypal-pos-wizard-connection">\n\n        {% block swag_paypal_pos_wizard_connection_headline %}\n            <div class="swag-paypal-pos-wizard-connection__headline">\n                {{ $tc(\'swag-paypal-pos.wizard.connection.headerConnect\') }}\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_connection_apikey %}\n            <sw-password-field\n                    v-model="salesChannel.extensions.paypalPosSalesChannel.apiKey"\n                    class="swag-paypal-pos-wizard-connection__apikey-field"\n                    required\n                    :label="$tc(\'swag-paypal-pos.authentication.labelApiKey\')"\n                    :placeholder="$tc(\'swag-paypal-pos.authentication.placeholderApiKey\')"\n                    @input="forceUpdate">\n                <template #suffix>\n\n                    {% block swag_paypal_pos_wizard_connection_apikey_suffix %}\n                        <sw-icon name="default-lock-key"\n                                 class="swag-paypal-pos-wizard-connection__apikey-suffix"\n                                 size="22px">\n                        </sw-icon>\n                    {% endblock %}\n                </template>\n            </sw-password-field>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_connection_apikey_description %}\n            <div class="swag-paypal-pos-wizard-connection__apikey-description">\n\n                {% block swag_paypal_pos_wizard_connection_apikey_description_text %}\n                    <div class="swag-paypal-pos-wizard-connection__apikey-description-text">\n                        {{ $tc(\'swag-paypal-pos.authentication.apiKeyDescription\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_apikey_description_link %}\n                    <sw-external-link :href="apiKeyUrl"\n                                      class="swag-paypal-pos-wizard-connection__apikey-description-link">\n\n                        {% block swag_paypal_pos_wizard_connection_apikey_description_link_text %}\n                            {{ $tc(\'swag-paypal-pos.authentication.buttonGenerateKey\') }}\n                        {% endblock %}\n                    </sw-external-link>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_connection_header_new_customer %}\n            <div class="swag-paypal-pos-wizard-connection__new-customer-headline">\n                {{ $tc(\'swag-paypal-pos.wizard.connection.headerNewCustomer\') }}\n            </div>\n        {% endblock %}\n\n\n        {% block swag_paypal_pos_wizard_connection_new_customer %}\n            <sw-card :isLoading="isConnecting">\n                <sw-container\n                        class="swag-paypal-pos-wizard-connection__new-customer-container"\n                        columns="1fr 1fr"\n                        align="center"\n                        gap="300px">\n\n                    {% block swag_paypal_pos_wizard_connection_new_customer_image %}\n                        <img class="swag-paypal-pos-wizard-connection__pos-logo"\n                             :src="\'swagpaypal/static/img/paypal-pos-logo-full.png\' | asset"\n                             alt="Zettle logo">\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_wizard_connection_new_customer_button %}\n                        <sw-button class="swag-paypal-pos-wizard-connection__pos-link"\n                                   variant="ghost"\n                                   size="small"\n                                   :link="$tc(\'swag-paypal-pos.wizard.connection.buttonCreateAccountLink\')">\n\n                            {% block swag_paypal_pos_wizard_connection_new_customer_button_text %}\n                                <span class="swag-paypal-pos-wizard-connection__pos-link-text">\n                                    {{ $tc(\'swag-paypal-pos.wizard.connection.buttonCreateAccount\') }}\n                                </span>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_wizard_connection_new_customer_button_icon %}\n                                <sw-icon name="default-action-external"\n                                         class="swag-paypal-pos-wizard-connection__pos-link-icon"\n                                         size="10px">\n                                </sw-icon>\n                            {% endblock %}\n                        </sw-button>\n                    {% endblock %}\n                </sw-container>\n            </sw-card>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},Zp9c:function(e,n,t){},ap0o:function(e,n,t){var a=t("iFLj");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("6e832c0c",a,!0,{})},atmP:function(e,n){e.exports='{% block swag_paypal_payment_action_refund_v2 %}\n    <sw-modal variant="small"\n              :title="$tc(`swag-paypal-payment.modal.title.refund`)"\n              @modal-close="$emit(\'modal-close\')">\n\n        {% block swag_paypal_payment_action_refund_v2_capture_select %}\n            <sw-select-field\n                    v-model="selectedCaptureId"\n                    :label="$tc(\'swag-paypal-payment.refundAction.invoiceSelect.label\')"\n                    @change="setCapture">\n                <option v-for="capture in captures"\n                        :value="capture.id">\n                    {{ dateFilter(capture.create_time) }} ({{ capture.amount.value }} {{ capture.amount.currency_code }}) - {{ capture.id }} [{{ capture.status }}]\n                </option>\n            </sw-select-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_v2_invoice_number %}\n            <swag-paypal-text-field\n                    v-model="refundInvoiceNumber"\n                    maxLength="127"\n                    :label="$tc(\'swag-paypal-payment.refundAction.refundInvoiceNumber.label\')"\n                    :placeholder="$tc(\'swag-paypal-payment.refundAction.refundInvoiceNumber.placeholder\')">\n            </swag-paypal-text-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_v2_amount %}\n            <sw-number-field\n                    v-model="refundAmount"\n                    :max="Number(selectedCapture.amount.value)"\n                    :min="0"\n                    :label="$tc(\'swag-paypal-payment.refundAction.refundAmount.label\')"\n                    :helpText="$tc(\'swag-paypal-payment.refundAction.refundAmount.helpText\')">\n                <template #suffix>\n                    {{ selectedCapture.amount.currency_code }}\n                </template>\n            </sw-number-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_v2_note_to_payer %}\n            <swag-paypal-textarea-field\n                    v-model="refundNoteToPayer"\n                    maxLength="255"\n                    :placeholder="$tc(\'swag-paypal-payment.refundAction.refundNoteToPayer.placeholder\')"\n                    :label="$tc(\'swag-paypal-payment.refundAction.refundNoteToPayer.label\')">\n            </swag-paypal-textarea-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_v2_confirm_button %}\n            <template #modal-footer>\n                <sw-button variant="primary"\n                           @click="refund">\n                    {{ $tc(\'swag-paypal-payment.refundAction.confirmButton.text\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        <sw-loader v-if="isLoading"></sw-loader>\n    </sw-modal>\n{% endblock %}\n'},auMI:function(e,n,t){var a=t("ZCGt");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("386c327c",a,!0,{})},bssV:function(e,n,t){var a=t("RvrK");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("5297e334",a,!0,{})},c09w:function(e,n){e.exports='{% block swag_paypal_content_card_channel_config_express %}\n    <sw-card :title="$tc(\'swag-paypal.settingForm.express.cardTitle\')">\n\n        {% block swag_paypal_content_card_channel_config_express_settings %}\n            <div v-if="actualConfigData" class="swag-paypal-settings-express-fields">\n\n                {% block swag_paypal_content_card_channel_config_express_settings_detail_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsDetailEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsDetailEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.ecsDetailEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.express.ecsDetailEnabled.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.express.ecsDetailEnabled.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_express_settings_cart_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsCartEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsCartEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.ecsCartEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.express.ecsCartEnabled.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.express.ecsCartEnabled.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_express_settings_off_canvas_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsOffCanvasEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsOffCanvasEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.ecsOffCanvasEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.express.ecsOffCanvasEnabled.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.express.ecsOffCanvasEnabled.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n\n                {% block swag_paypal_content_card_channel_config_express_settings_login_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsLoginEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsLoginEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.ecsLoginEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.express.ecsLoginEnabled.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.express.ecsLoginEnabled.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_express_settings_listing_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsListingEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsListingEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.ecsListingEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.express.ecsListingEnabled.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.express.ecsListingEnabled.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_express_settings_button_color %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsButtonColor\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsButtonColor\']"\n                        :customInheritationCheckFunction="checkTextFieldInheritance"\n                        :label="$tc(\'swag-paypal.settingForm.express.ecsButtonColor.label\')">\n                        <template #content="props">\n                            <sw-single-select name="SwagPayPal.settings.ecsButtonColor"\n                                              labelProperty="name"\n                                              valueProperty="id"\n                                              :options="buttonColorOptions"\n                                              :isInherited="props.isInherited"\n                                              :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                              :value="props.currentValue"\n                                              @change="props.updateCurrentValue">\n                            </sw-single-select>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_express_settings_button_shape %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsButtonShape\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsButtonShape\']"\n                        :customInheritationCheckFunction="checkTextFieldInheritance"\n                        :label="$tc(\'swag-paypal.settingForm.express.ecsButtonShape.label\')">\n                        <template #content="props">\n                            <sw-single-select name="SwagPayPal.settings.ecsButtonShape"\n                                              labelProperty="name"\n                                              valueProperty="id"\n                                              :options="buttonShapeOptions"\n                                              :isInherited="props.isInherited"\n                                              :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                              :value="props.currentValue"\n                                              @change="props.updateCurrentValue">\n                            </sw-single-select>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_express_settings_submit_cart %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsSubmitCart\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsSubmitCart\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.ecsSubmitCart"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.express.ecsSubmitCart.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.express.ecsSubmitCart.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_express_settings_button_locale %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsButtonLanguageIso\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsButtonLanguageIso\']"\n                        :customInheritationCheckFunction="checkTextFieldInheritance">\n                        <template #content="props">\n                            <swag-paypal-locale-field name="SwagPayPal.settings.ecsButtonLanguageIso"\n                                                    :mapInheritance="props"\n                                                    :label="$tc(\'swag-paypal.settingForm.express.ecsButtonLanguageIso.label\')"\n                                                    :helpText="$tc(\'swag-paypal.settingForm.express.ecsButtonLanguageIso.helpText\')"\n                                                    :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                    :value="props.currentValue"\n                                                    @change="props.updateCurrentValue"\n                                                    @preventSave="preventSave">\n                            </swag-paypal-locale-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n'},cNsE:function(e,n,t){var a=t("rpql");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("5d079006",a,!0,{})},dChU:function(e,n,t){var a=t("XAce");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("137d5788",a,!0,{})},eCdE:function(e,n,t){var a=t("FEwq");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("0edd2f52",a,!0,{})},ep0E:function(e,n){e.exports='{% block swag_paypal_content_card_channel_config_credentials %}\n    <sw-card class="sw-card--grid"\n             :title="$tc(\'swag-paypal.settingForm.credentials.cardTitle\')">\n\n        {% block swag_paypal_content_card_channel_config_credentials_card_container %}\n            <sw-container>\n\n                {% block swag_paypal_content_card_channel_config_credentials_card_container_settings %}\n                    <div v-if="actualConfigData" class="swag-paypal-settings-credentials-fields">\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_client_id %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.clientId\']"\n                                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.clientId\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="SwagPayPal.settings.clientId"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'swag-paypal.settingForm.credentials.clientId.label\')"\n                                                   :helpText="$tc(\'swag-paypal.settingForm.credentials.clientId.tooltipText\')"\n                                                   :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                   :value="props.currentValue"\n                                                   :error="clientIdErrorState"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_client_secret %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.clientSecret\']"\n                                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.clientSecret\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="SwagPayPal.settings.clientSecret"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'swag-paypal.settingForm.credentials.clientSecret.label\')"\n                                                   :helpText="$tc(\'swag-paypal.settingForm.credentials.clientSecret.tooltipText\')"\n                                                   :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                   :value="props.currentValue"\n                                                   :error="clientSecretErrorState"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_actions_get_credentials %}\n                            <template v-if="acl.can(\'swag_paypal.editor\')">\n                                <a class="sw-button"\n                                   target="_blank"\n                                   :href="onboardingUrlLive"\n                                   :disabled="!acl.can(\'swag_paypal.editor\')"\n                                   data-paypal-onboard-complete="onboardingCallbackLive"\n                                   data-paypal-button="true">\n                                    {{ $tc(\'swag-paypal.settingForm.credentials.button.title\') }}\n                                </a>\n                            </template>\n\n                            <template v-else>\n                                <sw-button :disabled="true">\n                                    {{ $tc(\'swag-paypal.settingForm.credentials.button.titleSandbox\') }}\n                                </sw-button>\n                            </template>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_actions_test %}\n                            <sw-button-process v-model="isTestLiveSuccessful"\n                                               :isLoading="isTestingLive"\n                                               :disabled="testLiveButtonDisabled"\n                                               @click="onTest(false)">\n                                {{ $tc(\'swag-paypal.settingForm.testLive\') }}\n                            </sw-button-process>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_sandbox %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.sandbox\']"\n                                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.sandbox\']"\n                                                :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                <template #content="props">\n                                    <sw-switch-field name="SwagPayPal.settings.sandbox"\n                                                     :mapInheritance="props"\n                                                     :label="$tc(\'swag-paypal.settingForm.credentials.sandbox.label\')"\n                                                     :helpText="$tc(\'swag-paypal.settingForm.credentials.sandbox.tooltipText\')"\n                                                     :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                     :value="props.currentValue"\n                                                     @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_client_id_sandbox %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.clientIdSandbox\']"\n                                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.clientIdSandbox\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="SwagPayPal.settings.clientIdSandbox"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'swag-paypal.settingForm.credentials.clientIdSandbox.label\')"\n                                                   :helpText="$tc(\'swag-paypal.settingForm.credentials.clientIdSandbox.tooltipText\')"\n                                                   :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                   :value="props.currentValue"\n                                                   :error="clientIdSandboxErrorState"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_client_secret_sandbox %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.clientSecretSandbox\']"\n                                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.clientSecretSandbox\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="SwagPayPal.settings.clientSecretSandbox"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'swag-paypal.settingForm.credentials.clientSecretSandbox.label\')"\n                                                   :helpText="$tc(\'swag-paypal.settingForm.credentials.clientSecretSandbox.tooltipText\')"\n                                                   :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                   :value="props.currentValue"\n                                                   :error="clientSecretSandboxErrorState"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_actions_get_credentials_sandbox %}\n                            <template v-if="acl.can(\'swag_paypal.editor\')">\n                                <a class="sw-button"\n                                   target="_blank"\n                                   :href="onboardingUrlSandbox"\n                                   :disabled="!acl.can(\'swag_paypal.editor\')"\n                                   data-paypal-onboard-complete="onboardingCallbackSandbox"\n                                   data-paypal-button="true">\n                                    {{ $tc(\'swag-paypal.settingForm.credentials.button.titleSandbox\') }}\n                                </a>\n                            </template>\n\n                            <template v-else>\n                                <sw-button :disabled="true">\n                                    {{ $tc(\'swag-paypal.settingForm.credentials.button.titleSandbox\') }}\n                                </sw-button>\n                            </template>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_actions_test_sandbox %}\n                            <sw-button-process v-model="isTestSandboxSuccessful"\n                                               :isLoading="isTestingSandbox"\n                                               :disabled="testSandboxButtonDisabled"\n                                               @click="onTest(true)">\n                                {{ $tc(\'swag-paypal.settingForm.testSandbox\') }}\n                            </sw-button-process>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </sw-container>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n'},"fn/Y":function(e,n){e.exports='{% block swag_paypal_pos_wizard_customization %}\n    <div v-if="!isLoading"\n         class="swag-paypal-pos-wizard-customization">\n\n        {% block swag_paypal_pos_wizard_customization_name %}\n            <sw-text-field v-model="salesChannel.name"\n                           class="swag-paypal-pos-wizard-customization__name-field"\n                           validation="required"\n                           required\n                           :label="$tc(\'swag-paypal-pos.wizard.customization.salesChannelLabel\')"\n                           :placeholder="$tc(\'sw-sales-channel.detail.placeholderName\')"\n                           @input="forceUpdate">\n            </sw-text-field>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_customization_language %}\n            <sw-entity-single-select v-model="salesChannel.languageId"\n                                     entity="language"\n                                     required\n                                     :label="$tc(\'global.entities.language\')"\n                                     @change="changeLanguage">\n            </sw-entity-single-select>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_customization_media_domain %}\n            <sw-url-field v-model="salesChannel.extensions.paypalPosSalesChannel.mediaDomain"\n                          class="swag-paypal-pos-wizard-customization__domain-field"\n                          required\n                          :label="$tc(\'swag-paypal-pos.wizard.customization.labelDomain\')"\n                          :placeholder="$tc(\'swag-paypal-pos.wizard.customization.placeholderDomain\')"\n                          @input="forceUpdate">\n            </sw-url-field>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_connection_success_disclaimer %}\n            <div class="swag-paypal-pos-wizard-customization__subtitle">\n                {{ $tc(\'swag-paypal-pos.wizard.customization.subtitle\') }}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},gisM:function(e,n,t){var a=t("SIsd");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("53391040",a,!0,{})},gwRT:function(e,n){Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:"swag_paypal",key:"swag_paypal",roles:{viewer:{privileges:["sales_channel:read","sales_channel_payment_method:read","system_config:read"],dependencies:[]},editor:{privileges:["sales_channel:update","sales_channel_payment_method:create","sales_channel_payment_method:update","system_config:update","system_config:create","system_config:delete"],dependencies:["swag_paypal.viewer"]}}}),Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:null,key:"sales_channel",roles:{viewer:{privileges:["swag_paypal_pos_sales_channel:read","swag_paypal_pos_sales_channel_run:read","swag_paypal_pos_sales_channel_run:update","swag_paypal_pos_sales_channel_run:create","swag_paypal_pos_sales_channel_run_log:read","sales_channel_payment_method:read"]},editor:{privileges:["swag_paypal_pos_sales_channel:update","swag_paypal_pos_sales_channel_run:delete","payment_method:update"]},creator:{privileges:["swag_paypal_pos_sales_channel:create","payment_method:create","shipping_method:create","delivery_time:create"]},deleter:{privileges:["swag_paypal_pos_sales_channel:delete"]}}})},hXsm:function(e,n){e.exports="{% block swag_paypal_pos_continue_setup %}\n    <sw-card :title=\"$tc('swag-paypal-pos.detail.overview.continueSetup.cardTitle')\">\n\n        {% block swag_paypal_pos_continue_setup_container %}\n            <div class=\"swag-paypal-pos__continue-setup\">\n\n                {% block swag_paypal_pos_continue_setup_container_headline %}\n                    <h6>{{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.headline') }}</h6>\n                {% endblock %}\n\n                {% block swag_paypal_pos_continue_setup_container_firstLine %}\n                    <p>{{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.firstLine') }}</p>\n                {% endblock %}\n\n                {% block swag_paypal_pos_continue_setup_container_secondLine %}\n                    <p>{{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.secondLine') }}</p>\n                {% endblock %}\n\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_continue_setup_button %}\n            <sw-button variant=\"ghost\"\n                       @click=\"onContinueSetup\">\n                {{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.headline') }}\n            </sw-button>\n        {% endblock %}\n\n    </sw-card>\n{% endblock %}\n"},hYJc:function(e,n,t){var a=t("DzBR");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("b19ead2c",a,!0,{})},hgvj:function(e,n,t){var a=t("1Sl5");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("0ef4cf31",a,!0,{})},i1vQ:function(e,n){Shopware.Component.extend("swag-paypal-pos-url-field","sw-url-field",{props:{error:{type:Object,required:!1,default:null}},watch:{error:{handler:function(){this.errorUrl=this.error,null!==this.error&&"undefined"!==this.error||this.checkInput(this.currentValue)},immediate:!0},errorUrl:function(){null!==this.errorUrl&&"undefined"!==this.errorUrl||(this.errorUrl=this.error)}},methods:{checkInput:function(e){this.currentValue=e;var n=/^\s*https?:\/\//;n.test(e)&&(this.currentValue=this.currentValue.replace(n,"")),this.validateCurrentValue()},changeMode:function(){}}})},i7Bf:function(e,n,t){var a=t("meCk");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("7f2b9f33",a,!0,{})},iFLj:function(e,n,t){},iJwy:function(e,n,t){},ifwm:function(e,n,t){},"j5/r":function(e,n,t){var a=t("z6Bd");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("53443104",a,!0,{})},jwF7:function(e,n,t){},k1Kq:function(e,n){e.exports='{% block swag_paypal_pos_boolean_radio %}\n    <sw-radio-field\n        v-model="castedValue"\n        v-bind="$attrs"\n        class="swag-paypal-pos-boolean-radio"\n        :name="name"\n        :options="options">\n    </sw-radio-field>\n{% endblock %}\n'},kTpT:function(e,n,t){var a=t("pwYI");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("c27a709c",a,!0,{})},lA1j:function(e,n){Shopware.Mixin.register("swag-paypal-pos-catch-error",{methods:{catchError:function(e,n){var t=this;this._i18n=this.$root._i18n;var a=e?this.$tc(e):"";try{if(n.response.data&&n.response.data.errors){var s=n.response.data.errors.map((function(e){if("SWAG_PAYPAL_POS__EXISTING_POS_ACCOUNT"===e.code&&(a=t.$tc("swag-paypal-pos.authentication.messageDuplicateError")),e.hasOwnProperty("meta")&&e.meta.hasOwnProperty("parameters")){if(e.meta.parameters.salesChannelIds)return"<br>".concat(e.meta.parameters.salesChannelIds);if(e.meta.parameters.message)return"".concat(e.meta.parameters.message," (").concat(e.meta.parameters.name,")");if(e.meta.parameters.name)return e.meta.parameters.name}return e.detail}),this).join(" / ");s&&(a=a?"".concat(a,": ").concat(s):s)}}finally{this.createNotificationError({message:a})}}}})},lJlm:function(e,n,t){},lu4H:function(e,n,t){var a=t("Cbh8");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("48e9e444",a,!0,{})},meCk:function(e,n,t){},nYtA:function(e,n,t){var a={"./icons-paypal-multicolor.svg":"RgsZ"};function s(e){var n=i(e);return t(n)}function i(e){if(!t.o(a,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return a[e]}s.keys=function(){return Object.keys(a)},s.resolve=i,e.exports=s,s.id="nYtA"},odUu:function(e,n,t){var a=t("ifwm");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("69b80132",a,!0,{})},opui:function(e,n,t){var a=t("As2E");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("38bcc077",a,!0,{})},pwYI:function(e,n,t){},qIpu:function(e,n,t){},"qM/F":function(e,n,t){},qfpb:function(e,n){e.exports='{% block swag_paypal_pos_wizard_finish %}\n    <div class="swag-paypal-pos-wizard-finish">\n\n        {% block swag_paypal_pos_wizard_finish_content %}\n            <div class="swag-paypal-pos-wizard-finish__content">\n\n                {% block swag_paypal_pos_wizard_finish_content_icon %}\n                    <div class="swag-paypal-pos-wizard-finish__icon-wrapper">\n                        <sw-icon class="swag-paypal-pos-wizard-finish__icon"\n                                 name="default-basic-checkmark-line"\n                                 size="80px"\n                                 color="#37D046">\n                        </sw-icon>\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_finish_content_header %}\n                    <div class="swag-paypal-pos-wizard-finish__content-header">\n                        {{ $tc(\'swag-paypal-pos.wizard.finish.header\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_finish_content_description %}\n                    <div class="swag-paypal-pos-wizard-finish__content-description">\n                        <p class="swag-paypal-pos-wizard-finish__first-paragraph">\n                            {{ $tc(\'swag-paypal-pos.wizard.finish.firstParagraph\') }}\n                        </p>\n\n                        <p class="swag-paypal-pos-wizard-finish__second-paragraph">\n                            {{ $tc(\'swag-paypal-pos.wizard.finish.secondParagraph\') }}\n                        </p>\n                    </div>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},rpql:function(e,n,t){},rxNa:function(e,n){e.exports='{% block swag_paypal_pos_wizard_product_selection %}\n    <div class="swag-paypal-pos-wizard-product-selection">\n\n        {% block swag_paypal_pos_wizard_product_selection_info %}\n            <p class="swag-paypal-pos-wizard-product-selection__info">\n                {{ $tc(\'swag-paypal-pos.wizard.productSelection.info\') }}\n            </p>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_product_selection_sales_channel_toggle %}\n            <sw-switch-field v-model="hasClone"\n                             class="swag-paypal-pos-wizard-product-selection__clone-switch"\n                             bordered\n                             :label="$tc(\'swag-paypal-pos.wizard.productSelection.labelToggle\')"\n                             @change="updateClone">\n            </sw-switch-field>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_product_selection_sales_channel_select %}\n            <sw-entity-single-select v-model="localCloneSalesChannelId"\n                                     class="swag-paypal-pos-wizard-product-selection__saleschannel-select"\n                                     entity="sales_channel"\n                                     :criteria="salesChannelCriteria"\n                                     :disabled="!hasClone"\n                                     :label="$tc(\'swag-paypal-pos.wizard.productSelection.labelSelect\')"\n                                     @input="forceUpdate">\n            </sw-entity-single-select>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},"szT/":function(e,n){e.exports='{% block swag_paypal_pos_getting_started %}\n    <sw-card :title="$tc(\'swag-paypal-pos.gettingStarted.cardTitle\')">\n\n        {% block swag_paypal_pos_getting_started_reader %}\n            <sw-container\n                    class="swag-paypal-pos-getting-started__container-reader"\n                    columns="1fr 3fr"\n                    justify="left"\n                    align="center">\n\n                {% block swag_paypal_pos_getting_started_reader_image %}\n                    <img class="swag-paypal-pos-getting-started__image"\n                         :src="\'swagpaypal/static/img/paypal-pos-reader.png\' | asset"\n                         :alt="$tc(\'swag-paypal-pos.gettingStarted.readerImageAlt\')"/>\n                {% endblock %}\n\n                {% block swag_paypal_pos_getting_started_reader_description %}\n                    <div class="swag-paypal-pos-getting-started__description">\n\n                        {% block swag_paypal_pos_getting_started_reader_description_headline %}\n                            <div class="swag-paypal-pos-getting-started__description-headline">\n                                {{ $tc(\'swag-paypal-pos.gettingStarted.readerHeadline\') }}\n                            </div>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_getting_started_reader_description_text %}\n                            <div class="swag-paypal-pos-getting-started__description-text">\n                                {{ $tc(\'swag-paypal-pos.gettingStarted.readerText\') }}\n\n                                {% block swag_paypal_pos_getting_started_reader_description_link %}\n                                    <sw-external-link :href="$tc(\'swag-paypal-pos.gettingStarted.readerLinkTarget\')"\n                                                      class="swag-paypal-pos-getting-started__description-text-link">\n                                        {{ $tc(\'swag-paypal-pos.gettingStarted.readerLinkText\') }}\n                                    </sw-external-link>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </sw-container>\n        {% endblock %}\n\n        {% block swag_paypal_pos_getting_started_app %}\n            <sw-container\n                    class="swag-paypal-pos-getting-started__container-app"\n                    columns="1fr 3fr"\n                    justify="left"\n                    align="center">\n\n                {% block swag_paypal_pos_getting_started_app_image %}\n                    <img class="swag-paypal-pos-getting-started__image"\n                         :src="\'swagpaypal/static/img/paypal-pos-app.png\' | asset"\n                         :alt="$tc(\'swag-paypal-pos.gettingStarted.appImageAlt\')"/>\n                {% endblock %}\n\n                {% block swag_paypal_pos_getting_started_app_description %}\n                    <div class="swag-paypal-pos-getting-started__description ">\n\n                        {% block swag_paypal_pos_getting_started_app_description_headline %}\n                            <div class="swag-paypal-pos-getting-started__description-headline">\n                                {{ $tc(\'swag-paypal-pos.gettingStarted.appHeadline\') }}\n                            </div>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_getting_started_app_description_text %}\n                            <div v-html="$tc(\'swag-paypal-pos.gettingStarted.appText\')"\n                                 class="swag-paypal-pos-getting-started__description-text">\n                            </div>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </sw-container>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n'},tVAc:function(e,n,t){var a=t("jwF7");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("213e109f",a,!0,{})},teyW:function(e,n){e.exports='{% block swag_paypal_content_card_channel_config_plus %}\n    <sw-card :title="$tc(\'swag-paypal.settingForm.plus.cardTitle\')">\n\n        {% block swag_paypal_content_card_channel_config_plus_settings %}\n            <div v-if="actualConfigData" class="swag-paypal-settings-plus-fields">\n\n                {% block swag_paypal_content_card_channel_config_plus_settings_onboarding %}\n                    <p v-html="$tc(\'swag-paypal.settingForm.plus.introduction\')"></p>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_plus_settings_checkout_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.plusCheckoutEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.plusCheckoutEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.plusCheckoutEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.plus.plusCheckoutEnabled.label\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n\n                            {% block swag_paypal_content_card_channel_config_behaviour_settings_intent_hint %}\n                                <swag-paypal-settings-hint :hintText="$tc(\'swag-paypal.settingForm.plus.hint\')">\n                                </swag-paypal-settings-hint>\n                            {% endblock %}\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n'},vcRu:function(e,n,t){var a=t("yhYD");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("360c7728",a,!0,{})},vj0j:function(e,n){e.exports='{% block swag_paypal_settings_hint %}\n    <p class="swag-paypal-settings-hint">\n        {{ hintText }}\n    </p>\n{% endblock %}\n'},vk0W:function(e,n){e.exports='{% block swag_paypal_payment_actions_v2 %}\n    <div>\n        <div class="swag-paypal-payment-actions-v2__button-container">\n            <div>\n                {% block swag_paypal_payment_actions_v2_void %}\n                    <sw-button v-if="showVoidButton"\n                               size="small"\n                               :disabled="!acl.can(\'order.editor\')"\n                               @click="spawnModal(\'void\')">\n                        {{ $tc(\'swag-paypal-payment.buttons.label.void\') }}\n                    </sw-button>\n                {% endblock %}\n\n                {% block swag_paypal_payment_actions_v2_capture %}\n                    <sw-button v-if="captureableAmount > 0"\n                               size="small"\n                               :disabled="!acl.can(\'order.editor\')"\n                               @click="spawnModal(\'capture\')">\n                        {{ $tc(\'swag-paypal-payment.buttons.label.capture\') }}\n                    </sw-button>\n                {% endblock %}\n            </div>\n\n            {% block swag_paypal_payment_actions_v2_refund %}\n                <sw-button variant="primary"\n                           size="small"\n                           :disabled="refundableAmount <= 0 || !acl.can(\'order.editor\')"\n                           @click="spawnModal(\'refund\')">\n                    {{ $tc(\'swag-paypal-payment.buttons.label.refund\') }}\n                </sw-button>\n            {% endblock %}\n\n        </div>\n\n        {% block swag_paypal_payment_actions_v2_modal %}\n            {% block swag_paypal_payment_actions_v2_modal_refund %}\n                <swag-paypal-payment-action-v2-refund\n                        v-if="modalType === \'refund\'"\n                        :orderTransactionId="orderTransactionId"\n                        :paypalOrder="paypalOrder"\n                        :paypalPartnerAttributionId="paypalPartnerAttributionId"\n                        @modal-close="closeModal">\n                </swag-paypal-payment-action-v2-refund>\n            {% endblock %}\n\n            {% block swag_paypal_payment_actions_v2_modal_capture %}\n                <swag-paypal-payment-action-v2-capture\n                        v-if="modalType === \'capture\'"\n                        :orderTransactionId="orderTransactionId"\n                        :paypalOrder="paypalOrder"\n                        :paypalPartnerAttributionId="paypalPartnerAttributionId"\n                        :captureableAmount="captureableAmount"\n                        @modal-close="closeModal">\n                </swag-paypal-payment-action-v2-capture>\n            {% endblock %}\n\n            {% block swag_paypal_payment_actions_v2_modal_void %}\n                <swag-paypal-payment-action-v2-void\n                        v-if="modalType === \'void\'"\n                        :orderTransactionId="orderTransactionId"\n                        :paypalOrder="paypalOrder"\n                        :paypalPartnerAttributionId="paypalPartnerAttributionId"\n                        @modal-close="closeModal">\n                </swag-paypal-payment-action-v2-void>\n            {% endblock %}\n        {% endblock %}\n\n    </div>\n{% endblock %}\n'},wHR4:function(e,n,t){},wP8X:function(e,n){e.exports='{% block swag_paypal_content_card_channel_config_installment %}\n    <sw-card :title="$tc(\'swag-paypal.settingForm.installment.cardTitle\')">\n\n        {% block swag_paypal_content_card_channel_config_installment_settings %}\n            <div v-if="actualConfigData" class="swag-paypal-settings-installment-fields">\n\n                {% block swag_paypal_content_card_channel_config_installment_settings_checkout_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.installmentBannerEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.installmentBannerEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.installmentBannerEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.installment.installmentBannerEnabled.label\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n'},wQQF:function(e,n,t){var a=t("6jJW");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("f56b9f6a",a,!0,{})},wqkP:function(e,n,t){var a=t("ZDLx");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("05bc96a6",a,!0,{})},xNo3:function(e,n){e.exports='{% block swag_paypal_pos %}\n    <sw-page class="swag-paypal-pos">\n\n        {% block swag_paypal_pos_header %}\n            <template #smart-bar-header>\n                <h2>\n                    {{ $tc(\'swag-paypal-pos.header\') }}\n                </h2>\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_pos_actions %}\n            <template #smart-bar-actions>\n                <sw-button v-for="button in buttonConfig"\n                           size="small"\n                           :key="button.key"\n                           :disabled="button.disabled"\n                           :isLoading="button.isLoading || isLoading"\n                           :variant="button.variant"\n                           @click="onButtonClick(button.action)">\n                    {{ button.label }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_pos_content %}\n            <template #content>\n                <sw-card-view>\n\n                    {% block swag_paypal_pos_content_tabs %}\n                        <sw-tabs v-if="!isLoading" class="swag-paypal-pos__tabs">\n\n                            {%  block swag_paypal_pos_content_tab_base %}\n                                <sw-tabs-item :route="{ name: \'swag.paypal.pos.detail.overview\', params: { id: $route.params.id } }"\n                                              :title="$tc(\'swag-paypal-pos.tabTitle.overview\')">\n                                    {{ $tc(\'swag-paypal-pos.tabTitle.overview\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n\n                            {%  block swag_paypal_pos_content_tab_synced_products %}\n                                <sw-tabs-item :route="{ name: \'swag.paypal.pos.detail.syncedProducts\', params: { id: $route.params.id } }"\n                                              :title="$tc(\'swag-paypal-pos.tabTitle.syncedProducts\')">\n                                    {{ $tc(\'swag-paypal-pos.tabTitle.syncedProducts\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n\n                            {%  block swag_paypal_pos_content_tab_settings %}\n                                <sw-tabs-item :route="{ name: \'swag.paypal.pos.detail.settings\', params: { id: $route.params.id } }"\n                                              :title="$tc(\'swag-paypal-pos.tabTitle.settings\')">\n                                    {{ $tc(\'swag-paypal-pos.tabTitle.settings\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n\n                            {%  block swag_paypal_pos_content_tab_runs %}\n                                <sw-tabs-item :route="{ name: \'swag.paypal.pos.detail.runs\', params: { id: $route.params.id } }"\n                                              :title="$tc(\'swag-paypal-pos.tabTitle.runs\')">\n                                    {{ $tc(\'swag-paypal-pos.tabTitle.runs\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n\n                            {%  block swag_paypal_pos_content_tab_help %}\n                                <sw-tabs-item href="https://www.izettle.com/help/articles/1083274-what-is-pos"\n                                              target="_blank"\n                                              class="swag-paypal-pos__tab-help"\n                                              :title="$tc(\'swag-paypal-pos.tabTitle.help\')">\n                                    {{ $tc(\'swag-paypal-pos.tabTitle.help\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n                        </sw-tabs>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_content_account %}\n                        <swag-paypal-pos-account :lastRun="lastRun"\n                                                 :salesChannel="salesChannel">\n                        </swag-paypal-pos-account>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_content_card %}\n                        <router-view v-if="!isLoading"\n                                     :key="$route.params.id"\n                                     :salesChannel="salesChannel"\n                                     :cloneSalesChannelId="cloneSalesChannelId"\n                                     :lastRun="lastRun"\n                                     :lastCompleteRun="lastCompleteRun"\n                                     @buttons-update="updateButtons"\n                                     @load-sales-channel="loadSalesChannel"\n                                     @run-update="loadLastRun"\n                                     @update-clone-sales-channel="updateCloneSalesChannel">\n                        </router-view>\n                        <sw-loader v-if="isLoading"></sw-loader>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_disclaimer_hero %}\n                        <sw-card v-show="!isLoading"\n                                 class="swag-paypal-pos__disclaimer-card"\n                                 :hero="true">\n\n                            {% block swag_paypal_pos_disclaimer_container %}\n                                <div class="swag-paypal-pos__disclaimer">\n\n                                    {% block swag_paypal_pos_disclaimer_title %}\n                                        <div class="swag-paypal-pos__disclaimer-title disclaimer-content">\n                                            {{ $tc(\'swag-paypal-pos.detail.disclaimer.headline\') }}\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_disclaimer_subtitle %}\n                                        <div class="swag-paypal-pos__disclaimer-subtitle disclaimer-content">\n                                            {{ $tc(\'swag-paypal-pos.detail.disclaimer.subheadline\') }}\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_disclaimer_link %}\n                                        <a :href="$tc(\'swag-paypal-pos.detail.disclaimer.linkTarget\')"\n                                           class="link swag-paypal-pos__disclaimer-link disclaimer-content"\n                                           target="_blank">\n                                            {{ $tc(\'swag-paypal-pos.detail.disclaimer.linkText\') }}\n                                        </a>\n                                    {% endblock %}\n                                </div>\n                            {% endblock %}\n                        </sw-card>\n                    {% endblock %}\n                </sw-card-view>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n'},yCcN:function(e,n){e.exports='{% block sw_block_field %}\n    <sw-block-field\n            v-bind="$attrs"\n            class="sw-field--textarea"\n            :name="formFieldName">\n\n        <template #sw-field-input="{identification, helpText, error, disabled, setFocusClass, removeFocusClass }">\n            <textarea v-bind="$attrs"\n                      :id="identification"\n                      :name="identification"\n                      :placeholder="placeholder"\n                      :disabled="disabled"\n                      :value="currentValue"\n                      @change="onChange"\n                      @input="onInput"\n                      @focus="setFocusClass"\n                      @blur="removeFocusClass">\n            </textarea>\n        </template>\n    </sw-block-field>\n{% endblock %}\n'},yhYD:function(e,n,t){},z6Bd:function(e,n,t){},z8JU:function(e,n){e.exports='{% block swag_paypal_pos_detail_settings %}\n    <div class="swag-paypal-pos-detail-settings">\n\n        {% block swag_paypal_pos_detail_settings_alert %}\n            <sw-alert class="swag-paypal-pos-detail-settings__save-alert">\n                {{ $tc(\'swag-paypal-pos.detail.settings.saveAlert\') }}\n            </sw-alert>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_settings_basic %}\n            <sw-card :isLoading="isLoading" :title="$tc(\'swag-paypal-pos.detail.settings.titleGeneralSettings\')">\n                <sw-container columns="1fr 200px" gap="0px 30px">\n\n                    {% block swag_paypal_pos_detail_settings_input_name %}\n                        <sw-text-field v-model="salesChannel.name"\n                                       required\n                                       type="text"\n                                       validation="required"\n                                       :error="salesChannelNameError"\n                                       :disabled="!acl.can(\'sales_channel.editor\')"\n                                       :label="$tc(\'sw-sales-channel.detail.labelInputName\')"\n                                       :placeholder="placeholder(salesChannel, \'name\', $tc(\'sw-sales-channel.detail.placeholderName\'))">\n                        </sw-text-field>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_detail_settings_input_active %}\n                        <sw-switch-field v-model="salesChannel.active"\n                                         bordered\n                                         :disabled="!acl.can(\'sales_channel.editor\')"\n                                         :label="$tc(\'sw-sales-channel.detail.labelInputActive\')"\n                                         :helpText="$tc(\'swag-paypal-pos.detail.settings.activeHelpText\')">\n                        </sw-switch-field>\n                    {% endblock %}\n\n                </sw-container>\n\n                {% block swag_paypal_pos_detail_settings_input_media_domain %}\n                    <swag-paypal-pos-url-field v-model="swagPaypalPosSalesChannel.mediaDomain"\n                                               required\n                                               validation="required"\n                                               :error="swagPaypalPosSalesChannelMediaDomainError"\n                                               :disabled="!acl.can(\'sales_channel.editor\')"\n                                               :label="$tc(\'swag-paypal-pos.detail.settings.domain\')"\n                                               :helpText="$tc(\'swag-paypal-pos.detail.settings.domainHelpText\')"\n                                               @input="forceUpdate">\n                    </swag-paypal-pos-url-field>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_settings_input_language %}\n                    <sw-entity-single-select v-model="salesChannel.languageId"\n                                             entity="language"\n                                             required\n                                             :disabled="!acl.can(\'sales_channel.editor\')"\n                                             :label="$tc(\'global.entities.language\')"\n                                             @change="changeLanguage">\n                    </sw-entity-single-select>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_settings_input_product_stream %}\n                    {# ToDo PPI-56 - implement support for product streams #}\n                    <sw-entity-single-select v-if="false"\n                                             v-model="swagPaypalPosSalesChannel.productStreamId"\n                                             entity="product_stream"\n                                             :disabled="!acl.can(\'sales_channel.editor\')"\n                                             :label="$tc(\'swag-paypal-pos.detail.settings.productStream\')"\n                                             @change="forceUpdate">\n                    </sw-entity-single-select>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_settings_sync %}\n            <div class="sw-sales-channel-detail-sync">\n                <sw-card :isLoading="isLoading" :title="$tc(\'swag-paypal-pos.detail.settings.titleSync\')">\n\n                    {% block swag_paypal_pos_detail_settings_sync_input %}\n                        <sw-radio-field\n                            v-model="salesChannel.extensions.paypalPosSalesChannel.replace"\n                            :label="$tc(\'swag-paypal-pos.wizard.syncLibrary.description\')"\n                            class="swag-paypal-pos-boolean-radio"\n                            :options="optionsReplace"\n                            :disabled="!acl.can(\'sales_channel.editor\')"\n                            @input="forceUpdate">\n                        </sw-radio-field>\n                    {% endblock %}\n\n                </sw-card>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_settings_prices %}\n            <div class="sw-sales-channel-detail-prices">\n                <sw-card :isLoading="isLoading" :title="$tc(\'swag-paypal-pos.detail.settings.titlePrices\')">\n\n                    {% block swag_paypal_pos_detail_settings_prices_input %}\n                        <swag-paypal-pos-boolean-radio\n                            v-model="swagPaypalPosSalesChannel.syncPrices"\n                            class="swag-paypal-pos-detail-settings__sync-prices-input"\n                            :label="$tc(\'swag-paypal-pos.wizard.syncPrices.description\')"\n                            :optionTrue="optionSyncPrices"\n                            :optionFalse="optionNotSyncPrices"\n                            :disabled="!acl.can(\'sales_channel.editor\')"\n                            @input="forceUpdate">\n                        </swag-paypal-pos-boolean-radio>\n                    {% endblock %}\n\n                </sw-card>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_settings_credentials %}\n            <div class="sw-sales-channel-detail-credentials">\n                <sw-card :isLoading="isLoading" :title="$tc(\'swag-paypal-pos.detail.settings.titleCredentials\')">\n\n                    {% block swag_paypal_pos_detail_settings_credentials_apikey %}\n                        <sw-password-field v-model="swagPaypalPosSalesChannel.apiKey"\n                                           class="swag-paypal-pos-detail-settings__apikey-field"\n                                           required\n                                           :label="$tc(\'swag-paypal-pos.authentication.labelApiKey\')"\n                                           :disabled="!acl.can(\'sales_channel.editor\')"\n                                           :placeholder="$tc(\'swag-paypal-pos.authentication.placeholderApiKey\')"\n                                           @input="forceUpdate">\n                            <template #suffix>\n\n                                {% block swag_paypal_pos_detail_settings_credentials_apikey_suffix %}\n                                    <sw-icon name="default-lock-key"\n                                             class="swag-paypal-pos-detail-settings__apikey-suffix"\n                                             size="22px">\n                                    </sw-icon>\n                                {% endblock %}\n                            </template>\n                        </sw-password-field>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_detail_settings_credentials_apikey_description %}\n                        <div class="swag-paypal-pos-detail-settings__apikey-description">\n\n                            {% block swag_paypal_pos_detail_settings_credentials_apikey_description_text %}\n                                <div class="swag-paypal-pos-detail-settings__apikey-description-text">\n                                    {{ $tc(\'swag-paypal-pos.authentication.apiKeyDescription\') }}\n                                </div>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_settings_credentials_apikey_description_link %}\n                                <sw-external-link v-if="acl.can(\'sales_channel.editor\')"\n                                                  :href="apiKeyUrl"\n                                                  class="swag-paypal-pos-detail-settings__apikey-description-link">\n\n                                    {% block swag_paypal_pos_detail_settings_credentials_apikey_description_link_text %}\n                                        {{ $tc(\'swag-paypal-pos.authentication.buttonGenerateKey\') }}\n                                    {% endblock %}\n                                </sw-external-link>\n                            {% endblock %}\n                        </div>\n                    {% endblock %}\n\n                </sw-card>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_settings_options %}\n            <sw-card :title="$tc(\'swag-paypal-pos.detail.settings.optionsTitle\')" :isLoading="isLoading">\n                <template #grid>\n                    <sw-container rows="auto auto">\n\n                        {% block swag_paypal_pos_detail_settings_options_reset %}\n                            <sw-card-section>\n                                <sw-container columns="1fr 175px" gap="0px 30px" class="swag-paypal-pos-detail-settings__reset-sync">\n\n                                    {% block sw_sales_channel_detail_base_options_reset_text %}\n                                        <div class="swag-paypal-pos-detail-settings__options-description-text">\n                                            {{ $tc(\'swag-paypal-pos.detail.settings.reset.descriptionText\') }}\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block sw_sales_channel_detail_base_options_reset_button %}\n                                        <div class="swag-paypal-pos-detail-settings__options-button">\n                                            <sw-button size="small"\n                                                       :disabled="!acl.can(\'sales_channel.editor\')"\n                                                       @click="showResetModal = true">\n                                                {{ $tc(\'swag-paypal-pos.detail.settings.reset.buttonTitle\') }}\n                                            </sw-button>\n                                        </div>\n                                    {% endblock %}\n\n                                </sw-container>\n                            </sw-card-section>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_detail_settings_options_delete %}\n                            <sw-card-section divider="top">\n                                <sw-container columns="1fr 175px" gap="0px 30px" class="sw-sales-channel-detail-settings__delete-sales-channel">\n\n                                    {% block sw_sales_channel_detail_base_options_delete_text %}\n                                        <div class="swag-paypal-pos-detail-settings__options-description-text">\n                                            <strong>{{ $tc(\'global.default.warning\') }}</strong>\n                                            {{ $tc(\'sw-sales-channel.detail.textDeleteSalesChannelWarning\') }}\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block sw_sales_channel_detail_base_options_delete_button %}\n                                        <div class="swag-paypal-pos-detail-settings__options-button">\n                                            <sw-button\n                                                variant="danger"\n                                                size="small"\n                                                :disabled="!acl.can(\'sales_channel.deleter\')"\n                                                @click="showDeleteModal = true">\n                                                {{ $tc(\'sw-sales-channel.detail.buttonDelete\') }}\n                                            </sw-button>\n                                        </div>\n                                    {% endblock %}\n\n                                </sw-container>\n                            </sw-card-section>\n                        {% endblock %}\n\n                    </sw-container>\n                </template>\n\n                {% block swag_paypal_pos_detail_settings_options_reset_modal %}\n                    <sw-modal v-if="showResetModal"\n                              class="swag-paypal-pos-detail-settings__reset-sync-modal"\n                              ref="modal"\n                              variant="small"\n                              :title="$tc(\'swag-paypal-pos.detail.settings.reset.modalTitle\')"\n                              @modal-close="showResetModal = false">\n\n                        {% block swag_paypal_pos_detail_settings_options_reset_modal_confirmtext %}\n                            <p class="swag-paypal-pos-detail-settings__reset-modal-confirm-text">\n                                {{ $tc(\'swag-paypal-pos.detail.settings.reset.modalConfirmText\') }}\n                            </p>\n                            <p class="swag-paypal-pos-detail-settings__reset-modal-name">\n                                <strong>{{ placeholder(salesChannel, \'name\') }}</strong>\n                            </p>\n                            <p>{{ $tc(\'swag-paypal-pos.detail.settings.reset.modalTextInfo\') }}</p>\n                        {% endblock %}\n\n                        {% block sw_sales_channel_detail_options_reset_modal_footer %}\n                            <template #modal-footer>\n\n                                {% block swag_paypal_pos_detail_settings_options_reset_modal_abort %}\n                                    <sw-button size="small" @click="showResetModal = false">\n                                        {{ $tc(\'global.default.cancel\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_detail_settings_options_reset_modal_confirm %}\n                                    <sw-button size="small"\n                                               variant="danger"\n                                               @click="onConfirmReset">\n                                        {{ $tc(\'swag-paypal-pos.detail.settings.reset.modalButtonConfirm\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                            </template>\n                        {% endblock %}\n\n                    </sw-modal>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_settings_options_delete_modal %}\n                    <sw-modal v-if="showDeleteModal"\n                              class="sw-sales-channel-detail-settings__delete-modal"\n                              ref="modal"\n                              variant="small"\n                              :title="$tc(\'sw-sales-channel.detail.deleteModalTitle\')"\n                              @modal-close="showDeleteModal = false">\n\n                        {% block swag_paypal_pos_detail_settings_options_delete_modal_confirmtext %}\n                            <p class="sw-sales-channel-detail-settings__delete-modal-confirm-text">\n                                {{ $tc(\'sw-sales-channel.detail.textConfirmDelete\') }}\n                            </p>\n                            <p class="sw-sales-channel-detail-settings__delete-modal-name">\n                                <strong>{{ placeholder(salesChannel, \'name\') }}</strong>\n                            </p>\n                            <p>{{ $tc(\'sw-sales-channel.detail.textDeleteInfo\') }}</p>\n                        {% endblock %}\n\n                        {% block sw_sales_channel_detail_options_delete_modal_footer %}\n                            <template #modal-footer>\n\n                                {% block swag_paypal_pos_detail_settings_options_delete_modal_abort %}\n                                    <sw-button size="small" @click="showDeleteModal = false">\n                                        {{ $tc(\'global.default.cancel\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_detail_settings_options_delete_modal_confirm %}\n                                    <sw-button size="small"\n                                               variant="danger"\n                                               @click="onConfirmDelete">\n                                        {{ $tc(\'sw-sales-channel.detail.buttonConfirmDelete\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                            </template>\n                        {% endblock %}\n\n                    </sw-modal>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n'},zrgI:function(e,n,t){var a=t("lJlm");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("SZ7m").default)("965fe1da",a,!0,{})},zzyi:function(e,n){e.exports='{% block swag_paypal_pos_status_view %}\n    <swag-paypal-pos-status :disabled="disabled"\n                            :disabledText="$tc(\'swag-paypal-pos.detail.overview.status.disabled\')"\n                            :icon="statusIcon"\n                            :subIcon="statusIconComplete"\n                            :iconAnimated="isSyncing"\n                            :isLoading="isLoading || status === null"\n                            :status="statusTitle"\n                            :showSubStatus="incompleteLastRun"\n                            :title="$tc(\'swag-paypal-pos.detail.overview.titleSync\')"\n                            :variant="statusVariant"\n                            :subVariant="statusCompleteErrorLevel">\n\n        {% block swag_paypal_pos_status_view_actions %}\n            <template #actions>\n                <slot name="actions"></slot>\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_view_detail %}\n            <template #detail v-if="isSyncing">\n\n                {% block swag_paypal_pos_status_view_detail_syncing %}\n                    {{ $tc(\'swag-paypal-pos.detail.overview.status.syncingDetail\') }}\n                {% endblock %}\n            </template>\n            <template #detail v-else-if="lastFinishedRun">\n                <div>\n\n                    {% block swag_paypal_pos_status_view_detail_static %}\n                        {{ $tc(\'swag-paypal-pos.detail.overview.status.lastSynced\') }}:\n                        {{ lastFinishedRun.updatedAt | date({\n                                hour: \'2-digit\',\n                                minute: \'2-digit\',\n                                second: \'2-digit\',\n                                day: \'2-digit\',\n                                month: \'short\',\n                                year: \'numeric\'\n                            })\n                        }}\n                    {% endblock %}\n                </div>\n\n                {% block swag_paypal_pos_status_view_detail_errors %}\n                    <sw-alert v-if="syncErrors"\n                              variant="error"\n                              :closable="true"\n                              :title="$tc(\'swag-paypal-pos.detail.overview.syncErrorTitle\')">\n                        <ul>\n                            <li v-for="error in syncErrors">{{ error.detail }} ({{ error.code }})</li>\n                        </ul>\n                    </sw-alert>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_view_substatus %}\n            <template #substatus v-if="incompleteLastRun">\n                {{ $tc(\'swag-paypal-pos.detail.overview.status.lastSyncedComplete\') }}:\n                {{ lastCompleteRun.updatedAt | date({\n                        hour: \'2-digit\',\n                        minute: \'2-digit\',\n                        second: \'2-digit\',\n                        day: \'2-digit\',\n                        month: \'short\',\n                        year: \'numeric\'\n                    })\n                }}\n            </template>\n        {% endblock %}\n    </swag-paypal-pos-status>\n{% endblock %}\n'}});